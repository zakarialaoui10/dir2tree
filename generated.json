{
  ".github": {
    "workflows": {
      "Master_txt": {
        "content": "name: Node.js CI\r\non:\r\n  push:\r\n    branches: [ \"main\" ]\r\n  pull_request: \r\n    branches: [ \"main\" ]\r\njobs:\r\n  build:\r\n    permissions:\r\n      contents: write \r\n    runs-on: ubuntu-latest\r\n    strategy:\r\n      matrix:\r\n        node-version: [18.x]\r\n    steps:\r\n    - uses: actions/checkout@v3\r\n    - name: Use Node.js ${{ matrix.node-version }}\r\n      uses: actions/setup-node@v3\r\n      with:\r\n        node-version: ${{ matrix.node-version }}\r\n        cache: 'npm'\r\n    - run: npm ci\r\n    - run: npm start\r\n    - name: Commit & Push\r\n      run: |\r\n          git config user.name github-actions\r\n          git config user.email github-actions@github.com\r\n          git add -A .\r\n          git commit -m \"generated\"\r\n          git push\r\n      env:\r\n        GITHUB_TOKEN: ${{ secrets.GH_PAT }}\r\n",
        "stats": {
          "length": 792,
          "size": 0.7734375,
          "lines": 33
        },
        "metadata": {
          "created": "2023-10-27T18:31:55.897Z",
          "modified": "2023-10-27T18:31:55.897Z"
        }
      },
      "Slave_txt": {
        "content": "name: Node.js App CI\r\n  \r\non:    \r\n  push: \r\n    branches:\r\n      - main\r\njobs:\r\n  build:\r\n    permissions :\r\n      contents : write\r\n    runs-on: ubuntu-latest\r\n\r\n    steps:\r\n      - name: Checkout code\r\n        uses: actions/checkout@v2\r\n        with:\r\n          ref: ${{ github.head_ref }}\r\n\r\n      - name: Set up Node.js\r\n        uses: actions/setup-node@v2.1.5\r\n        with:\r\n          node-version: 14\r\n\r\n      - name: Generate Directory Tree\r\n        uses: zakarialaoui10/dir2tree@main\r\n      - name: Commit & Push\r\n        run: |\r\n          git config user.name github-actions\r\n          git config user.email github-actions@github.com\r\n          git add -A .\r\n          git commit -m \"generated\"\r\n          git push\r\n      - name: Log CONFIG\r\n        run: |\r\n           echo \"CONFIG: $CONFIG\"\r\n        env:\r\n          CUSTOM_TOKEN: ${{ secrets.CUSTOM_TOKEN }}\r\n          CONFIG : '{\"key1\": \"value1\", \"key2\": \"value2\"}' \r\n        \r\n",
        "stats": {
          "length": 941,
          "size": 0.9189453125,
          "lines": 40
        },
        "metadata": {
          "created": "2023-10-27T18:31:55.897Z",
          "modified": "2023-10-27T18:31:55.897Z"
        }
      },
      "npm publish_yml": {
        "content": "name: Publish Node.js Package\r\n \r\non:\r\n  release:\r\n    types: [created]\r\n\r\njobs:\r\n  build:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v3\r\n      - uses: actions/setup-node@v3\r\n        with:\r\n          node-version: 16\r\n      - run: npm ci\r\n\r\n  publish-gpr:\r\n    needs: build\r\n    runs-on: ubuntu-latest\r\n    permissions:\r\n      contents: read\r\n      packages: write\r\n    steps:\r\n      - uses: actions/checkout@v3\r\n      - uses: actions/setup-node@v3\r\n        with:\r\n          node-version: 16\r\n          registry-url: https://npm.pkg.github.com/\r\n      - run: npm ci\r\n      - run: npm publish\r\n        env:\r\n          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}\r\n",
        "stats": {
          "length": 687,
          "size": 0.6708984375,
          "lines": 33
        },
        "metadata": {
          "created": "2023-10-27T18:31:55.897Z",
          "modified": "2023-10-27T18:31:55.897Z"
        }
      }
    }
  },
  "addons": {
    "callbacks": {
      "Crypto_js": {
        "content": "",
        "stats": {
          "length": 0,
          "size": 0,
          "lines": 1
        },
        "metadata": {
          "created": "2023-10-27T18:31:55.905Z",
          "modified": "2023-10-27T18:31:55.905Z"
        }
      },
      "Highlight_js": {
        "content": "const {require_if_installed}=require(\"../utils/index.js\");\r\nconst path=require(\"path\");\r\nconst fs=require(\"fs\");\r\nconst hljs=require_if_installed(\"highlight.Js\");",
        "stats": {
          "length": 162,
          "size": 0.158203125,
          "lines": 4
        },
        "metadata": {
          "created": "2023-10-27T18:31:55.905Z",
          "modified": "2023-10-27T18:31:55.905Z"
        }
      },
      "Marked_js": {
        "content": "const {require_if_installed}=require(\"../utils/index.js\");\r\nconst path=require(\"path\");\r\nconst fs=require(\"fs\");\r\nconst marked=require_if_installed(\"marked\");\r\nconst markdown_to_html=(filePath,fileInfo)=>{\r\n  const extension = path.basename(filePath).split(\".\")[1];\r\n  if(marked && extension==\"md\")fileInfo.html=marked.parse(fs.readFileSync(filePath,\"utf-8\"));\r\n}\r\nmodule.exports={markdown_to_html}",
        "stats": {
          "length": 398,
          "size": 0.388671875,
          "lines": 9
        },
        "metadata": {
          "created": "2023-10-27T18:31:55.905Z",
          "modified": "2023-10-27T18:31:55.905Z"
        }
      },
      "MathJax_js": {
        "content": "",
        "stats": {
          "length": 0,
          "size": 0,
          "lines": 1
        },
        "metadata": {
          "created": "2023-10-27T18:31:55.905Z",
          "modified": "2023-10-27T18:31:55.905Z"
        }
      },
      "xlsx_js": {
        "content": "",
        "stats": {
          "length": 0,
          "size": 0,
          "lines": 1
        },
        "metadata": {
          "created": "2023-10-27T18:31:55.905Z",
          "modified": "2023-10-27T18:31:55.905Z"
        }
      }
    },
    "utils": {
      "index_js": {
        "content": "function require_if_installed(pckg) {\r\n    try {\r\n      return require(pckg);\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\nmodule.exports={require_if_installed}",
        "stats": {
          "length": 167,
          "size": 0.1630859375,
          "lines": 8
        },
        "metadata": {
          "created": "2023-10-27T18:31:55.905Z",
          "modified": "2023-10-27T18:31:55.905Z"
        }
      }
    },
    "index_js": {
      "content": "const {markdown_to_html}=require(\"./callbacks/Marked.js\")\r\nmodule.exports={markdown_to_html}\r\n",
      "stats": {
        "length": 94,
        "size": 0.091796875,
        "lines": 3
      },
      "metadata": {
        "created": "2023-10-27T18:31:55.905Z",
        "modified": "2023-10-27T18:31:55.905Z"
      }
    },
    "package_json": {
      "content": "{\r\n  \"name\": \"@dir2tree/addons\",\r\n  \"version\": \"0.1.0\",\r\n  \"description\": \"\",\r\n  \"main\": \"index.js\",\r\n  \"scripts\": {\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\r\n  },\r\n  \"author\": \"zakaria elalaoui\",\r\n  \"license\": \"MIT\"\r\n}\r\n",
      "stats": {
        "length": 239,
        "size": 0.2333984375,
        "lines": 12
      },
      "metadata": {
        "created": "2023-10-27T18:31:55.905Z",
        "modified": "2023-10-27T18:31:55.905Z"
      }
    }
  },
  "Automation": {
    "Auth": {
      "Schema_gql": {
        "content": "\r\n",
        "stats": {
          "length": 2,
          "size": 0.001953125,
          "lines": 2
        },
        "metadata": {
          "created": "2023-10-27T18:31:55.897Z",
          "modified": "2023-10-27T18:31:55.897Z"
        }
      }
    },
    "index_js": {
      "content": "import path from \"path\" \r\nimport dir2tree from \"../dist/index.mjs\"\r\nconst ROOT = path.join(process.cwd(),'.');\r\nconst TARGET = path.join(process.cwd(),\".\");\r\nconst MyTree = dir2tree(ROOT,{\r\n  fileContent:true,\r\n  sortBy:\"extension\",\r\n  skipFile:[\"ger.md\"],\r\n  skipFolder:[\".git\",\"node_modules\"],\r\n  skipExtension:[\"json\"],\r\n},[]);\r\nconsole.log(MyTree.tree)\r\nMyTree.write(TARGET,\"generated.json\")\r\n\r\n",
      "stats": {
        "length": 399,
        "size": 0.3896484375,
        "lines": 15
      },
      "metadata": {
        "created": "2023-10-27T18:31:55.897Z",
        "modified": "2023-11-02T14:51:00.678Z"
      }
    },
    "package_json": {
      "content": "{\r\n  \"name\": \"automation\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"\",\r\n  \"main\": \"index.js\",\r\n  \"type\": \"module\",\r\n  \"scripts\": {\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\r\n  },\r\n  \"author\": \"\",\r\n  \"license\": \"MIT\"\r\n}\r\n",
      "stats": {
        "length": 238,
        "size": 0.232421875,
        "lines": 13
      },
      "metadata": {
        "created": "2023-10-28T11:28:41.090Z",
        "modified": "2023-11-02T08:10:49.109Z"
      }
    }
  },
  "dist": {
    "index_cjs": {
      "content": "'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar Javascript = {exports: {}};\n\n/*\r\nDevelopped by zakaria elaloui\r\nGithub : https://github.com/zakarialaoui10\r\n*/\n\n(function (module, exports) {\n\tfunction flat_obj(obj,depth=Infinity,separator = '.', replacement = '_') {\r\n\t    const result = {};\r\n\t    let i=0;\r\n\t    function recurse(current, path = []) {\r\n\t        if(i===depth){\r\n\t            Object.assign(result,current);\r\n\t            return ;\r\n\t        }\r\n\t      for (const key in current) {\r\n\t        const value = current[key];\r\n\t        const newPath = [...path, key];\r\n\t        if (typeof value === 'object' && !Array.isArray(value)) {\r\n\t          recurse(value, newPath);\r\n\t        } else {\r\n\t          const flatKey = newPath.join(separator).replace(new RegExp(`\\\\${separator}`, 'g'), replacement);\r\n\t          result[flatKey] = value;\r\n\t        }\r\n\t        i++;\r\n\t      }\r\n\t    }\r\n\t    recurse(obj);\r\n\t    return result;\r\n\t}\r\n\tconst mapfun = (fun, { skip = [], key = false, value = true } = {}, ...X) => {\r\n\t  const Y = X.map((x) => {\r\n\t    if (typeof skip === 'string'||[null,undefined].includes(skip))skip=[skip];\r\n\t      const skipPrimitives = [];\r\n\t      const skipObjects = [];\r\n\t      skip.forEach((element) =>(typeof element===\"object\"&&element !==null)?skipObjects.push(element):skipPrimitives.push(element));\r\n\t        if(skipPrimitives.includes(typeof x)||skipPrimitives.includes(x)) return x;\r\n\t        if(skipObjects.some(n=>x instanceof n))return x;\r\n\t    if (x === null) return fun(null);\r\n\t    if (['number', 'string', 'boolean', 'bigint', 'undefined'].includes(typeof x)) return fun(x);\r\n\t    if (typeof(x)===\"symbol\") throw new Error('symbols are not supported yet !');\r\n\t    if (x instanceof Array) return x.map((n) => mapfun(fun,{},n));\r\n\t    if (ArrayBuffer.isView(x)) return Array.from(x).map((n) => fun(n));\r\n\t    if (x instanceof Set) return new Set(mapfun(fun,{},...[...x]));\r\n\t    if (x instanceof WeakSet) throw new Error('WeakSets not supported yet !');\r\n\t    if (x instanceof WeakMap) throw new Error('WeakMaps not supported yet !');\r\n\t    if (x instanceof Map) return new Map([...x].map(n =>{\r\n\t        return [\r\n\t            key ? mapfun(fun,{},n[0]) : n[0],\r\n\t            value ? mapfun(fun,{},n[1]) : n[1],\r\n\t            ]\r\n\t    }));\r\n\t    if (x instanceof Object) return Object.fromEntries(\r\n\t      Object.entries(x).map(([KEY, VALUE]) => [\r\n\t        key?mapfun(fun,{},KEY):KEY,\r\n\t        value?mapfun(fun,{},VALUE):VALUE\r\n\t      ])\r\n\t    )\r\n\t    else throw new Error('Uncategorised data');\r\n\t  });\r\n\t    return Y.length === 1 ? Y[0] : Y;\r\n\t};\r\n\t{\r\n\t  module.exports = {mapfun,flat_obj} ;\r\n\t} \n} (Javascript));\n\nvar JavascriptExports = Javascript.exports;\n\nfunction should_skip_file(filePath) {\r\n    const normalizedPath = path.normalize(filePath);\r\n    if (\r\n      this?.options?.skip?.folder?.includes(path.basename(normalizedPath)) ||\r\n      this?.options?.skip?.file?.includes(path.basename(normalizedPath)) ||\r\n      this?.options?.skip?.extension?.includes(\r\n        path.extname(normalizedPath).slice(1)\r\n      )\r\n    )return true;\r\n    return false;\r\n  }\r\nfunction should_skip_folder(filePath) {\r\n  if (typeof filePath !== 'string') return false;\r\n  const normalizedPath = path.normalize(filePath);\r\n  if (this?.options?.skipFolder?.includes(path.basename(normalizedPath)))\r\n    return true;\r\n  return false;\r\n  }\n\nfunction is_directory(filePath) {\r\n    return fs.statSync(filePath).isDirectory();\r\n  }\r\nfunction add_to_tree(key, value) {\r\n  const keys = key.split(path.sep);\r\n  const lastKeyIndex = keys.length - 1;\r\n  keys.reduce((subtree, currentKey, index) => {\r\n    if (!subtree[currentKey]) {\r\n      subtree[currentKey] = index === lastKeyIndex ? value : {};\r\n    }\r\n    return subtree[currentKey];\r\n  }, this.tree);\r\n}\n\nfunction sort_files(files, order = 1) {\r\n    return files.sort((a, b) => {\r\n      const filePathA = path.join(this.root, a);\r\n      const filePathB = path.join(this.root, b);\r\n  \r\n      // Check if either of the files is a directory and handle accordingly\r\n      const isDirectoryA = is_directory(filePathA);\r\n      const isDirectoryB = is_directory(filePathB);\r\n  \r\n      if (isDirectoryA && !isDirectoryB) {\r\n        return -1; // Directories come before files\r\n      } else if (!isDirectoryA && isDirectoryB) {\r\n        return 1; // Files come after directories\r\n      }\r\n  \r\n      if (isDirectoryA && isDirectoryB) {\r\n        return a.localeCompare(b); // Sort directories by name\r\n      }\r\n  \r\n      // If both are files, perform the sorting based on your criteria\r\n      const statsA = fs.statSync(filePathA);\r\n      const statsB = fs.statSync(filePathB);\r\n      const extensionA = path.extname(filePathA).slice(1);\r\n      const extensionB = path.extname(filePathB).slice(1);\r\n      const linesA = fs.readFileSync(filePathA, \"utf8\").split(\"\\n\").length;\r\n      const linesB = fs.readFileSync(filePathB, \"utf8\").split(\"\\n\").length;\r\n  \r\n      // Customize sorting based on sortBy option (name, size, created, modified, extension, lines, path, etc.)\r\n      switch (this.sortBy.toLowerCase()) {\r\n        case \"name\":\r\n          return order * a.localeCompare(b);\r\n        case \"size\":\r\n          return order * (statsA.size - statsB.size);\r\n        case \"created\":\r\n          return order * (statsA.birthtime - statsB.birthtime);\r\n        case \"modified\":\r\n          return order * (statsA.mtime.getTime() - statsB.mtime.getTime());\r\n        case \"extension\":\r\n          return order * extensionA.localeCompare(extensionB);\r\n        case \"lines\":\r\n          return order * (linesA - linesB);\r\n        case \"path\":\r\n          return order * filePathB.localeCompare(filePathA);\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n  }\n\nfunction filter_files(files) {\r\n    return files.filter((file) => {\r\n      if (is_directory(path.join(this.root, file))) {\r\n        return true; // Skip directories\r\n      }\r\n      const filePath = path.join(this.root, file);\r\n      const shouldSkip = should_skip_file.call(this, filePath);\r\n      return !shouldSkip;\r\n    });\r\n  }\n\nfunction file_metadata(filePath) {\r\n    const stats = fs.statSync(filePath);\r\n    const metadata = {\r\n      created: stats.birthtime,\r\n      modified: stats.mtime,\r\n    };\r\n    return metadata;\r\n  }\n\nfunction clean_object(obj, keyToRemove) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n      return obj;\r\n    }  \r\n    const result = {};\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        if (key !== keyToRemove) {\r\n          result[key] = clean_object(obj[key], keyToRemove);\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\n\nclass Dir2Tree {\r\n  constructor(root, options = {}, callbacks = {}) {\r\n    this.root = root;\r\n    this.options = options;\r\n    this.callbacks = callbacks;\r\n    this.tree = {};\r\n    this.sortBy = options.sortBy || \"name\";\r\n    this.generate();\r\n  }\r\n  get tree2(){\r\n    return clean_object(this.tree,\"content\")\r\n  }\r\n  generate() {\r\n    const stats = fs.statSync(this.root);\r\n    if (!stats.isDirectory()) return null;\r\n    const files = fs.readdirSync(this.root);\r\n    const FILTRED_FILES = filter_files.call(this, files);\r\n    const SORTED_FILES = sort_files.call(this, FILTRED_FILES);\r\n\r\n    SORTED_FILES.forEach((file) => {\r\n      const filePath = path.join(this.root, file);\r\n      if(should_skip_folder.call(this,file))return;\r\n      const fileStats = fs.statSync(filePath);\r\n      if(fileStats.isDirectory()){\r\n        const subDirectory = new Dir2Tree(\r\n          filePath,\r\n          this.options,\r\n          this.callbacks\r\n        );\r\n        Object.assign(this.tree,{[path.basename(filePath)]:subDirectory.tree});\r\n        return this\r\n      }\r\n      const fileName = path.parse(file).name;\r\n      if (should_skip_file.call(this, filePath)) return;\r\n        if (this.options?.fileContent) {\r\n          this.addFileInfo(filePath, fileName);\r\n        }\r\n      \r\n    });\r\n    //this.tree=tree;\r\n    return this.tree;\r\n  }\r\n  addFileInfo(filePath, fileName) {\r\n    const content = fs.readFileSync(filePath, \"utf8\");\r\n    const fileInfo = {};\r\n    const stats = {};\r\n    const fullName = path.basename(filePath);\r\n    const [name, extension] = fullName.split(\".\");\r\n    const length = fs.statSync(filePath).size;\r\n    const lines = content.split(\"\\n\").length;\r\n    const metadata = file_metadata.call(this, filePath);\r\n    if (this.options?.fileContent) Object.assign(fileInfo, { content });\r\n    if (this.options?.fileExtension) Object.assign(fileInfo, { extension });\r\n    if (this.options?.fileName) Object.assign(fileInfo, { name });\r\n    Object.assign(stats, { length });\r\n    Object.assign(stats, { size: length / 1024 });\r\n    Object.assign(stats, { lines });\r\n    Object.assign(fileInfo, { stats });\r\n    Object.assign(fileInfo, { metadata });\r\n    this?.callbacks?.map((n) => n(filePath, fileInfo));\r\n    add_to_tree.call(this,fileName+\"_\"+extension, fileInfo);\r\n  }\r\n  \r\n  write(Target, filename) {\r\n    const jsonTree = JSON.stringify(this.tree, null, 2); // Pretty-print the JSON\r\n    const filePath = path.join(Target, filename); // Construct the file path\r\n    fs.writeFileSync(filePath, jsonTree, 'utf8');\r\n    console.log(`Tree written to ${filePath}`);\r\n    return this;\r\n  }\r\n  flat(depth=1,separator=\"_\"){\r\n    this.tree=JavascriptExports.flat_obj(this.tree,depth,separator);\r\n    return this;\r\n  }\r\n  reduce(){\r\n    return this;\r\n  }\r\n  sort(){\r\n    return this;\r\n  }\r\n  filter(){\r\n    return this;\r\n  }\r\n  map(callback,options={}){\r\n    this.tree=JavascriptExports.mapfun(callback,options,this.tree);\r\n    return this;\r\n  }\r\n}\r\nconst dir2tree = (root, options, callbacks=[]) => new Dir2Tree(root, options, callbacks);\n\nmodule.exports = dir2tree;\n",
      "stats": {
        "length": 9710,
        "size": 9.482421875,
        "lines": 284
      },
      "metadata": {
        "created": "2023-10-28T11:19:06.972Z",
        "modified": "2023-11-02T14:50:56.033Z"
      }
    },
    "index_mjs": {
      "content": "import fs from 'fs';\nimport path from 'path';\n\nvar Javascript = {exports: {}};\n\n/*\r\nDevelopped by zakaria elaloui\r\nGithub : https://github.com/zakarialaoui10\r\n*/\n\n(function (module, exports) {\n\tfunction flat_obj(obj,depth=Infinity,separator = '.', replacement = '_') {\r\n\t    const result = {};\r\n\t    let i=0;\r\n\t    function recurse(current, path = []) {\r\n\t        if(i===depth){\r\n\t            Object.assign(result,current);\r\n\t            return ;\r\n\t        }\r\n\t      for (const key in current) {\r\n\t        const value = current[key];\r\n\t        const newPath = [...path, key];\r\n\t        if (typeof value === 'object' && !Array.isArray(value)) {\r\n\t          recurse(value, newPath);\r\n\t        } else {\r\n\t          const flatKey = newPath.join(separator).replace(new RegExp(`\\\\${separator}`, 'g'), replacement);\r\n\t          result[flatKey] = value;\r\n\t        }\r\n\t        i++;\r\n\t      }\r\n\t    }\r\n\t    recurse(obj);\r\n\t    return result;\r\n\t}\r\n\tconst mapfun = (fun, { skip = [], key = false, value = true } = {}, ...X) => {\r\n\t  const Y = X.map((x) => {\r\n\t    if (typeof skip === 'string'||[null,undefined].includes(skip))skip=[skip];\r\n\t      const skipPrimitives = [];\r\n\t      const skipObjects = [];\r\n\t      skip.forEach((element) =>(typeof element===\"object\"&&element !==null)?skipObjects.push(element):skipPrimitives.push(element));\r\n\t        if(skipPrimitives.includes(typeof x)||skipPrimitives.includes(x)) return x;\r\n\t        if(skipObjects.some(n=>x instanceof n))return x;\r\n\t    if (x === null) return fun(null);\r\n\t    if (['number', 'string', 'boolean', 'bigint', 'undefined'].includes(typeof x)) return fun(x);\r\n\t    if (typeof(x)===\"symbol\") throw new Error('symbols are not supported yet !');\r\n\t    if (x instanceof Array) return x.map((n) => mapfun(fun,{},n));\r\n\t    if (ArrayBuffer.isView(x)) return Array.from(x).map((n) => fun(n));\r\n\t    if (x instanceof Set) return new Set(mapfun(fun,{},...[...x]));\r\n\t    if (x instanceof WeakSet) throw new Error('WeakSets not supported yet !');\r\n\t    if (x instanceof WeakMap) throw new Error('WeakMaps not supported yet !');\r\n\t    if (x instanceof Map) return new Map([...x].map(n =>{\r\n\t        return [\r\n\t            key ? mapfun(fun,{},n[0]) : n[0],\r\n\t            value ? mapfun(fun,{},n[1]) : n[1],\r\n\t            ]\r\n\t    }));\r\n\t    if (x instanceof Object) return Object.fromEntries(\r\n\t      Object.entries(x).map(([KEY, VALUE]) => [\r\n\t        key?mapfun(fun,{},KEY):KEY,\r\n\t        value?mapfun(fun,{},VALUE):VALUE\r\n\t      ])\r\n\t    )\r\n\t    else throw new Error('Uncategorised data');\r\n\t  });\r\n\t    return Y.length === 1 ? Y[0] : Y;\r\n\t};\r\n\t{\r\n\t  module.exports = {mapfun,flat_obj} ;\r\n\t} \n} (Javascript));\n\nvar JavascriptExports = Javascript.exports;\n\nfunction should_skip_file(filePath) {\r\n    const normalizedPath = path.normalize(filePath);\r\n    if (\r\n      this?.options?.skip?.folder?.includes(path.basename(normalizedPath)) ||\r\n      this?.options?.skip?.file?.includes(path.basename(normalizedPath)) ||\r\n      this?.options?.skip?.extension?.includes(\r\n        path.extname(normalizedPath).slice(1)\r\n      )\r\n    )return true;\r\n    return false;\r\n  }\r\nfunction should_skip_folder(filePath) {\r\n  if (typeof filePath !== 'string') return false;\r\n  const normalizedPath = path.normalize(filePath);\r\n  if (this?.options?.skipFolder?.includes(path.basename(normalizedPath)))\r\n    return true;\r\n  return false;\r\n  }\n\nfunction is_directory(filePath) {\r\n    return fs.statSync(filePath).isDirectory();\r\n  }\r\nfunction add_to_tree(key, value) {\r\n  const keys = key.split(path.sep);\r\n  const lastKeyIndex = keys.length - 1;\r\n  keys.reduce((subtree, currentKey, index) => {\r\n    if (!subtree[currentKey]) {\r\n      subtree[currentKey] = index === lastKeyIndex ? value : {};\r\n    }\r\n    return subtree[currentKey];\r\n  }, this.tree);\r\n}\n\nfunction sort_files(files, order = 1) {\r\n    return files.sort((a, b) => {\r\n      const filePathA = path.join(this.root, a);\r\n      const filePathB = path.join(this.root, b);\r\n  \r\n      // Check if either of the files is a directory and handle accordingly\r\n      const isDirectoryA = is_directory(filePathA);\r\n      const isDirectoryB = is_directory(filePathB);\r\n  \r\n      if (isDirectoryA && !isDirectoryB) {\r\n        return -1; // Directories come before files\r\n      } else if (!isDirectoryA && isDirectoryB) {\r\n        return 1; // Files come after directories\r\n      }\r\n  \r\n      if (isDirectoryA && isDirectoryB) {\r\n        return a.localeCompare(b); // Sort directories by name\r\n      }\r\n  \r\n      // If both are files, perform the sorting based on your criteria\r\n      const statsA = fs.statSync(filePathA);\r\n      const statsB = fs.statSync(filePathB);\r\n      const extensionA = path.extname(filePathA).slice(1);\r\n      const extensionB = path.extname(filePathB).slice(1);\r\n      const linesA = fs.readFileSync(filePathA, \"utf8\").split(\"\\n\").length;\r\n      const linesB = fs.readFileSync(filePathB, \"utf8\").split(\"\\n\").length;\r\n  \r\n      // Customize sorting based on sortBy option (name, size, created, modified, extension, lines, path, etc.)\r\n      switch (this.sortBy.toLowerCase()) {\r\n        case \"name\":\r\n          return order * a.localeCompare(b);\r\n        case \"size\":\r\n          return order * (statsA.size - statsB.size);\r\n        case \"created\":\r\n          return order * (statsA.birthtime - statsB.birthtime);\r\n        case \"modified\":\r\n          return order * (statsA.mtime.getTime() - statsB.mtime.getTime());\r\n        case \"extension\":\r\n          return order * extensionA.localeCompare(extensionB);\r\n        case \"lines\":\r\n          return order * (linesA - linesB);\r\n        case \"path\":\r\n          return order * filePathB.localeCompare(filePathA);\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n  }\n\nfunction filter_files(files) {\r\n    return files.filter((file) => {\r\n      if (is_directory(path.join(this.root, file))) {\r\n        return true; // Skip directories\r\n      }\r\n      const filePath = path.join(this.root, file);\r\n      const shouldSkip = should_skip_file.call(this, filePath);\r\n      return !shouldSkip;\r\n    });\r\n  }\n\nfunction file_metadata(filePath) {\r\n    const stats = fs.statSync(filePath);\r\n    const metadata = {\r\n      created: stats.birthtime,\r\n      modified: stats.mtime,\r\n    };\r\n    return metadata;\r\n  }\n\nfunction clean_object(obj, keyToRemove) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n      return obj;\r\n    }  \r\n    const result = {};\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        if (key !== keyToRemove) {\r\n          result[key] = clean_object(obj[key], keyToRemove);\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\n\nclass Dir2Tree {\r\n  constructor(root, options = {}, callbacks = {}) {\r\n    this.root = root;\r\n    this.options = options;\r\n    this.callbacks = callbacks;\r\n    this.tree = {};\r\n    this.sortBy = options.sortBy || \"name\";\r\n    this.generate();\r\n  }\r\n  get tree2(){\r\n    return clean_object(this.tree,\"content\")\r\n  }\r\n  generate() {\r\n    const stats = fs.statSync(this.root);\r\n    if (!stats.isDirectory()) return null;\r\n    const files = fs.readdirSync(this.root);\r\n    const FILTRED_FILES = filter_files.call(this, files);\r\n    const SORTED_FILES = sort_files.call(this, FILTRED_FILES);\r\n\r\n    SORTED_FILES.forEach((file) => {\r\n      const filePath = path.join(this.root, file);\r\n      if(should_skip_folder.call(this,file))return;\r\n      const fileStats = fs.statSync(filePath);\r\n      if(fileStats.isDirectory()){\r\n        const subDirectory = new Dir2Tree(\r\n          filePath,\r\n          this.options,\r\n          this.callbacks\r\n        );\r\n        Object.assign(this.tree,{[path.basename(filePath)]:subDirectory.tree});\r\n        return this\r\n      }\r\n      const fileName = path.parse(file).name;\r\n      if (should_skip_file.call(this, filePath)) return;\r\n        if (this.options?.fileContent) {\r\n          this.addFileInfo(filePath, fileName);\r\n        }\r\n      \r\n    });\r\n    //this.tree=tree;\r\n    return this.tree;\r\n  }\r\n  addFileInfo(filePath, fileName) {\r\n    const content = fs.readFileSync(filePath, \"utf8\");\r\n    const fileInfo = {};\r\n    const stats = {};\r\n    const fullName = path.basename(filePath);\r\n    const [name, extension] = fullName.split(\".\");\r\n    const length = fs.statSync(filePath).size;\r\n    const lines = content.split(\"\\n\").length;\r\n    const metadata = file_metadata.call(this, filePath);\r\n    if (this.options?.fileContent) Object.assign(fileInfo, { content });\r\n    if (this.options?.fileExtension) Object.assign(fileInfo, { extension });\r\n    if (this.options?.fileName) Object.assign(fileInfo, { name });\r\n    Object.assign(stats, { length });\r\n    Object.assign(stats, { size: length / 1024 });\r\n    Object.assign(stats, { lines });\r\n    Object.assign(fileInfo, { stats });\r\n    Object.assign(fileInfo, { metadata });\r\n    this?.callbacks?.map((n) => n(filePath, fileInfo));\r\n    add_to_tree.call(this,fileName+\"_\"+extension, fileInfo);\r\n  }\r\n  \r\n  write(Target, filename) {\r\n    const jsonTree = JSON.stringify(this.tree, null, 2); // Pretty-print the JSON\r\n    const filePath = path.join(Target, filename); // Construct the file path\r\n    fs.writeFileSync(filePath, jsonTree, 'utf8');\r\n    console.log(`Tree written to ${filePath}`);\r\n    return this;\r\n  }\r\n  flat(depth=1,separator=\"_\"){\r\n    this.tree=JavascriptExports.flat_obj(this.tree,depth,separator);\r\n    return this;\r\n  }\r\n  reduce(){\r\n    return this;\r\n  }\r\n  sort(){\r\n    return this;\r\n  }\r\n  filter(){\r\n    return this;\r\n  }\r\n  map(callback,options={}){\r\n    this.tree=JavascriptExports.mapfun(callback,options,this.tree);\r\n    return this;\r\n  }\r\n}\r\nconst dir2tree = (root, options, callbacks=[]) => new Dir2Tree(root, options, callbacks);\n\nexport { dir2tree as default };\n",
      "stats": {
        "length": 9694,
        "size": 9.466796875,
        "lines": 282
      },
      "metadata": {
        "created": "2023-10-28T11:19:06.972Z",
        "modified": "2023-11-02T14:50:56.033Z"
      }
    }
  },
  "src": {
    "utils": {
      "callbacks_js": {
        "content": "",
        "stats": {
          "length": 0,
          "size": 0,
          "lines": 1
        },
        "metadata": {
          "created": "2023-10-27T18:31:56.288Z",
          "modified": "2023-10-27T18:31:56.288Z"
        }
      },
      "filter_js": {
        "content": "import path from 'path';\r\nimport {is_directory} from \"./general.js\";\r\nimport {should_skip_file} from \"./skip.js\";\r\nfunction filter_files(files) {\r\n    return files.filter((file) => {\r\n      if (is_directory(path.join(this.root, file))) {\r\n        return true; // Skip directories\r\n      }\r\n      const filePath = path.join(this.root, file);\r\n      const shouldSkip = should_skip_file.call(this, filePath);\r\n      return !shouldSkip;\r\n    });\r\n  }\r\nexport{filter_files}\r\n",
        "stats": {
          "length": 470,
          "size": 0.458984375,
          "lines": 15
        },
        "metadata": {
          "created": "2023-10-27T18:31:56.288Z",
          "modified": "2023-10-28T10:50:45.884Z"
        }
      },
      "general_js": {
        "content": "import fs from 'fs';\r\nimport path from 'path';\r\nfunction is_directory(filePath) {\r\n    return fs.statSync(filePath).isDirectory();\r\n  }\r\nfunction add_to_tree(key, value) {\r\n  const keys = key.split(path.sep);\r\n  const lastKeyIndex = keys.length - 1;\r\n  keys.reduce((subtree, currentKey, index) => {\r\n    if (!subtree[currentKey]) {\r\n      subtree[currentKey] = index === lastKeyIndex ? value : {};\r\n    }\r\n    return subtree[currentKey];\r\n  }, this.tree);\r\n}\r\nexport{is_directory,add_to_tree}\r\n",
        "stats": {
          "length": 494,
          "size": 0.482421875,
          "lines": 17
        },
        "metadata": {
          "created": "2023-10-27T18:31:56.289Z",
          "modified": "2023-10-28T10:52:09.118Z"
        }
      },
      "object_js": {
        "content": "function clean_object(obj, keyToRemove) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n      return obj;\r\n    }  \r\n    const result = {};\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        if (key !== keyToRemove) {\r\n          result[key] = clean_object(obj[key], keyToRemove);\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  \r\n\r\n  \r\nexport {clean_object}",
        "stats": {
          "length": 394,
          "size": 0.384765625,
          "lines": 18
        },
        "metadata": {
          "created": "2023-11-02T14:07:09.824Z",
          "modified": "2023-11-02T14:50:38.707Z"
        }
      },
      "skip_js": {
        "content": "import path from 'path';\r\nfunction should_skip_file(filePath) {\r\n    const normalizedPath = path.normalize(filePath);\r\n    if (\r\n      this?.options?.skip?.folder?.includes(path.basename(normalizedPath)) ||\r\n      this?.options?.skip?.file?.includes(path.basename(normalizedPath)) ||\r\n      this?.options?.skip?.extension?.includes(\r\n        path.extname(normalizedPath).slice(1)\r\n      )\r\n    )return true;\r\n    return false;\r\n  }\r\nfunction should_skip_folder(filePath) {\r\n  if (typeof filePath !== 'string') return false;\r\n  const normalizedPath = path.normalize(filePath);\r\n  if (this?.options?.skipFolder?.includes(path.basename(normalizedPath)))\r\n    return true;\r\n  return false;\r\n  }\r\nexport{should_skip_file,should_skip_folder}\r\n",
        "stats": {
          "length": 737,
          "size": 0.7197265625,
          "lines": 21
        },
        "metadata": {
          "created": "2023-10-27T18:31:56.289Z",
          "modified": "2023-10-28T10:49:56.691Z"
        }
      },
      "sort_js": {
        "content": "import fs from 'fs';\r\nimport path from 'path';\r\nimport {is_directory} from \"./general.js\";\r\nfunction sort_files(files, order = 1) {\r\n    return files.sort((a, b) => {\r\n      const filePathA = path.join(this.root, a);\r\n      const filePathB = path.join(this.root, b);\r\n  \r\n      // Check if either of the files is a directory and handle accordingly\r\n      const isDirectoryA = is_directory(filePathA);\r\n      const isDirectoryB = is_directory(filePathB);\r\n  \r\n      if (isDirectoryA && !isDirectoryB) {\r\n        return -1; // Directories come before files\r\n      } else if (!isDirectoryA && isDirectoryB) {\r\n        return 1; // Files come after directories\r\n      }\r\n  \r\n      if (isDirectoryA && isDirectoryB) {\r\n        return a.localeCompare(b); // Sort directories by name\r\n      }\r\n  \r\n      // If both are files, perform the sorting based on your criteria\r\n      const statsA = fs.statSync(filePathA);\r\n      const statsB = fs.statSync(filePathB);\r\n      const extensionA = path.extname(filePathA).slice(1);\r\n      const extensionB = path.extname(filePathB).slice(1);\r\n      const linesA = fs.readFileSync(filePathA, \"utf8\").split(\"\\n\").length;\r\n      const linesB = fs.readFileSync(filePathB, \"utf8\").split(\"\\n\").length;\r\n  \r\n      // Customize sorting based on sortBy option (name, size, created, modified, extension, lines, path, etc.)\r\n      switch (this.sortBy.toLowerCase()) {\r\n        case \"name\":\r\n          return order * a.localeCompare(b);\r\n        case \"size\":\r\n          return order * (statsA.size - statsB.size);\r\n        case \"created\":\r\n          return order * (statsA.birthtime - statsB.birthtime);\r\n        case \"modified\":\r\n          return order * (statsA.mtime.getTime() - statsB.mtime.getTime());\r\n        case \"extension\":\r\n          return order * extensionA.localeCompare(extensionB);\r\n        case \"lines\":\r\n          return order * (linesA - linesB);\r\n        case \"path\":\r\n          return order * filePathB.localeCompare(filePathA);\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n  }\r\n\r\nexport{sort_files}\r\n",
        "stats": {
          "length": 2055,
          "size": 2.0068359375,
          "lines": 54
        },
        "metadata": {
          "created": "2023-10-27T18:31:56.290Z",
          "modified": "2023-10-28T10:51:55.164Z"
        }
      },
      "stats_js": {
        "content": "import fs from 'fs';\r\nfunction file_metadata(filePath) {\r\n    const stats = fs.statSync(filePath);\r\n    const metadata = {\r\n      created: stats.birthtime,\r\n      modified: stats.mtime,\r\n    };\r\n    return metadata;\r\n  }\r\nexport{file_metadata}\r\n",
        "stats": {
          "length": 245,
          "size": 0.2392578125,
          "lines": 11
        },
        "metadata": {
          "created": "2023-10-27T18:31:56.290Z",
          "modified": "2023-11-02T10:53:43.259Z"
        }
      }
    },
    "index_js": {
      "content": "import fs from 'fs';\r\nimport path from 'path';\r\nimport { mapfun, flat_obj } from 'mapfun';\r\nimport { should_skip_file, should_skip_folder } from './utils/skip.js';\r\nimport { sort_files } from './utils/sort.js';\r\nimport { filter_files } from './utils/filter.js';\r\nimport { add_to_tree } from './utils/general.js';\r\nimport { file_metadata } from './utils/stats.js';\r\nimport { clean_object } from './utils/object.js';\r\n\r\nclass Dir2Tree {\r\n  constructor(root, options = {}, callbacks = {}) {\r\n    this.root = root;\r\n    this.options = options;\r\n    this.callbacks = callbacks;\r\n    this.tree = {};\r\n    this.sortBy = options.sortBy || \"name\";\r\n    this.generate();\r\n  }\r\n  get tree2(){\r\n    return clean_object(this.tree,\"content\")\r\n  }\r\n  generate() {\r\n    const stats = fs.statSync(this.root);\r\n    if (!stats.isDirectory()) return null;\r\n    const files = fs.readdirSync(this.root);\r\n    const FILTRED_FILES = filter_files.call(this, files);\r\n    const SORTED_FILES = sort_files.call(this, FILTRED_FILES);\r\n\r\n    SORTED_FILES.forEach((file) => {\r\n      const filePath = path.join(this.root, file);\r\n      if(should_skip_folder.call(this,file))return;\r\n      const fileStats = fs.statSync(filePath);\r\n      if(fileStats.isDirectory()){\r\n        const subDirectory = new Dir2Tree(\r\n          filePath,\r\n          this.options,\r\n          this.callbacks\r\n        );\r\n        Object.assign(this.tree,{[path.basename(filePath)]:subDirectory.tree})\r\n        return this\r\n      }\r\n      const fileName = path.parse(file).name;\r\n      if (should_skip_file.call(this, filePath)) return;\r\n        if (this.options?.fileContent) {\r\n          this.addFileInfo(filePath, fileName);\r\n        }\r\n      \r\n    });\r\n    //this.tree=tree;\r\n    return this.tree;\r\n  }\r\n  addFileInfo(filePath, fileName) {\r\n    const content = fs.readFileSync(filePath, \"utf8\");\r\n    const fileInfo = {};\r\n    const stats = {};\r\n    const fullName = path.basename(filePath);\r\n    const [name, extension] = fullName.split(\".\");\r\n    const length = fs.statSync(filePath).size;\r\n    const lines = content.split(\"\\n\").length;\r\n    const metadata = file_metadata.call(this, filePath);\r\n    if (this.options?.fileContent) Object.assign(fileInfo, { content });\r\n    if (this.options?.fileExtension) Object.assign(fileInfo, { extension });\r\n    if (this.options?.fileName) Object.assign(fileInfo, { name });\r\n    Object.assign(stats, { length });\r\n    Object.assign(stats, { size: length / 1024 });\r\n    Object.assign(stats, { lines });\r\n    Object.assign(fileInfo, { stats });\r\n    Object.assign(fileInfo, { metadata });\r\n    this?.callbacks?.map((n) => n(filePath, fileInfo));\r\n    add_to_tree.call(this,fileName+\"_\"+extension, fileInfo);\r\n  }\r\n  \r\n  write(Target, filename) {\r\n    const jsonTree = JSON.stringify(this.tree, null, 2); // Pretty-print the JSON\r\n    const filePath = path.join(Target, filename); // Construct the file path\r\n    fs.writeFileSync(filePath, jsonTree, 'utf8');\r\n    console.log(`Tree written to ${filePath}`);\r\n    return this;\r\n  }\r\n  flat(depth=1,separator=\"_\"){\r\n    this.tree=flat_obj(this.tree,depth,separator);\r\n    return this;\r\n  }\r\n  reduce(){\r\n    return this;\r\n  }\r\n  sort(){\r\n    return this;\r\n  }\r\n  filter(){\r\n    return this;\r\n  }\r\n  map(callback,options={}){\r\n    this.tree=mapfun(callback,options,this.tree);\r\n    return this;\r\n  }\r\n}\r\nconst dir2tree = (root, options, callbacks=[]) => new Dir2Tree(root, options, callbacks);\r\nexport default dir2tree;\r\n",
      "stats": {
        "length": 3453,
        "size": 3.3720703125,
        "lines": 101
      },
      "metadata": {
        "created": "2023-10-27T18:31:56.283Z",
        "modified": "2023-11-02T14:50:45.158Z"
      }
    }
  },
  ".gitignore_gitignore": {
    "content": "node_modules\r\n",
    "stats": {
      "length": 14,
      "size": 0.013671875,
      "lines": 2
    },
    "metadata": {
      "created": "2023-10-27T18:31:55.897Z",
      "modified": "2023-10-27T18:31:55.897Z"
    }
  },
  ".npmignore_npmignore": {
    "content": "action.yml\r\ntest.js\r\n.gitignore\r\nrolllup.config.js\r\nExamples/\r\n.github/\r\nAutomation/\r\naddons/\r\n*.json\r\n",
    "stats": {
      "length": 103,
      "size": 0.1005859375,
      "lines": 10
    },
    "metadata": {
      "created": "2023-10-27T18:31:55.897Z",
      "modified": "2023-10-28T11:59:24.736Z"
    }
  },
  "LICENSE_undefined": {
    "content": "MIT License\r\n\r\nCopyright (c) 2023 ZAKARIA ELALAOUI\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n",
    "stats": {
      "length": 1094,
      "size": 1.068359375,
      "lines": 22
    },
    "metadata": {
      "created": "2023-10-27T18:31:55.897Z",
      "modified": "2023-10-27T18:31:55.897Z"
    }
  },
  "rollup.config_config": {
    "content": "import commonjs from '@rollup/plugin-commonjs';\r\nimport resolve from '@rollup/plugin-node-resolve';\r\nimport { mapfun } from 'mapfun';\r\n\r\nexport default {\r\n  input: 'src/index.js',\r\n  externals: [mapfun],\r\n  output: [{\r\n    file: 'dist/index.cjs',\r\n    format: 'cjs',\r\n  },{\r\n    file: 'dist/index.mjs',\r\n    format: 'es',\r\n  }\r\n],\r\n  globals: {\r\n    mapfun: 'mapfun',\r\n  },\r\n  plugins: [resolve(), commonjs()],\r\n};\r\n",
    "stats": {
      "length": 416,
      "size": 0.40625,
      "lines": 21
    },
    "metadata": {
      "created": "2023-10-28T10:25:32.027Z",
      "modified": "2023-10-28T17:09:13.656Z"
    }
  },
  "generated_json": {
    "content": "{\n  \".github\": {\n    \"workflows\": {}\n  },\n  \"addons\": {\n    \"callbacks\": {},\n    \"utils\": {}\n  },\n  \"Automation\": {\n    \"Auth\": {}\n  },\n  \"dist\": {},\n  \"src\": {\n    \"utils\": {}\n  }\n}",
    "stats": {
      "length": 182,
      "size": 0.177734375,
      "lines": 16
    },
    "metadata": {
      "created": "2023-11-02T14:37:17.691Z",
      "modified": "2023-11-02T14:47:07.672Z"
    }
  },
  "package-lock_json": {
    "content": "{\r\n    \"name\": \"dir2tree\",\r\n    \"version\": \"0.2.2\",\r\n    \"lockfileVersion\": 2,\r\n    \"requires\": true,\r\n    \"packages\": {\r\n        \"\": {\r\n            \"name\": \"dir2tree\",\r\n            \"version\": \"0.2.2\",\r\n            \"license\": \"MIT\",\r\n            \"dependencies\": {\r\n                \"mapfun\": \"^0.9.17\"\r\n            },\r\n            \"devDependencies\": {\r\n                \"@rollup/plugin-commonjs\": \"^25.0.7\",\r\n                \"@rollup/plugin-node-resolve\": \"^15.2.3\",\r\n                \"rollup\": \"^4.1.5\"\r\n            }\r\n        },\r\n        \"node_modules/@jridgewell/sourcemap-codec\": {\r\n            \"version\": \"1.4.15\",\r\n            \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.15.tgz\",\r\n            \"integrity\": \"sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==\",\r\n            \"dev\": true\r\n        },\r\n        \"node_modules/@rollup/plugin-commonjs\": {\r\n            \"version\": \"25.0.7\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-25.0.7.tgz\",\r\n            \"integrity\": \"sha512-nEvcR+LRjEjsaSsc4x3XZfCCvZIaSMenZu/OiwOKGN2UhQpAYI7ru7czFvyWbErlpoGjnSX3D5Ch5FcMA3kRWQ==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"@rollup/pluginutils\": \"^5.0.1\",\r\n                \"commondir\": \"^1.0.1\",\r\n                \"estree-walker\": \"^2.0.2\",\r\n                \"glob\": \"^8.0.3\",\r\n                \"is-reference\": \"1.2.1\",\r\n                \"magic-string\": \"^0.30.3\"\r\n            },\r\n            \"engines\": {\r\n                \"node\": \">=14.0.0\"\r\n            },\r\n            \"peerDependencies\": {\r\n                \"rollup\": \"^2.68.0||^3.0.0||^4.0.0\"\r\n            },\r\n            \"peerDependenciesMeta\": {\r\n                \"rollup\": {\r\n                    \"optional\": true\r\n                }\r\n            }\r\n        },\r\n        \"node_modules/@rollup/plugin-node-resolve\": {\r\n            \"version\": \"15.2.3\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-15.2.3.tgz\",\r\n            \"integrity\": \"sha512-j/lym8nf5E21LwBT4Df1VD6hRO2L2iwUeUmP7litikRsVp1H6NWx20NEp0Y7su+7XGc476GnXXc4kFeZNGmaSQ==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"@rollup/pluginutils\": \"^5.0.1\",\r\n                \"@types/resolve\": \"1.20.2\",\r\n                \"deepmerge\": \"^4.2.2\",\r\n                \"is-builtin-module\": \"^3.2.1\",\r\n                \"is-module\": \"^1.0.0\",\r\n                \"resolve\": \"^1.22.1\"\r\n            },\r\n            \"engines\": {\r\n                \"node\": \">=14.0.0\"\r\n            },\r\n            \"peerDependencies\": {\r\n                \"rollup\": \"^2.78.0||^3.0.0||^4.0.0\"\r\n            },\r\n            \"peerDependenciesMeta\": {\r\n                \"rollup\": {\r\n                    \"optional\": true\r\n                }\r\n            }\r\n        },\r\n        \"node_modules/@rollup/pluginutils\": {\r\n            \"version\": \"5.0.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-5.0.5.tgz\",\r\n            \"integrity\": \"sha512-6aEYR910NyP73oHiJglti74iRyOwgFU4x3meH/H8OJx6Ry0j6cOVZ5X/wTvub7G7Ao6qaHBEaNsV3GLJkSsF+Q==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"@types/estree\": \"^1.0.0\",\r\n                \"estree-walker\": \"^2.0.2\",\r\n                \"picomatch\": \"^2.3.1\"\r\n            },\r\n            \"engines\": {\r\n                \"node\": \">=14.0.0\"\r\n            },\r\n            \"peerDependencies\": {\r\n                \"rollup\": \"^1.20.0||^2.0.0||^3.0.0||^4.0.0\"\r\n            },\r\n            \"peerDependenciesMeta\": {\r\n                \"rollup\": {\r\n                    \"optional\": true\r\n                }\r\n            }\r\n        },\r\n        \"node_modules/@rollup/rollup-android-arm-eabi\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-/fwx6GS8cIbM2rTNyLMxjSCOegHywOdXO+kN9yFy018iCULcKZCyA3xvzw4bxyKbYfdSxQgdhbsl0egNcxerQw==\",\r\n            \"cpu\": [\r\n                \"arm\"\r\n            ],\r\n            \"dev\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"android\"\r\n            ]\r\n        },\r\n        \"node_modules/@rollup/rollup-android-arm64\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-tmXh7dyEt+JEz/NgDJlB1UeL/1gFV0v8qYzUAU42WZH4lmUJ5rp6/HkR2qUNC5jCgYEwd8/EfbHKtGIEfS4CUg==\",\r\n            \"cpu\": [\r\n                \"arm64\"\r\n            ],\r\n            \"dev\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"android\"\r\n            ]\r\n        },\r\n        \"node_modules/@rollup/rollup-darwin-arm64\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-lTDmLxdEVhzI3KCesZUrNbl3icBvPrDv/85JasY5gh4P2eAuDFmM4uj9HC5DdH0anLC0fwJ+1Uzasr4qOXcjRQ==\",\r\n            \"cpu\": [\r\n                \"arm64\"\r\n            ],\r\n            \"dev\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"darwin\"\r\n            ]\r\n        },\r\n        \"node_modules/@rollup/rollup-darwin-x64\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-v6qEHZyjWnIgcc4oiy8AIeFsUJAx+Kg0sLj+RE7ICwv3u7YC/+bSClxAiBASRjMzqsq0Z+I/pfxj+OD8mjBYxg==\",\r\n            \"cpu\": [\r\n                \"x64\"\r\n            ],\r\n            \"dev\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"darwin\"\r\n            ]\r\n        },\r\n        \"node_modules/@rollup/rollup-linux-arm-gnueabihf\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-WngCfwPEDUNbZR1FNO2TCROYUwJvRlbvPi3AS85bDUkkoRDBcjUIz42cuB1j4PKilmnZascL5xTMF/yU8YFayA==\",\r\n            \"cpu\": [\r\n                \"arm\"\r\n            ],\r\n            \"dev\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"linux\"\r\n            ]\r\n        },\r\n        \"node_modules/@rollup/rollup-linux-arm64-gnu\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-Q2A/PEP/UTPTOBwgar3mmCaApahoezai/8e/7f4GCLV6XWCpnU4YwkQQtla7d7nUnc792Ps7g1G0WMovzIknrA==\",\r\n            \"cpu\": [\r\n                \"arm64\"\r\n            ],\r\n            \"dev\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"linux\"\r\n            ]\r\n        },\r\n        \"node_modules/@rollup/rollup-linux-arm64-musl\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-84aBKNAVzTU/eG3tb2+kR4NGRAtm2YVW/KHwkGGDR4z1k4hyrDbuImsfs/6J74t6y0YLOe9HOSu7ejRjzUBGVQ==\",\r\n            \"cpu\": [\r\n                \"arm64\"\r\n            ],\r\n            \"dev\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"linux\"\r\n            ]\r\n        },\r\n        \"node_modules/@rollup/rollup-linux-x64-gnu\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-mldtP9UEBurIq2+GYMdNeiqCLW1fdgf4KdkMR/QegAeXk4jFHkKQl7p0NITrKFVyVqzISGXH5gR6GSTBH4wszw==\",\r\n            \"cpu\": [\r\n                \"x64\"\r\n            ],\r\n            \"dev\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"linux\"\r\n            ]\r\n        },\r\n        \"node_modules/@rollup/rollup-linux-x64-musl\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-36p+nMcSxjAEzfU47+by102HolUtf/EfgBAidocTKAofJMTqG5QD50qzaFLk4QO+z7Qvg4qd0wr99jGAwnKOig==\",\r\n            \"cpu\": [\r\n                \"x64\"\r\n            ],\r\n            \"dev\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"linux\"\r\n            ]\r\n        },\r\n        \"node_modules/@rollup/rollup-win32-arm64-msvc\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-5oxhubo0A3J8aF/tG+6jHBg785HF8/88kl1YnfbDKmnqMxz/EFiAQDH9cq6lbnxofjn8tlq5KiTf0crJGOGThg==\",\r\n            \"cpu\": [\r\n                \"arm64\"\r\n            ],\r\n            \"dev\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"win32\"\r\n            ]\r\n        },\r\n        \"node_modules/@rollup/rollup-win32-ia32-msvc\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-uVQyBREKX9ErofL8KAZ4iVlqzSZOXSIG+BOLYuz5FD+Cg6jh1eLIeUa3Q4SgX0QaTRFeeAgSNqCC+8kZrZBpSw==\",\r\n            \"cpu\": [\r\n                \"ia32\"\r\n            ],\r\n            \"dev\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"win32\"\r\n            ]\r\n        },\r\n        \"node_modules/@rollup/rollup-win32-x64-msvc\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-FQ5qYqRJ2vUBSom3Fos8o/6UvAMOvlus4+HGCAifH1TagbbwVnVVe0o01J1V52EWnQ8kmfpJDJ0FMrfM5yzcSA==\",\r\n            \"cpu\": [\r\n                \"x64\"\r\n            ],\r\n            \"dev\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"win32\"\r\n            ]\r\n        },\r\n        \"node_modules/@types/estree\": {\r\n            \"version\": \"1.0.3\",\r\n            \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.3.tgz\",\r\n            \"integrity\": \"sha512-CS2rOaoQ/eAgAfcTfq6amKG7bsN+EMcgGY4FAFQdvSj2y1ixvOZTUA9mOtCai7E1SYu283XNw7urKK30nP3wkQ==\",\r\n            \"dev\": true\r\n        },\r\n        \"node_modules/@types/resolve\": {\r\n            \"version\": \"1.20.2\",\r\n            \"resolved\": \"https://registry.npmjs.org/@types/resolve/-/resolve-1.20.2.tgz\",\r\n            \"integrity\": \"sha512-60BCwRFOZCQhDncwQdxxeOEEkbc5dIMccYLwbxsS4TUNeVECQ/pBJ0j09mrHOl/JJvpRPGwO9SvE4nR2Nb/a4Q==\",\r\n            \"dev\": true\r\n        },\r\n        \"node_modules/balanced-match\": {\r\n            \"version\": \"1.0.2\",\r\n            \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\r\n            \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\r\n            \"dev\": true\r\n        },\r\n        \"node_modules/brace-expansion\": {\r\n            \"version\": \"2.0.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\r\n            \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"balanced-match\": \"^1.0.0\"\r\n            }\r\n        },\r\n        \"node_modules/builtin-modules\": {\r\n            \"version\": \"3.3.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/builtin-modules/-/builtin-modules-3.3.0.tgz\",\r\n            \"integrity\": \"sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw==\",\r\n            \"dev\": true,\r\n            \"engines\": {\r\n                \"node\": \">=6\"\r\n            },\r\n            \"funding\": {\r\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\r\n            }\r\n        },\r\n        \"node_modules/commondir\": {\r\n            \"version\": \"1.0.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz\",\r\n            \"integrity\": \"sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg==\",\r\n            \"dev\": true\r\n        },\r\n        \"node_modules/deepmerge\": {\r\n            \"version\": \"4.3.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\r\n            \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\r\n            \"dev\": true,\r\n            \"engines\": {\r\n                \"node\": \">=0.10.0\"\r\n            }\r\n        },\r\n        \"node_modules/estree-walker\": {\r\n            \"version\": \"2.0.2\",\r\n            \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz\",\r\n            \"integrity\": \"sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==\",\r\n            \"dev\": true\r\n        },\r\n        \"node_modules/fs.realpath\": {\r\n            \"version\": \"1.0.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\r\n            \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\r\n            \"dev\": true\r\n        },\r\n        \"node_modules/fsevents\": {\r\n            \"version\": \"2.3.3\",\r\n            \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\r\n            \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\r\n            \"dev\": true,\r\n            \"hasInstallScript\": true,\r\n            \"optional\": true,\r\n            \"os\": [\r\n                \"darwin\"\r\n            ],\r\n            \"engines\": {\r\n                \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\r\n            }\r\n        },\r\n        \"node_modules/function-bind\": {\r\n            \"version\": \"1.1.2\",\r\n            \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\r\n            \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\r\n            \"dev\": true,\r\n            \"funding\": {\r\n                \"url\": \"https://github.com/sponsors/ljharb\"\r\n            }\r\n        },\r\n        \"node_modules/glob\": {\r\n            \"version\": \"8.1.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/glob/-/glob-8.1.0.tgz\",\r\n            \"integrity\": \"sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"fs.realpath\": \"^1.0.0\",\r\n                \"inflight\": \"^1.0.4\",\r\n                \"inherits\": \"2\",\r\n                \"minimatch\": \"^5.0.1\",\r\n                \"once\": \"^1.3.0\"\r\n            },\r\n            \"engines\": {\r\n                \"node\": \">=12\"\r\n            },\r\n            \"funding\": {\r\n                \"url\": \"https://github.com/sponsors/isaacs\"\r\n            }\r\n        },\r\n        \"node_modules/hasown\": {\r\n            \"version\": \"2.0.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.0.tgz\",\r\n            \"integrity\": \"sha512-vUptKVTpIJhcczKBbgnS+RtcuYMB8+oNzPK2/Hp3hanz8JmpATdmmgLgSaadVREkDm+e2giHwY3ZRkyjSIDDFA==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"function-bind\": \"^1.1.2\"\r\n            },\r\n            \"engines\": {\r\n                \"node\": \">= 0.4\"\r\n            }\r\n        },\r\n        \"node_modules/inflight\": {\r\n            \"version\": \"1.0.6\",\r\n            \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\r\n            \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"once\": \"^1.3.0\",\r\n                \"wrappy\": \"1\"\r\n            }\r\n        },\r\n        \"node_modules/inherits\": {\r\n            \"version\": \"2.0.4\",\r\n            \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\r\n            \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\r\n            \"dev\": true\r\n        },\r\n        \"node_modules/is-builtin-module\": {\r\n            \"version\": \"3.2.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-3.2.1.tgz\",\r\n            \"integrity\": \"sha512-BSLE3HnV2syZ0FK0iMA/yUGplUeMmNz4AW5fnTunbCIqZi4vG3WjJT9FHMy5D69xmAYBHXQhJdALdpwVxV501A==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"builtin-modules\": \"^3.3.0\"\r\n            },\r\n            \"engines\": {\r\n                \"node\": \">=6\"\r\n            },\r\n            \"funding\": {\r\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\r\n            }\r\n        },\r\n        \"node_modules/is-core-module\": {\r\n            \"version\": \"2.13.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.13.1.tgz\",\r\n            \"integrity\": \"sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"hasown\": \"^2.0.0\"\r\n            },\r\n            \"funding\": {\r\n                \"url\": \"https://github.com/sponsors/ljharb\"\r\n            }\r\n        },\r\n        \"node_modules/is-module\": {\r\n            \"version\": \"1.0.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz\",\r\n            \"integrity\": \"sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g==\",\r\n            \"dev\": true\r\n        },\r\n        \"node_modules/is-reference\": {\r\n            \"version\": \"1.2.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz\",\r\n            \"integrity\": \"sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"@types/estree\": \"*\"\r\n            }\r\n        },\r\n        \"node_modules/magic-string\": {\r\n            \"version\": \"0.30.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.30.5.tgz\",\r\n            \"integrity\": \"sha512-7xlpfBaQaP/T6Vh8MO/EqXSW5En6INHEvEXQiuff7Gku0PWjU3uf6w/j9o7O+SpB5fOAkrI5HeoNgwjEO0pFsA==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"@jridgewell/sourcemap-codec\": \"^1.4.15\"\r\n            },\r\n            \"engines\": {\r\n                \"node\": \">=12\"\r\n            }\r\n        },\r\n        \"node_modules/mapfun\": {\r\n            \"version\": \"0.9.17\",\r\n            \"resolved\": \"https://registry.npmjs.org/mapfun/-/mapfun-0.9.17.tgz\",\r\n            \"integrity\": \"sha512-mSzzPrOB15kn4ennD1Lr8odWryZ5i8c19xfzHdt52QYp4UzQb+b6G9tN7V0kKJGd285W8crKdBejqtkXwtWFPQ==\"\r\n        },\r\n        \"node_modules/minimatch\": {\r\n            \"version\": \"5.1.6\",\r\n            \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz\",\r\n            \"integrity\": \"sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"brace-expansion\": \"^2.0.1\"\r\n            },\r\n            \"engines\": {\r\n                \"node\": \">=10\"\r\n            }\r\n        },\r\n        \"node_modules/once\": {\r\n            \"version\": \"1.4.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\r\n            \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"wrappy\": \"1\"\r\n            }\r\n        },\r\n        \"node_modules/path-parse\": {\r\n            \"version\": \"1.0.7\",\r\n            \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\r\n            \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\r\n            \"dev\": true\r\n        },\r\n        \"node_modules/picomatch\": {\r\n            \"version\": \"2.3.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\r\n            \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\r\n            \"dev\": true,\r\n            \"engines\": {\r\n                \"node\": \">=8.6\"\r\n            },\r\n            \"funding\": {\r\n                \"url\": \"https://github.com/sponsors/jonschlinkert\"\r\n            }\r\n        },\r\n        \"node_modules/resolve\": {\r\n            \"version\": \"1.22.8\",\r\n            \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz\",\r\n            \"integrity\": \"sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==\",\r\n            \"dev\": true,\r\n            \"dependencies\": {\r\n                \"is-core-module\": \"^2.13.0\",\r\n                \"path-parse\": \"^1.0.7\",\r\n                \"supports-preserve-symlinks-flag\": \"^1.0.0\"\r\n            },\r\n            \"bin\": {\r\n                \"resolve\": \"bin/resolve\"\r\n            },\r\n            \"funding\": {\r\n                \"url\": \"https://github.com/sponsors/ljharb\"\r\n            }\r\n        },\r\n        \"node_modules/rollup\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/rollup/-/rollup-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-AEw14/q4NHYQkQlngoSae2yi7hDBeT9w84aEzdgCr39+2RL+iTG84lGTkgC1Wp5igtquN64cNzuzZKVz+U6jOg==\",\r\n            \"dev\": true,\r\n            \"bin\": {\r\n                \"rollup\": \"dist/bin/rollup\"\r\n            },\r\n            \"engines\": {\r\n                \"node\": \">=18.0.0\",\r\n                \"npm\": \">=8.0.0\"\r\n            },\r\n            \"optionalDependencies\": {\r\n                \"@rollup/rollup-android-arm-eabi\": \"4.1.5\",\r\n                \"@rollup/rollup-android-arm64\": \"4.1.5\",\r\n                \"@rollup/rollup-darwin-arm64\": \"4.1.5\",\r\n                \"@rollup/rollup-darwin-x64\": \"4.1.5\",\r\n                \"@rollup/rollup-linux-arm-gnueabihf\": \"4.1.5\",\r\n                \"@rollup/rollup-linux-arm64-gnu\": \"4.1.5\",\r\n                \"@rollup/rollup-linux-arm64-musl\": \"4.1.5\",\r\n                \"@rollup/rollup-linux-x64-gnu\": \"4.1.5\",\r\n                \"@rollup/rollup-linux-x64-musl\": \"4.1.5\",\r\n                \"@rollup/rollup-win32-arm64-msvc\": \"4.1.5\",\r\n                \"@rollup/rollup-win32-ia32-msvc\": \"4.1.5\",\r\n                \"@rollup/rollup-win32-x64-msvc\": \"4.1.5\",\r\n                \"fsevents\": \"~2.3.2\"\r\n            }\r\n        },\r\n        \"node_modules/supports-preserve-symlinks-flag\": {\r\n            \"version\": \"1.0.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\r\n            \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\r\n            \"dev\": true,\r\n            \"engines\": {\r\n                \"node\": \">= 0.4\"\r\n            },\r\n            \"funding\": {\r\n                \"url\": \"https://github.com/sponsors/ljharb\"\r\n            }\r\n        },\r\n        \"node_modules/wrappy\": {\r\n            \"version\": \"1.0.2\",\r\n            \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\r\n            \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\r\n            \"dev\": true\r\n        }\r\n    },\r\n    \"dependencies\": {\r\n        \"@jridgewell/sourcemap-codec\": {\r\n            \"version\": \"1.4.15\",\r\n            \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.15.tgz\",\r\n            \"integrity\": \"sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==\",\r\n            \"dev\": true\r\n        },\r\n        \"@rollup/plugin-commonjs\": {\r\n            \"version\": \"25.0.7\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-25.0.7.tgz\",\r\n            \"integrity\": \"sha512-nEvcR+LRjEjsaSsc4x3XZfCCvZIaSMenZu/OiwOKGN2UhQpAYI7ru7czFvyWbErlpoGjnSX3D5Ch5FcMA3kRWQ==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"@rollup/pluginutils\": \"^5.0.1\",\r\n                \"commondir\": \"^1.0.1\",\r\n                \"estree-walker\": \"^2.0.2\",\r\n                \"glob\": \"^8.0.3\",\r\n                \"is-reference\": \"1.2.1\",\r\n                \"magic-string\": \"^0.30.3\"\r\n            }\r\n        },\r\n        \"@rollup/plugin-node-resolve\": {\r\n            \"version\": \"15.2.3\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-15.2.3.tgz\",\r\n            \"integrity\": \"sha512-j/lym8nf5E21LwBT4Df1VD6hRO2L2iwUeUmP7litikRsVp1H6NWx20NEp0Y7su+7XGc476GnXXc4kFeZNGmaSQ==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"@rollup/pluginutils\": \"^5.0.1\",\r\n                \"@types/resolve\": \"1.20.2\",\r\n                \"deepmerge\": \"^4.2.2\",\r\n                \"is-builtin-module\": \"^3.2.1\",\r\n                \"is-module\": \"^1.0.0\",\r\n                \"resolve\": \"^1.22.1\"\r\n            }\r\n        },\r\n        \"@rollup/pluginutils\": {\r\n            \"version\": \"5.0.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-5.0.5.tgz\",\r\n            \"integrity\": \"sha512-6aEYR910NyP73oHiJglti74iRyOwgFU4x3meH/H8OJx6Ry0j6cOVZ5X/wTvub7G7Ao6qaHBEaNsV3GLJkSsF+Q==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"@types/estree\": \"^1.0.0\",\r\n                \"estree-walker\": \"^2.0.2\",\r\n                \"picomatch\": \"^2.3.1\"\r\n            }\r\n        },\r\n        \"@rollup/rollup-android-arm-eabi\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-/fwx6GS8cIbM2rTNyLMxjSCOegHywOdXO+kN9yFy018iCULcKZCyA3xvzw4bxyKbYfdSxQgdhbsl0egNcxerQw==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"@rollup/rollup-android-arm64\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-tmXh7dyEt+JEz/NgDJlB1UeL/1gFV0v8qYzUAU42WZH4lmUJ5rp6/HkR2qUNC5jCgYEwd8/EfbHKtGIEfS4CUg==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"@rollup/rollup-darwin-arm64\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-lTDmLxdEVhzI3KCesZUrNbl3icBvPrDv/85JasY5gh4P2eAuDFmM4uj9HC5DdH0anLC0fwJ+1Uzasr4qOXcjRQ==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"@rollup/rollup-darwin-x64\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-v6qEHZyjWnIgcc4oiy8AIeFsUJAx+Kg0sLj+RE7ICwv3u7YC/+bSClxAiBASRjMzqsq0Z+I/pfxj+OD8mjBYxg==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"@rollup/rollup-linux-arm-gnueabihf\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-WngCfwPEDUNbZR1FNO2TCROYUwJvRlbvPi3AS85bDUkkoRDBcjUIz42cuB1j4PKilmnZascL5xTMF/yU8YFayA==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"@rollup/rollup-linux-arm64-gnu\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-Q2A/PEP/UTPTOBwgar3mmCaApahoezai/8e/7f4GCLV6XWCpnU4YwkQQtla7d7nUnc792Ps7g1G0WMovzIknrA==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"@rollup/rollup-linux-arm64-musl\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-84aBKNAVzTU/eG3tb2+kR4NGRAtm2YVW/KHwkGGDR4z1k4hyrDbuImsfs/6J74t6y0YLOe9HOSu7ejRjzUBGVQ==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"@rollup/rollup-linux-x64-gnu\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-mldtP9UEBurIq2+GYMdNeiqCLW1fdgf4KdkMR/QegAeXk4jFHkKQl7p0NITrKFVyVqzISGXH5gR6GSTBH4wszw==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"@rollup/rollup-linux-x64-musl\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-36p+nMcSxjAEzfU47+by102HolUtf/EfgBAidocTKAofJMTqG5QD50qzaFLk4QO+z7Qvg4qd0wr99jGAwnKOig==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"@rollup/rollup-win32-arm64-msvc\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-5oxhubo0A3J8aF/tG+6jHBg785HF8/88kl1YnfbDKmnqMxz/EFiAQDH9cq6lbnxofjn8tlq5KiTf0crJGOGThg==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"@rollup/rollup-win32-ia32-msvc\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-uVQyBREKX9ErofL8KAZ4iVlqzSZOXSIG+BOLYuz5FD+Cg6jh1eLIeUa3Q4SgX0QaTRFeeAgSNqCC+8kZrZBpSw==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"@rollup/rollup-win32-x64-msvc\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-FQ5qYqRJ2vUBSom3Fos8o/6UvAMOvlus4+HGCAifH1TagbbwVnVVe0o01J1V52EWnQ8kmfpJDJ0FMrfM5yzcSA==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"@types/estree\": {\r\n            \"version\": \"1.0.3\",\r\n            \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.3.tgz\",\r\n            \"integrity\": \"sha512-CS2rOaoQ/eAgAfcTfq6amKG7bsN+EMcgGY4FAFQdvSj2y1ixvOZTUA9mOtCai7E1SYu283XNw7urKK30nP3wkQ==\",\r\n            \"dev\": true\r\n        },\r\n        \"@types/resolve\": {\r\n            \"version\": \"1.20.2\",\r\n            \"resolved\": \"https://registry.npmjs.org/@types/resolve/-/resolve-1.20.2.tgz\",\r\n            \"integrity\": \"sha512-60BCwRFOZCQhDncwQdxxeOEEkbc5dIMccYLwbxsS4TUNeVECQ/pBJ0j09mrHOl/JJvpRPGwO9SvE4nR2Nb/a4Q==\",\r\n            \"dev\": true\r\n        },\r\n        \"balanced-match\": {\r\n            \"version\": \"1.0.2\",\r\n            \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\r\n            \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\r\n            \"dev\": true\r\n        },\r\n        \"brace-expansion\": {\r\n            \"version\": \"2.0.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\r\n            \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"balanced-match\": \"^1.0.0\"\r\n            }\r\n        },\r\n        \"builtin-modules\": {\r\n            \"version\": \"3.3.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/builtin-modules/-/builtin-modules-3.3.0.tgz\",\r\n            \"integrity\": \"sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw==\",\r\n            \"dev\": true\r\n        },\r\n        \"commondir\": {\r\n            \"version\": \"1.0.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz\",\r\n            \"integrity\": \"sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg==\",\r\n            \"dev\": true\r\n        },\r\n        \"deepmerge\": {\r\n            \"version\": \"4.3.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\r\n            \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\r\n            \"dev\": true\r\n        },\r\n        \"estree-walker\": {\r\n            \"version\": \"2.0.2\",\r\n            \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz\",\r\n            \"integrity\": \"sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==\",\r\n            \"dev\": true\r\n        },\r\n        \"fs.realpath\": {\r\n            \"version\": \"1.0.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\r\n            \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\r\n            \"dev\": true\r\n        },\r\n        \"fsevents\": {\r\n            \"version\": \"2.3.3\",\r\n            \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\r\n            \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\r\n            \"dev\": true,\r\n            \"optional\": true\r\n        },\r\n        \"function-bind\": {\r\n            \"version\": \"1.1.2\",\r\n            \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\r\n            \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\r\n            \"dev\": true\r\n        },\r\n        \"glob\": {\r\n            \"version\": \"8.1.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/glob/-/glob-8.1.0.tgz\",\r\n            \"integrity\": \"sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"fs.realpath\": \"^1.0.0\",\r\n                \"inflight\": \"^1.0.4\",\r\n                \"inherits\": \"2\",\r\n                \"minimatch\": \"^5.0.1\",\r\n                \"once\": \"^1.3.0\"\r\n            }\r\n        },\r\n        \"hasown\": {\r\n            \"version\": \"2.0.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.0.tgz\",\r\n            \"integrity\": \"sha512-vUptKVTpIJhcczKBbgnS+RtcuYMB8+oNzPK2/Hp3hanz8JmpATdmmgLgSaadVREkDm+e2giHwY3ZRkyjSIDDFA==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"function-bind\": \"^1.1.2\"\r\n            }\r\n        },\r\n        \"inflight\": {\r\n            \"version\": \"1.0.6\",\r\n            \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\r\n            \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"once\": \"^1.3.0\",\r\n                \"wrappy\": \"1\"\r\n            }\r\n        },\r\n        \"inherits\": {\r\n            \"version\": \"2.0.4\",\r\n            \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\r\n            \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\r\n            \"dev\": true\r\n        },\r\n        \"is-builtin-module\": {\r\n            \"version\": \"3.2.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-3.2.1.tgz\",\r\n            \"integrity\": \"sha512-BSLE3HnV2syZ0FK0iMA/yUGplUeMmNz4AW5fnTunbCIqZi4vG3WjJT9FHMy5D69xmAYBHXQhJdALdpwVxV501A==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"builtin-modules\": \"^3.3.0\"\r\n            }\r\n        },\r\n        \"is-core-module\": {\r\n            \"version\": \"2.13.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.13.1.tgz\",\r\n            \"integrity\": \"sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"hasown\": \"^2.0.0\"\r\n            }\r\n        },\r\n        \"is-module\": {\r\n            \"version\": \"1.0.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz\",\r\n            \"integrity\": \"sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g==\",\r\n            \"dev\": true\r\n        },\r\n        \"is-reference\": {\r\n            \"version\": \"1.2.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz\",\r\n            \"integrity\": \"sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"@types/estree\": \"*\"\r\n            }\r\n        },\r\n        \"magic-string\": {\r\n            \"version\": \"0.30.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.30.5.tgz\",\r\n            \"integrity\": \"sha512-7xlpfBaQaP/T6Vh8MO/EqXSW5En6INHEvEXQiuff7Gku0PWjU3uf6w/j9o7O+SpB5fOAkrI5HeoNgwjEO0pFsA==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"@jridgewell/sourcemap-codec\": \"^1.4.15\"\r\n            }\r\n        },\r\n        \"mapfun\": {\r\n            \"version\": \"0.9.17\",\r\n            \"resolved\": \"https://registry.npmjs.org/mapfun/-/mapfun-0.9.17.tgz\",\r\n            \"integrity\": \"sha512-mSzzPrOB15kn4ennD1Lr8odWryZ5i8c19xfzHdt52QYp4UzQb+b6G9tN7V0kKJGd285W8crKdBejqtkXwtWFPQ==\"\r\n        },\r\n        \"minimatch\": {\r\n            \"version\": \"5.1.6\",\r\n            \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz\",\r\n            \"integrity\": \"sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"brace-expansion\": \"^2.0.1\"\r\n            }\r\n        },\r\n        \"once\": {\r\n            \"version\": \"1.4.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\r\n            \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"wrappy\": \"1\"\r\n            }\r\n        },\r\n        \"path-parse\": {\r\n            \"version\": \"1.0.7\",\r\n            \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\r\n            \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\r\n            \"dev\": true\r\n        },\r\n        \"picomatch\": {\r\n            \"version\": \"2.3.1\",\r\n            \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\r\n            \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\r\n            \"dev\": true\r\n        },\r\n        \"resolve\": {\r\n            \"version\": \"1.22.8\",\r\n            \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz\",\r\n            \"integrity\": \"sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"is-core-module\": \"^2.13.0\",\r\n                \"path-parse\": \"^1.0.7\",\r\n                \"supports-preserve-symlinks-flag\": \"^1.0.0\"\r\n            }\r\n        },\r\n        \"rollup\": {\r\n            \"version\": \"4.1.5\",\r\n            \"resolved\": \"https://registry.npmjs.org/rollup/-/rollup-4.1.5.tgz\",\r\n            \"integrity\": \"sha512-AEw14/q4NHYQkQlngoSae2yi7hDBeT9w84aEzdgCr39+2RL+iTG84lGTkgC1Wp5igtquN64cNzuzZKVz+U6jOg==\",\r\n            \"dev\": true,\r\n            \"requires\": {\r\n                \"@rollup/rollup-android-arm-eabi\": \"4.1.5\",\r\n                \"@rollup/rollup-android-arm64\": \"4.1.5\",\r\n                \"@rollup/rollup-darwin-arm64\": \"4.1.5\",\r\n                \"@rollup/rollup-darwin-x64\": \"4.1.5\",\r\n                \"@rollup/rollup-linux-arm-gnueabihf\": \"4.1.5\",\r\n                \"@rollup/rollup-linux-arm64-gnu\": \"4.1.5\",\r\n                \"@rollup/rollup-linux-arm64-musl\": \"4.1.5\",\r\n                \"@rollup/rollup-linux-x64-gnu\": \"4.1.5\",\r\n                \"@rollup/rollup-linux-x64-musl\": \"4.1.5\",\r\n                \"@rollup/rollup-win32-arm64-msvc\": \"4.1.5\",\r\n                \"@rollup/rollup-win32-ia32-msvc\": \"4.1.5\",\r\n                \"@rollup/rollup-win32-x64-msvc\": \"4.1.5\",\r\n                \"fsevents\": \"~2.3.2\"\r\n            }\r\n        },\r\n        \"supports-preserve-symlinks-flag\": {\r\n            \"version\": \"1.0.0\",\r\n            \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\r\n            \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\r\n            \"dev\": true\r\n        },\r\n        \"wrappy\": {\r\n            \"version\": \"1.0.2\",\r\n            \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\r\n            \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\r\n            \"dev\": true\r\n        }\r\n    }\r\n}\r\n",
    "stats": {
      "length": 41417,
      "size": 40.4462890625,
      "lines": 913
    },
    "metadata": {
      "created": "2023-10-27T18:39:18.273Z",
      "modified": "2023-10-28T10:38:10.864Z"
    }
  },
  "package_json": {
    "content": "{\r\n    \"name\": \"dir2tree\",\r\n    \"version\": \"0.3.2\",\r\n    \"source\": \"src/index.js\",\r\n    \"exports\": {\r\n        \".\": {\r\n          \"import\": \"./dist/index.mjs\",\r\n          \"require\": \"./dist/index.cjs\"\r\n        }\r\n      },\r\n    \"type\": \"module\",\r\n    \"scripts\": {\r\n        \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\r\n        \"start\": \"node Automation/index.js\",\r\n        \"build\": \"rollup -c rollup.config.js\"\r\n    },\r\n    \"author\": \"zakaria elalaoui (https://github.com/zakarialaoui10)\",\r\n    \"description\": \"a user-friendly Node.js tool for creating organized directory trees from a root directory. It offers customization options for tailored tree generation and content analysis\",\r\n    \"keywords\": [\r\n        \"directory\",\r\n        \"tree\",\r\n        \"structure\",\r\n        \"filesystem\",\r\n        \"file management\",\r\n        \"directory tree\",\r\n        \"json\"\r\n    ],\r\n    \"repository\": {\r\n        \"type\": \"git\",\r\n        \"url\": \"git+https://github.com/zakarialaoui10/dir2tree.git\"\r\n    },\r\n    \"homepage\": \"https://github.com/zakarialaoui10/dir2tree\",\r\n    \"bugs\": {\r\n        \"url\": \"https://github.com/zakarialaoui10/dir2tree/issues\"\r\n    },\r\n    \"license\": \"MIT\",\r\n    \"dependencies\": {\r\n        \"mapfun\": \"^0.9.17\"\r\n    },\r\n    \"devDependencies\": {\r\n        \"@rollup/plugin-commonjs\": \"^25.0.7\",\r\n        \"@rollup/plugin-node-resolve\": \"^15.2.3\",\r\n        \"rollup\": \"^4.1.5\"\r\n    }\r\n}\r\n",
    "stats": {
      "length": 1397,
      "size": 1.3642578125,
      "lines": 46
    },
    "metadata": {
      "created": "2023-10-27T18:31:56.283Z",
      "modified": "2023-10-28T12:00:07.595Z"
    }
  },
  "README_md": {
    "content": "## Demo \r\n[Want to try !](https://replit.com/@zakariaelalaoui/dir2tree#generated.json)\r\n## Install ![npm](https://img.shields.io/npm/v/dir2tree)\r\n```bash\r\nnpm install dir2tree\r\n```\r\n## Import\r\n### Common Js\r\n```js\r\nconst dir2tree=require(\"dir2tree\")\r\n```\r\n### Es Module\r\n```js\r\nimport dir2tree from dir2tree\r\n```\r\n## Syntaxe\r\n### Initialise\r\n```js\r\nconst MyTree=dir2tree(ROOT,OPTIONS,CALLBACKS)\r\nMyTree.write(Target,\"generated_file.json\")\r\n```\r\n#### Arguments\r\n- **`ROOT`** : The path to the root directory that we want handle. it's ***`required`***\r\n- **`OPTIONS`** : An object containing various configuration options to control the behavior of the tree generation.it's ***`optional`*** , These options might include :\r\n  - **`fileContent`** : (***Boolean***)\r\n  - **`fileName`** : (***Boolean***)\r\n  - **`fileExtension`** : (***Boolean***)\r\n  - **`length`** : (***Boolean***)\r\n  - **`size`** : (***Boolean***)\r\n  - **`linesCount`** : (***Boolean***)\r\n  - **`created`** : (***Boolean***)\r\n  - **`lastModified`** : (***Boolean***)\r\n  - **`skip`** :\r\n    - **`folder`** : (***String[]***)\r\n    - **`file`** : (***String[]***)\r\n    - **`extension`** : (***String[]***)\r\n  - **`sortBy`** : (***String***) , possible values : `\"names\"`,`\"extension\"`,`\"size\"`,`\"lines\"`,`\"created\"`,`\"lastmodified\"`,\r\n  - **`order`** : (***Number***)\r\n- **`CALLBACKS`** : it's ***`optional`***\r\n### Methodes\r\n- **`.write(Target, filename)`**\r\n- **`.flat(depth, separator)`**\r\n### Use It in your Github Repository\r\nCreate a workflow file like the one below.\r\n.github/workflow/dir2tree.yml\r\n```yml\r\nname: Generate Directory Tree using zakarialaoui10/dir2tree\r\non:\r\n  push: \r\n    branches:\r\n      - main\r\njobs:\r\n  build:\r\n    permissions :\r\n      contents : write\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - name: Checkout code\r\n        uses: actions/checkout@v2\r\n        with:\r\n          ref: ${{ github.head_ref }}\r\n      - name: Generate Directory Tree\r\n        uses: zakarialaoui10/dir2tree@main\r\n      - name: Commit & Push\r\n        run: |\r\n          git config user.name github-actions\r\n          git config user.email github-actions@github.com\r\n          git add -A .\r\n          git commit -m \"generated by zakarialaoui10/dir2tree\"\r\n          git push\r\n        env:\r\n          CUSTOM_TOKEN: ${{ secrets.CUSTOM_TOKEN }}\r\n```\r\n## License \r\nThis projet is licensed under the terms of MIT License .<br>\r\n<img src=\"https://img.shields.io/github/license/zakarialaoui10/zikojs?color=rgb%2820%2C21%2C169%29\">\r\n",
    "stats": {
      "length": 2490,
      "size": 2.431640625,
      "lines": 77
    },
    "metadata": {
      "created": "2023-10-27T18:31:55.897Z",
      "modified": "2023-10-28T11:35:13.799Z"
    }
  },
  "action_yml": {
    "content": "name: 'Master'\r\ndescription: 'dir2tree'\r\nruns:\r\n  using: 'node16' \r\n  main: 'Automation/index.js' \r\n",
    "stats": {
      "length": 100,
      "size": 0.09765625,
      "lines": 6
    },
    "metadata": {
      "created": "2023-10-27T18:31:55.897Z",
      "modified": "2023-11-02T08:10:49.109Z"
    }
  }
}