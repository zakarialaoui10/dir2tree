{
  ".github": {
    "workflows": {
      "Master_txt": {
        "content": "name: Node.js CI\non:\n  push:\n    branches: [ \"main\" ]\n  pull_request: \n    branches: [ \"main\" ]\njobs:\n  build:\n    permissions:\n      contents: write \n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        node-version: [18.x]\n    steps:\n    - uses: actions/checkout@v3\n    - name: Use Node.js ${{ matrix.node-version }}\n      uses: actions/setup-node@v3\n      with:\n        node-version: ${{ matrix.node-version }}\n        cache: 'npm'\n    - run: npm ci\n    - run: npm start\n    - name: Commit & Push\n      run: |\n          git config user.name github-actions\n          git config user.email github-actions@github.com\n          git add -A .\n          git commit -m \"generated\"\n          git push\n      env:\n        GITHUB_TOKEN: ${{ secrets.GH_PAT }}\n",
        "stats": {
          "length": 760,
          "size": 0.7421875,
          "lines": 33
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.358Z",
          "modified": "2023-10-28T12:10:05.358Z",
          "permissions": 33188
        }
      },
      "Slave_yml": {
        "content": "name: Node.js App CI\n  \non:    \n  push: \n    branches:\n      - main\njobs:\n  build:\n    permissions :\n      contents : write\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n        with:\n          ref: ${{ github.head_ref }}\n\n      - name: Set up Node.js\n        uses: actions/setup-node@v2.1.5\n        with:\n          node-version: 14\n\n      - name: Generate Directory Tree\n        uses: zakarialaoui10/dir2tree@main\n      - name: Commit & Push\n        run: |\n          git config user.name github-actions\n          git config user.email github-actions@github.com\n          git add -A .\n          git commit -m \"generated\"\n          git push\n      - name: Log CONFIG\n        run: |\n           echo \"CONFIG: $CONFIG\"\n        env:\n          CUSTOM_TOKEN: ${{ secrets.CUSTOM_TOKEN }}\n          CONFIG : '{\"key1\": \"value1\", \"key2\": \"value2\"}' \n        \n",
        "stats": {
          "length": 902,
          "size": 0.880859375,
          "lines": 40
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.358Z",
          "modified": "2023-10-28T12:10:05.358Z",
          "permissions": 33188
        }
      },
      "npm publish_yml": {
        "content": "name: Publish Node.js Package\n \non:\n  release:\n    types: [created]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 16\n      - run: npm ci\n\n  publish-gpr:\n    needs: build\n    runs-on: ubuntu-latest\n    permissions:\n      contents: read\n      packages: write\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 16\n          registry-url: https://npm.pkg.github.com/\n      - run: npm ci\n      - run: npm publish\n        env:\n          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}\n",
        "stats": {
          "length": 655,
          "size": 0.6396484375,
          "lines": 33
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.358Z",
          "modified": "2023-10-28T12:10:05.358Z",
          "permissions": 33188
        }
      }
    }
  },
  "addons": {
    "callbacks": {
      "Crypto_js": {
        "content": "",
        "stats": {
          "length": 0,
          "size": 0,
          "lines": 1
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.362Z",
          "modified": "2023-10-28T12:10:05.362Z",
          "permissions": 33188
        }
      },
      "Highlight_js": {
        "content": "const {require_if_installed}=require(\"../utils/index.js\");\nconst path=require(\"path\");\nconst fs=require(\"fs\");\nconst hljs=require_if_installed(\"highlight.Js\");",
        "stats": {
          "length": 159,
          "size": 0.1552734375,
          "lines": 4
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.362Z",
          "modified": "2023-10-28T12:10:05.362Z",
          "permissions": 33188
        }
      },
      "Marked_js": {
        "content": "const {require_if_installed}=require(\"../utils/index.js\");\nconst path=require(\"path\");\nconst fs=require(\"fs\");\nconst marked=require_if_installed(\"marked\");\nconst markdown_to_html=(filePath,fileInfo)=>{\n  const extension = path.basename(filePath).split(\".\")[1];\n  if(marked && extension==\"md\")fileInfo.html=marked.parse(fs.readFileSync(filePath,\"utf-8\"));\n}\nmodule.exports={markdown_to_html}",
        "stats": {
          "length": 390,
          "size": 0.380859375,
          "lines": 9
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.362Z",
          "modified": "2023-10-28T12:10:05.362Z",
          "permissions": 33188
        }
      },
      "MathJax_js": {
        "content": "",
        "stats": {
          "length": 0,
          "size": 0,
          "lines": 1
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.362Z",
          "modified": "2023-10-28T12:10:05.362Z",
          "permissions": 33188
        }
      },
      "xlsx_js": {
        "content": "",
        "stats": {
          "length": 0,
          "size": 0,
          "lines": 1
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.362Z",
          "modified": "2023-10-28T12:10:05.362Z",
          "permissions": 33188
        }
      }
    },
    "utils": {
      "index_js": {
        "content": "function require_if_installed(pckg) {\n    try {\n      return require(pckg);\n    } catch (e) {\n      return null;\n    }\n  }\nmodule.exports={require_if_installed}",
        "stats": {
          "length": 160,
          "size": 0.15625,
          "lines": 8
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.362Z",
          "modified": "2023-10-28T12:10:05.362Z",
          "permissions": 33188
        }
      }
    },
    "index_js": {
      "content": "const {markdown_to_html}=require(\"./callbacks/Marked.js\")\nmodule.exports={markdown_to_html}\n",
      "stats": {
        "length": 92,
        "size": 0.08984375,
        "lines": 3
      },
      "metadata": {
        "created": "2023-10-28T12:10:05.362Z",
        "modified": "2023-10-28T12:10:05.362Z",
        "permissions": 33188
      }
    },
    "package_json": {
      "content": "{\n  \"name\": \"@dir2tree/addons\",\n  \"version\": \"0.1.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"zakaria elalaoui\",\n  \"license\": \"MIT\"\n}\n",
      "stats": {
        "length": 228,
        "size": 0.22265625,
        "lines": 12
      },
      "metadata": {
        "created": "2023-10-28T12:10:05.362Z",
        "modified": "2023-10-28T12:10:05.362Z",
        "permissions": 33188
      }
    }
  },
  "Automation": {
    "Auth": {
      "Schema_gql": {
        "content": "\n",
        "stats": {
          "length": 1,
          "size": 0.0009765625,
          "lines": 2
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.358Z",
          "modified": "2023-10-28T12:10:05.358Z",
          "permissions": 33188
        }
      }
    },
    "index_js": {
      "content": "const fs=require(\"fs\");\nconst path=require(\"path\");\n'use strict';\n\n\n\nvar Javascript = {exports: {}};\n\n/*\nDevelopped by zakaria elaloui\nGithub : https://github.com/zakarialaoui10\n*/\n\n(function (module, exports) {\n\tfunction flat_obj(obj,depth=Infinity,separator = '.', replacement = '_') {\n\t    const result = {};\n\t    let i=0;\n\t    function recurse(current, path = []) {\n\t        if(i===depth){\n\t            Object.assign(result,current);\n\t            return ;\n\t        }\n\t      for (const key in current) {\n\t        const value = current[key];\n\t        const newPath = [...path, key];\n\t        if (typeof value === 'object' && !Array.isArray(value)) {\n\t          recurse(value, newPath);\n\t        } else {\n\t          const flatKey = newPath.join(separator).replace(new RegExp(`\\\\${separator}`, 'g'), replacement);\n\t          result[flatKey] = value;\n\t        }\n\t        i++;\n\t      }\n\t    }\n\t    recurse(obj);\n\t    return result;\n\t}\n\tconst mapfun = (fun, { skip = [], key = false, value = true } = {}, ...X) => {\n\t  const Y = X.map((x) => {\n\t    if (typeof skip === 'string'||[null,undefined].includes(skip))skip=[skip];\n\t      const skipPrimitives = [];\n\t      const skipObjects = [];\n\t      skip.forEach((element) =>(typeof element===\"object\"&&element !==null)?skipObjects.push(element):skipPrimitives.push(element));\n\t        if(skipPrimitives.includes(typeof x)||skipPrimitives.includes(x)) return x;\n\t        if(skipObjects.some(n=>x instanceof n))return x;\n\t    if (x === null) return fun(null);\n\t    if (['number', 'string', 'boolean', 'bigint', 'undefined'].includes(typeof x)) return fun(x);\n\t    if (typeof(x)===\"symbol\") throw new Error('symbols are not supported yet !');\n\t    if (x instanceof Array) return x.map((n) => mapfun(fun,{},n));\n\t    if (ArrayBuffer.isView(x)) return Array.from(x).map((n) => fun(n));\n\t    if (x instanceof Set) return new Set(mapfun(fun,{},...[...x]));\n\t    if (x instanceof WeakSet) throw new Error('WeakSets not supported yet !');\n\t    if (x instanceof WeakMap) throw new Error('WeakMaps not supported yet !');\n\t    if (x instanceof Map) return new Map([...x].map(n =>{\n\t        return [\n\t            key ? mapfun(fun,{},n[0]) : n[0],\n\t            value ? mapfun(fun,{},n[1]) : n[1],\n\t            ]\n\t    }));\n\t    if (x instanceof Object) return Object.fromEntries(\n\t      Object.entries(x).map(([KEY, VALUE]) => [\n\t        key?mapfun(fun,{},KEY):KEY,\n\t        value?mapfun(fun,{},VALUE):VALUE\n\t      ])\n\t    )\n\t    else throw new Error('Uncategorised data');\n\t  });\n\t    return Y.length === 1 ? Y[0] : Y;\n\t};\n\t{\n\t  module.exports = {mapfun,flat_obj} ;\n\t} \n} (Javascript));\n\nvar JavascriptExports = Javascript.exports;\n\nfunction should_skip_file(filePath) {\n    const normalizedPath = path.normalize(filePath);\n    if (\n      this?.options?.skip?.folder?.includes(path.basename(normalizedPath)) ||\n      this?.options?.skip?.file?.includes(path.basename(normalizedPath)) ||\n      this?.options?.skip?.extension?.includes(\n        path.extname(normalizedPath).slice(1)\n      )\n    )return true;\n    return false;\n  }\nfunction should_skip_folder(filePath) {\n  if (typeof filePath !== 'string') return false;\n  const normalizedPath = path.normalize(filePath);\n  if (this?.options?.skipFolder?.includes(path.basename(normalizedPath)))\n    return true;\n  return false;\n  }\n\nfunction is_directory(filePath) {\n    return fs.statSync(filePath).isDirectory();\n  }\nfunction add_to_tree(key, value) {\n  const keys = key.split(path.sep);\n  const lastKeyIndex = keys.length - 1;\n  keys.reduce((subtree, currentKey, index) => {\n    if (!subtree[currentKey]) {\n      subtree[currentKey] = index === lastKeyIndex ? value : {};\n    }\n    return subtree[currentKey];\n  }, this.tree);\n}\n\nfunction sort_files(files, order = 1) {\n    return files.sort((a, b) => {\n      const filePathA = path.join(this.root, a);\n      const filePathB = path.join(this.root, b);\n  \n      // Check if either of the files is a directory and handle accordingly\n      const isDirectoryA = is_directory(filePathA);\n      const isDirectoryB = is_directory(filePathB);\n  \n      if (isDirectoryA && !isDirectoryB) {\n        return -1; // Directories come before files\n      } else if (!isDirectoryA && isDirectoryB) {\n        return 1; // Files come after directories\n      }\n  \n      if (isDirectoryA && isDirectoryB) {\n        return a.localeCompare(b); // Sort directories by name\n      }\n  \n      // If both are files, perform the sorting based on your criteria\n      const statsA = fs.statSync(filePathA);\n      const statsB = fs.statSync(filePathB);\n      const extensionA = path.extname(filePathA).slice(1);\n      const extensionB = path.extname(filePathB).slice(1);\n      const linesA = fs.readFileSync(filePathA, \"utf8\").split(\"\\n\").length;\n      const linesB = fs.readFileSync(filePathB, \"utf8\").split(\"\\n\").length;\n  \n      // Customize sorting based on sortBy option (name, size, created, modified, extension, lines, path, etc.)\n      switch (this.sortBy.toLowerCase()) {\n        case \"name\":\n          return order * a.localeCompare(b);\n        case \"size\":\n          return order * (statsA.size - statsB.size);\n        case \"created\":\n          return order * (statsA.birthtime - statsB.birthtime);\n        case \"modified\":\n          return order * (statsA.mtime.getTime() - statsB.mtime.getTime());\n        case \"extension\":\n          return order * extensionA.localeCompare(extensionB);\n        case \"lines\":\n          return order * (linesA - linesB);\n        case \"path\":\n          return order * filePathB.localeCompare(filePathA);\n        default:\n          return 0;\n      }\n    });\n  }\n\nfunction filter_files(files) {\n    return files.filter((file) => {\n      if (is_directory(path.join(this.root, file))) {\n        return true; // Skip directories\n      }\n      const filePath = path.join(this.root, file);\n      const shouldSkip = should_skip_file.call(this, filePath);\n      return !shouldSkip;\n    });\n  }\n\nfunction file_metadata(filePath) {\n    const stats = fs.statSync(filePath);\n    const metadata = {\n      created: stats.birthtime,\n      modified: stats.mtime,\n      permissions: stats.mode,\n    };\n    return metadata;\n  }\n\nclass Dir2Tree {\n  constructor(root, options = {}, callbacks = {}) {\n    this.root = root;\n    this.options = options;\n    this.callbacks = callbacks;\n    this.tree = {};\n    this.sortBy = options.sortBy || \"name\";\n    this.generate();\n  }\n  generate() {\n    const stats = fs.statSync(this.root);\n    if (!stats.isDirectory()) return null;\n    const files = fs.readdirSync(this.root);\n    const FILTRED_FILES = filter_files.call(this, files);\n    const SORTED_FILES = sort_files.call(this, FILTRED_FILES);\n\n    SORTED_FILES.forEach((file) => {\n      const filePath = path.join(this.root, file);\n      if(should_skip_folder.call(this,file))return;\n      const fileStats = fs.statSync(filePath);\n      if(fileStats.isDirectory()){\n        const subDirectory = new Dir2Tree(\n          filePath,\n          this.options,\n          this.callbacks\n        );\n        Object.assign(this.tree,{[path.basename(filePath)]:subDirectory.tree});\n        return this\n      }\n      const fileName = path.parse(file).name;\n      if (should_skip_file.call(this, filePath)) return;\n        if (this.options?.fileContent) {\n          this.addFileInfo(filePath, fileName);\n        }\n      \n    });\n    //this.tree=tree;\n    return this.tree;\n  }\n  addFileInfo(filePath, fileName) {\n    const content = fs.readFileSync(filePath, \"utf8\");\n    const fileInfo = {};\n    const stats = {};\n    const fullName = path.basename(filePath);\n    const [name, extension] = fullName.split(\".\");\n    const length = fs.statSync(filePath).size;\n    const lines = content.split(\"\\n\").length;\n    const metadata = file_metadata.call(this, filePath);\n    if (this.options?.fileContent) Object.assign(fileInfo, { content });\n    if (this.options?.fileExtension) Object.assign(fileInfo, { extension });\n    if (this.options?.fileName) Object.assign(fileInfo, { name });\n    Object.assign(stats, { length });\n    Object.assign(stats, { size: length / 1024 });\n    Object.assign(stats, { lines });\n    Object.assign(fileInfo, { stats });\n    Object.assign(fileInfo, { metadata });\n    this?.callbacks?.map((n) => n(filePath, fileInfo));\n    add_to_tree.call(this,fileName+\"_\"+extension, fileInfo);\n  }\n  \n  write(Target, filename) {\n    const jsonTree = JSON.stringify(this.tree, null, 2); // Pretty-print the JSON\n    const filePath = path.join(Target, filename); // Construct the file path\n    fs.writeFileSync(filePath, jsonTree, 'utf8');\n    console.log(`Tree written to ${filePath}`);\n    return this;\n  }\n  flat(depth=1,separator=\"_\"){\n    this.tree=JavascriptExports.flat_obj(this.tree,depth,separator);\n    return this;\n  }\n  reduce(){\n    return this;\n  }\n  sort(){\n    return this;\n  }\n  filter(){\n    return this;\n  }\n  map(callback,options={}){\n    this.tree=JavascriptExports.mapfun(callback,options,this.tree);\n    return this;\n  }\n}\nconst dir2tree = (root, options, callbacks=[]) => new Dir2Tree(root, options, callbacks);\n\nmodule.exports = dir2tree;//const {markdown_to_html}=require(\"../addons/index.js\")\nconst ROOT = path.join(process.cwd(),'.');\nconst TARGET = path.join(process.cwd(),\".\");\nconst MyTree = dir2tree(ROOT,{\n  fileContent:true,\n  sortBy:\"extension\",\n  skipFile:[\"ger.md\"],\n  skipFolder:[\".git\",\"node_modules\"],\n  skipExtension:[\"json\"],\n},[]);\n\nconsole.log(MyTree.tree)\nMyTree.write(TARGET,\"generated.json\")\n",
      "stats": {
        "length": 9450,
        "size": 9.228515625,
        "lines": 280
      },
      "metadata": {
        "created": "2023-10-28T12:10:05.362Z",
        "modified": "2023-10-28T12:10:05.362Z",
        "permissions": 33188
      }
    },
    "index2_js": {
      "content": "var $cFoub$fs = require(\"fs\");\nvar $cFoub$path = require(\"path\");\n\n\n\nvar $697a68694f2aacad$exports = {};\n/*\nDevelopped by zakaria elaloui\nGithub : https://github.com/zakarialaoui10\n*/ function $697a68694f2aacad$var$flat_obj(obj, depth = Infinity, separator = \".\", replacement = \"_\") {\n    const result = {};\n    let i = 0;\n    function recurse(current, path = []) {\n        if (i === depth) {\n            Object.assign(result, current);\n            return;\n        }\n        for(const key in current){\n            const value = current[key];\n            const newPath = [\n                ...path,\n                key\n            ];\n            if (typeof value === \"object\" && !Array.isArray(value)) recurse(value, newPath);\n            else {\n                const flatKey = newPath.join(separator).replace(new RegExp(`\\\\${separator}`, \"g\"), replacement);\n                result[flatKey] = value;\n            }\n            i++;\n        }\n    }\n    recurse(obj);\n    return result;\n}\nconst $697a68694f2aacad$var$mapfun = (fun, { skip: skip = [], key: key = false, value: value = true } = {}, ...X)=>{\n    const Y = X.map((x)=>{\n        if (typeof skip === \"string\" || [\n            null,\n            undefined\n        ].includes(skip)) skip = [\n            skip\n        ];\n        const skipPrimitives = [];\n        const skipObjects = [];\n        skip.forEach((element)=>typeof element === \"object\" && element !== null ? skipObjects.push(element) : skipPrimitives.push(element));\n        if (skipPrimitives.includes(typeof x) || skipPrimitives.includes(x)) return x;\n        if (skipObjects.some((n)=>x instanceof n)) return x;\n        if (x === null) return fun(null);\n        if ([\n            \"number\",\n            \"string\",\n            \"boolean\",\n            \"bigint\",\n            \"undefined\"\n        ].includes(typeof x)) return fun(x);\n        if (typeof x === \"symbol\") throw new Error(\"symbols are not supported yet !\");\n        if (x instanceof Array) return x.map((n)=>$697a68694f2aacad$var$mapfun(fun, {}, n));\n        if (ArrayBuffer.isView(x)) return Array.from(x).map((n)=>fun(n));\n        if (x instanceof Set) return new Set($697a68694f2aacad$var$mapfun(fun, {}, ...[\n            ...x\n        ]));\n        if (x instanceof WeakSet) throw new Error(\"WeakSets not supported yet !\");\n        if (x instanceof WeakMap) throw new Error(\"WeakMaps not supported yet !\");\n        if (x instanceof Map) return new Map([\n            ...x\n        ].map((n)=>{\n            return [\n                key ? $697a68694f2aacad$var$mapfun(fun, {}, n[0]) : n[0],\n                value ? $697a68694f2aacad$var$mapfun(fun, {}, n[1]) : n[1]\n            ];\n        }));\n        if (x instanceof Object) return Object.fromEntries(Object.entries(x).map(([KEY, VALUE])=>[\n                key ? $697a68694f2aacad$var$mapfun(fun, {}, KEY) : KEY,\n                value ? $697a68694f2aacad$var$mapfun(fun, {}, VALUE) : VALUE\n            ]));\n        else throw new Error(\"Uncategorised data\");\n    });\n    return Y.length === 1 ? Y[0] : Y;\n};\n$697a68694f2aacad$exports = {\n    mapfun: $697a68694f2aacad$var$mapfun,\n    flat_obj: $697a68694f2aacad$var$flat_obj\n};\n\n\nvar $2776a60caf88deef$require$mapfun = $697a68694f2aacad$exports.mapfun;\nvar $2776a60caf88deef$require$flat_obj = $697a68694f2aacad$exports.flat_obj;\nvar $3d93cec531ae9d4c$exports = {};\n\nfunction $3d93cec531ae9d4c$var$should_skip_file(filePath) {\n    const normalizedPath = $cFoub$path.normalize(filePath);\n    if (this?.options?.skip?.folder?.includes($cFoub$path.basename(normalizedPath)) || this?.options?.skip?.file?.includes($cFoub$path.basename(normalizedPath)) || this?.options?.skip?.extension?.includes($cFoub$path.extname(normalizedPath).slice(1))) return true;\n    return false;\n}\nfunction $3d93cec531ae9d4c$var$should_skip_folder(filePath) {\n    if (typeof filePath !== \"string\") return false;\n    const normalizedPath = $cFoub$path.normalize(filePath);\n    if (this?.options?.skipFolder?.includes($cFoub$path.basename(normalizedPath))) return true;\n    return false;\n}\n$3d93cec531ae9d4c$exports = {\n    should_skip_file: $3d93cec531ae9d4c$var$should_skip_file,\n    should_skip_folder: $3d93cec531ae9d4c$var$should_skip_folder\n};\n\n\nvar $2776a60caf88deef$require$should_skip_file = $3d93cec531ae9d4c$exports.should_skip_file;\nvar $2776a60caf88deef$require$should_skip_folder = $3d93cec531ae9d4c$exports.should_skip_folder;\nvar $82c6becc65ef4e6c$exports = {};\n\n\nvar $29ba264081b04b00$exports = {};\n\n\nfunction $29ba264081b04b00$var$is_directory(filePath) {\n    return $cFoub$fs.statSync(filePath).isDirectory();\n}\nfunction $29ba264081b04b00$var$add_to_tree(key, value) {\n    const keys = key.split($cFoub$path.sep);\n    const lastKeyIndex = keys.length - 1;\n    keys.reduce((subtree, currentKey, index)=>{\n        if (!subtree[currentKey]) subtree[currentKey] = index === lastKeyIndex ? value : {};\n        return subtree[currentKey];\n    }, this.tree);\n}\n$29ba264081b04b00$exports = {\n    is_directory: $29ba264081b04b00$var$is_directory,\n    add_to_tree: $29ba264081b04b00$var$add_to_tree\n};\n\n\nvar $82c6becc65ef4e6c$require$is_directory = $29ba264081b04b00$exports.is_directory;\nfunction $82c6becc65ef4e6c$var$sort_files(files, order = 1) {\n    return files.sort((a, b)=>{\n        const filePathA = $cFoub$path.join(this.root, a);\n        const filePathB = $cFoub$path.join(this.root, b);\n        // Check if either of the files is a directory and handle accordingly\n        const isDirectoryA = $82c6becc65ef4e6c$require$is_directory(filePathA);\n        const isDirectoryB = $82c6becc65ef4e6c$require$is_directory(filePathB);\n        if (isDirectoryA && !isDirectoryB) return -1; // Directories come before files\n        else if (!isDirectoryA && isDirectoryB) return 1; // Files come after directories\n        if (isDirectoryA && isDirectoryB) return a.localeCompare(b); // Sort directories by name\n        // If both are files, perform the sorting based on your criteria\n        const statsA = $cFoub$fs.statSync(filePathA);\n        const statsB = $cFoub$fs.statSync(filePathB);\n        const extensionA = $cFoub$path.extname(filePathA).slice(1);\n        const extensionB = $cFoub$path.extname(filePathB).slice(1);\n        const linesA = $cFoub$fs.readFileSync(filePathA, \"utf8\").split(\"\\n\").length;\n        const linesB = $cFoub$fs.readFileSync(filePathB, \"utf8\").split(\"\\n\").length;\n        // Customize sorting based on sortBy option (name, size, created, modified, extension, lines, path, etc.)\n        switch(this.sortBy.toLowerCase()){\n            case \"name\":\n                return order * a.localeCompare(b);\n            case \"size\":\n                return order * (statsA.size - statsB.size);\n            case \"created\":\n                return order * (statsA.birthtime - statsB.birthtime);\n            case \"modified\":\n                return order * (statsA.mtime.getTime() - statsB.mtime.getTime());\n            case \"extension\":\n                return order * extensionA.localeCompare(extensionB);\n            case \"lines\":\n                return order * (linesA - linesB);\n            case \"path\":\n                return order * filePathB.localeCompare(filePathA);\n            default:\n                return 0;\n        }\n    });\n}\n$82c6becc65ef4e6c$exports = {\n    sort_files: $82c6becc65ef4e6c$var$sort_files\n};\n\n\nvar $2776a60caf88deef$require$sort_files = $82c6becc65ef4e6c$exports.sort_files;\nvar $0b90f1fd7064b3da$exports = {};\n\n\nvar $0b90f1fd7064b3da$require$is_directory = $29ba264081b04b00$exports.is_directory;\n\nvar $0b90f1fd7064b3da$require$should_skip_file = $3d93cec531ae9d4c$exports.should_skip_file;\nfunction $0b90f1fd7064b3da$var$filter_files(files) {\n    return files.filter((file)=>{\n        if ($0b90f1fd7064b3da$require$is_directory($cFoub$path.join(this.root, file))) return true; // Skip directories\n        const filePath = $cFoub$path.join(this.root, file);\n        const shouldSkip = $0b90f1fd7064b3da$require$should_skip_file.call(this, filePath);\n        return !shouldSkip;\n    });\n}\n$0b90f1fd7064b3da$exports = {\n    filter_files: $0b90f1fd7064b3da$var$filter_files\n};\n\n\nvar $2776a60caf88deef$require$filter_files = $0b90f1fd7064b3da$exports.filter_files;\n\nvar $2776a60caf88deef$require$add_to_tree = $29ba264081b04b00$exports.add_to_tree;\nvar $30fb452386496690$exports = {};\n\nfunction $30fb452386496690$var$file_metadata(filePath) {\n    const stats = $cFoub$fs.statSync(filePath);\n    const metadata = {\n        created: stats.birthtime,\n        modified: stats.mtime,\n        permissions: stats.mode\n    };\n    return metadata;\n}\n$30fb452386496690$exports = {\n    file_metadata: $30fb452386496690$var$file_metadata\n};\n\n\nvar $2776a60caf88deef$require$file_metadata = $30fb452386496690$exports.file_metadata;\nclass $2776a60caf88deef$var$Dir2Tree {\n    constructor(root, options = {}, callbacks = {}){\n        this.root = root;\n        this.options = options;\n        this.callbacks = callbacks;\n        this.tree = {};\n        this.sortBy = options.sortBy || \"name\";\n        this.generate();\n    }\n    generate() {\n        const stats = $cFoub$fs.statSync(this.root);\n        if (!stats.isDirectory()) return null;\n        const files = $cFoub$fs.readdirSync(this.root);\n        const FILTRED_FILES = $2776a60caf88deef$require$filter_files.call(this, files);\n        const SORTED_FILES = $2776a60caf88deef$require$sort_files.call(this, FILTRED_FILES);\n        SORTED_FILES.forEach((file)=>{\n            const filePath = $cFoub$path.join(this.root, file);\n            if ($2776a60caf88deef$require$should_skip_folder.call(this, file)) return;\n            const fileStats = $cFoub$fs.statSync(filePath);\n            if (fileStats.isDirectory()) {\n                const subDirectory = new $2776a60caf88deef$var$Dir2Tree(filePath, this.options, this.callbacks);\n                Object.assign(this.tree, {\n                    [$cFoub$path.basename(filePath)]: subDirectory.tree\n                });\n                return this;\n            }\n            const fileName = $cFoub$path.parse(file).name;\n            if ($2776a60caf88deef$require$should_skip_file.call(this, filePath)) return;\n            if (this.options?.fileContent) this.addFileInfo(filePath, fileName);\n        });\n        //this.tree=tree;\n        return this.tree;\n    }\n    addFileInfo(filePath, fileName) {\n        const content = $cFoub$fs.readFileSync(filePath, \"utf8\");\n        const fileInfo = {};\n        const stats = {};\n        const fullName = $cFoub$path.basename(filePath);\n        const [name, extension] = fullName.split(\".\");\n        const length = $cFoub$fs.statSync(filePath).size;\n        const lines = content.split(\"\\n\").length;\n        const metadata = $2776a60caf88deef$require$file_metadata.call(this, filePath);\n        if (this.options?.fileContent) Object.assign(fileInfo, {\n            content: content\n        });\n        if (this.options?.fileExtension) Object.assign(fileInfo, {\n            extension: extension\n        });\n        if (this.options?.fileName) Object.assign(fileInfo, {\n            name: name\n        });\n        Object.assign(stats, {\n            length: length\n        });\n        Object.assign(stats, {\n            size: length / 1024\n        });\n        Object.assign(stats, {\n            lines: lines\n        });\n        Object.assign(fileInfo, {\n            stats: stats\n        });\n        Object.assign(fileInfo, {\n            metadata: metadata\n        });\n        this?.callbacks?.map((n)=>n(filePath, fileInfo));\n        $2776a60caf88deef$require$add_to_tree.call(this, fileName + \"_\" + extension, fileInfo);\n    }\n    write(Target, filename) {\n        const jsonTree = JSON.stringify(this.tree, null, 2); // Pretty-print the JSON\n        const filePath = $cFoub$path.join(Target, filename); // Construct the file path\n        $cFoub$fs.writeFileSync(filePath, jsonTree, \"utf8\");\n        console.log(`Tree written to ${filePath}`);\n        return this;\n    }\n    flat(depth = 1, separator = \"_\") {\n        this.tree = $2776a60caf88deef$require$flat_obj(this.tree, depth, separator);\n        return this;\n    }\n    reduce() {\n        return this;\n    }\n    sort() {\n        return this;\n    }\n    filter() {\n        return this;\n    }\n    map(callback, options = {}) {\n        this.tree = $2776a60caf88deef$require$mapfun(callback, options, this.tree);\n        return this;\n    }\n}\nconst $2776a60caf88deef$var$dir2tree = (root, options, callbacks = [])=>new $2776a60caf88deef$var$Dir2Tree(root, options, callbacks);\nmodule.exports = $2776a60caf88deef$var$dir2tree;\n\n\n//# sourceMappingURL=index_bundle.js.map\n\nconst fs=require(\"fs\")\nconst path=require(\"path\")\nconst dir2tree=$2776a60caf88deef$var$dir2tree;\nconst ROOT = path.join(process.cwd(),'.');\nconst TARGET = path.join(process.cwd(),\".\");\nconsole.log({ROOT,TARGET})\nconsole.log(process.env.CONFIG)\nconst MyTree = dir2tree(ROOT,{\n  fileContent:true,\n  sortBy:\"extension\",\n  skipFile:[\"ger.md\"],\n  skipFolder:[\"to be skipped\"],\n  skipExtension:[\"json\"],\n});\n\n//console.log(MyTree.tree)\nMyTree.write(TARGET,\"generated.json\")\n",
      "stats": {
        "length": 13006,
        "size": 12.701171875,
        "lines": 333
      },
      "metadata": {
        "created": "2023-10-28T12:10:05.362Z",
        "modified": "2023-10-28T12:10:05.362Z",
        "permissions": 33188
      }
    },
    "generated_json": {
      "content": "{\n  \"Auth\": {\n    \"Schema\": {\n      \"content\": \"\\r\\n\",\n      \"stats\": {\n        \"length\": 2,\n        \"size\": 0.001953125,\n        \"lines\": 2\n      },\n      \"metadata\": {\n        \"created\": \"2023-10-27T18:31:55.897Z\",\n        \"modified\": \"2023-10-27T18:31:55.897Z\",\n        \"permissions\": 33206\n      }\n    }\n  },\n  \"index\": {\n    \"content\": \"const fs=require(\\\"fs\\\");\\r\\nconst path=require(\\\"path\\\");\\r\\nconst dir2tree=require(\\\"dir2tree\\\");\\r\\nconst {markdown_to_html}=require(\\\"../addons/index.js\\\")\\r\\nconst ROOT = path.join(process.cwd(),'.');\\r\\nconst TARGET = path.join(process.cwd(),\\\".\\\");\\r\\nconst MyTree = dir2tree(ROOT,{\\r\\n  fileContent:true,\\r\\n  sortBy:\\\"extension\\\",\\r\\n  skipFile:[\\\"ger.md\\\"],\\r\\n  skipFolder:[\\\".git\\\",\\\"node_modules\\\"],\\r\\n  skipExtension:[\\\"json\\\"],\\r\\n},[markdown_to_html]);\\r\\n\\r\\nconsole.log(MyTree.tree)\\r\\nMyTree.write(TARGET,\\\"generated.json\\\")\\r\\n\\r\\n\",\n    \"stats\": {\n      \"length\": 496,\n      \"size\": 0.484375,\n      \"lines\": 18\n    },\n    \"metadata\": {\n      \"created\": \"2023-10-27T18:31:55.897Z\",\n      \"modified\": \"2023-10-27T18:31:55.897Z\",\n      \"permissions\": 33206\n    }\n  },\n  \"index2\": {\n    \"content\": \"var $cFoub$fs = require(\\\"fs\\\");\\r\\nvar $cFoub$path = require(\\\"path\\\");\\r\\n\\r\\n\\r\\n\\r\\nvar $697a68694f2aacad$exports = {};\\r\\n/*\\r\\nDevelopped by zakaria elaloui\\r\\nGithub : https://github.com/zakarialaoui10\\r\\n*/ function $697a68694f2aacad$var$flat_obj(obj, depth = Infinity, separator = \\\".\\\", replacement = \\\"_\\\") {\\r\\n    const result = {};\\r\\n    let i = 0;\\r\\n    function recurse(current, path = []) {\\r\\n        if (i === depth) {\\r\\n            Object.assign(result, current);\\r\\n            return;\\r\\n        }\\r\\n        for(const key in current){\\r\\n            const value = current[key];\\r\\n            const newPath = [\\r\\n                ...path,\\r\\n                key\\r\\n            ];\\r\\n            if (typeof value === \\\"object\\\" && !Array.isArray(value)) recurse(value, newPath);\\r\\n            else {\\r\\n                const flatKey = newPath.join(separator).replace(new RegExp(`\\\\\\\\${separator}`, \\\"g\\\"), replacement);\\r\\n                result[flatKey] = value;\\r\\n            }\\r\\n            i++;\\r\\n        }\\r\\n    }\\r\\n    recurse(obj);\\r\\n    return result;\\r\\n}\\r\\nconst $697a68694f2aacad$var$mapfun = (fun, { skip: skip = [], key: key = false, value: value = true } = {}, ...X)=>{\\r\\n    const Y = X.map((x)=>{\\r\\n        if (typeof skip === \\\"string\\\" || [\\r\\n            null,\\r\\n            undefined\\r\\n        ].includes(skip)) skip = [\\r\\n            skip\\r\\n        ];\\r\\n        const skipPrimitives = [];\\r\\n        const skipObjects = [];\\r\\n        skip.forEach((element)=>typeof element === \\\"object\\\" && element !== null ? skipObjects.push(element) : skipPrimitives.push(element));\\r\\n        if (skipPrimitives.includes(typeof x) || skipPrimitives.includes(x)) return x;\\r\\n        if (skipObjects.some((n)=>x instanceof n)) return x;\\r\\n        if (x === null) return fun(null);\\r\\n        if ([\\r\\n            \\\"number\\\",\\r\\n            \\\"string\\\",\\r\\n            \\\"boolean\\\",\\r\\n            \\\"bigint\\\",\\r\\n            \\\"undefined\\\"\\r\\n        ].includes(typeof x)) return fun(x);\\r\\n        if (typeof x === \\\"symbol\\\") throw new Error(\\\"symbols are not supported yet !\\\");\\r\\n        if (x instanceof Array) return x.map((n)=>$697a68694f2aacad$var$mapfun(fun, {}, n));\\r\\n        if (ArrayBuffer.isView(x)) return Array.from(x).map((n)=>fun(n));\\r\\n        if (x instanceof Set) return new Set($697a68694f2aacad$var$mapfun(fun, {}, ...[\\r\\n            ...x\\r\\n        ]));\\r\\n        if (x instanceof WeakSet) throw new Error(\\\"WeakSets not supported yet !\\\");\\r\\n        if (x instanceof WeakMap) throw new Error(\\\"WeakMaps not supported yet !\\\");\\r\\n        if (x instanceof Map) return new Map([\\r\\n            ...x\\r\\n        ].map((n)=>{\\r\\n            return [\\r\\n                key ? $697a68694f2aacad$var$mapfun(fun, {}, n[0]) : n[0],\\r\\n                value ? $697a68694f2aacad$var$mapfun(fun, {}, n[1]) : n[1]\\r\\n            ];\\r\\n        }));\\r\\n        if (x instanceof Object) return Object.fromEntries(Object.entries(x).map(([KEY, VALUE])=>[\\r\\n                key ? $697a68694f2aacad$var$mapfun(fun, {}, KEY) : KEY,\\r\\n                value ? $697a68694f2aacad$var$mapfun(fun, {}, VALUE) : VALUE\\r\\n            ]));\\r\\n        else throw new Error(\\\"Uncategorised data\\\");\\r\\n    });\\r\\n    return Y.length === 1 ? Y[0] : Y;\\r\\n};\\r\\n$697a68694f2aacad$exports = {\\r\\n    mapfun: $697a68694f2aacad$var$mapfun,\\r\\n    flat_obj: $697a68694f2aacad$var$flat_obj\\r\\n};\\r\\n\\r\\n\\r\\nvar $2776a60caf88deef$require$mapfun = $697a68694f2aacad$exports.mapfun;\\r\\nvar $2776a60caf88deef$require$flat_obj = $697a68694f2aacad$exports.flat_obj;\\r\\nvar $3d93cec531ae9d4c$exports = {};\\r\\n\\r\\nfunction $3d93cec531ae9d4c$var$should_skip_file(filePath) {\\r\\n    const normalizedPath = $cFoub$path.normalize(filePath);\\r\\n    if (this?.options?.skip?.folder?.includes($cFoub$path.basename(normalizedPath)) || this?.options?.skip?.file?.includes($cFoub$path.basename(normalizedPath)) || this?.options?.skip?.extension?.includes($cFoub$path.extname(normalizedPath).slice(1))) return true;\\r\\n    return false;\\r\\n}\\r\\nfunction $3d93cec531ae9d4c$var$should_skip_folder(filePath) {\\r\\n    if (typeof filePath !== \\\"string\\\") return false;\\r\\n    const normalizedPath = $cFoub$path.normalize(filePath);\\r\\n    if (this?.options?.skipFolder?.includes($cFoub$path.basename(normalizedPath))) return true;\\r\\n    return false;\\r\\n}\\r\\n$3d93cec531ae9d4c$exports = {\\r\\n    should_skip_file: $3d93cec531ae9d4c$var$should_skip_file,\\r\\n    should_skip_folder: $3d93cec531ae9d4c$var$should_skip_folder\\r\\n};\\r\\n\\r\\n\\r\\nvar $2776a60caf88deef$require$should_skip_file = $3d93cec531ae9d4c$exports.should_skip_file;\\r\\nvar $2776a60caf88deef$require$should_skip_folder = $3d93cec531ae9d4c$exports.should_skip_folder;\\r\\nvar $82c6becc65ef4e6c$exports = {};\\r\\n\\r\\n\\r\\nvar $29ba264081b04b00$exports = {};\\r\\n\\r\\n\\r\\nfunction $29ba264081b04b00$var$is_directory(filePath) {\\r\\n    return $cFoub$fs.statSync(filePath).isDirectory();\\r\\n}\\r\\nfunction $29ba264081b04b00$var$add_to_tree(key, value) {\\r\\n    const keys = key.split($cFoub$path.sep);\\r\\n    const lastKeyIndex = keys.length - 1;\\r\\n    keys.reduce((subtree, currentKey, index)=>{\\r\\n        if (!subtree[currentKey]) subtree[currentKey] = index === lastKeyIndex ? value : {};\\r\\n        return subtree[currentKey];\\r\\n    }, this.tree);\\r\\n}\\r\\n$29ba264081b04b00$exports = {\\r\\n    is_directory: $29ba264081b04b00$var$is_directory,\\r\\n    add_to_tree: $29ba264081b04b00$var$add_to_tree\\r\\n};\\r\\n\\r\\n\\r\\nvar $82c6becc65ef4e6c$require$is_directory = $29ba264081b04b00$exports.is_directory;\\r\\nfunction $82c6becc65ef4e6c$var$sort_files(files, order = 1) {\\r\\n    return files.sort((a, b)=>{\\r\\n        const filePathA = $cFoub$path.join(this.root, a);\\r\\n        const filePathB = $cFoub$path.join(this.root, b);\\r\\n        // Check if either of the files is a directory and handle accordingly\\r\\n        const isDirectoryA = $82c6becc65ef4e6c$require$is_directory(filePathA);\\r\\n        const isDirectoryB = $82c6becc65ef4e6c$require$is_directory(filePathB);\\r\\n        if (isDirectoryA && !isDirectoryB) return -1; // Directories come before files\\r\\n        else if (!isDirectoryA && isDirectoryB) return 1; // Files come after directories\\r\\n        if (isDirectoryA && isDirectoryB) return a.localeCompare(b); // Sort directories by name\\r\\n        // If both are files, perform the sorting based on your criteria\\r\\n        const statsA = $cFoub$fs.statSync(filePathA);\\r\\n        const statsB = $cFoub$fs.statSync(filePathB);\\r\\n        const extensionA = $cFoub$path.extname(filePathA).slice(1);\\r\\n        const extensionB = $cFoub$path.extname(filePathB).slice(1);\\r\\n        const linesA = $cFoub$fs.readFileSync(filePathA, \\\"utf8\\\").split(\\\"\\\\n\\\").length;\\r\\n        const linesB = $cFoub$fs.readFileSync(filePathB, \\\"utf8\\\").split(\\\"\\\\n\\\").length;\\r\\n        // Customize sorting based on sortBy option (name, size, created, modified, extension, lines, path, etc.)\\r\\n        switch(this.sortBy.toLowerCase()){\\r\\n            case \\\"name\\\":\\r\\n                return order * a.localeCompare(b);\\r\\n            case \\\"size\\\":\\r\\n                return order * (statsA.size - statsB.size);\\r\\n            case \\\"created\\\":\\r\\n                return order * (statsA.birthtime - statsB.birthtime);\\r\\n            case \\\"modified\\\":\\r\\n                return order * (statsA.mtime.getTime() - statsB.mtime.getTime());\\r\\n            case \\\"extension\\\":\\r\\n                return order * extensionA.localeCompare(extensionB);\\r\\n            case \\\"lines\\\":\\r\\n                return order * (linesA - linesB);\\r\\n            case \\\"path\\\":\\r\\n                return order * filePathB.localeCompare(filePathA);\\r\\n            default:\\r\\n                return 0;\\r\\n        }\\r\\n    });\\r\\n}\\r\\n$82c6becc65ef4e6c$exports = {\\r\\n    sort_files: $82c6becc65ef4e6c$var$sort_files\\r\\n};\\r\\n\\r\\n\\r\\nvar $2776a60caf88deef$require$sort_files = $82c6becc65ef4e6c$exports.sort_files;\\r\\nvar $0b90f1fd7064b3da$exports = {};\\r\\n\\r\\n\\r\\nvar $0b90f1fd7064b3da$require$is_directory = $29ba264081b04b00$exports.is_directory;\\r\\n\\r\\nvar $0b90f1fd7064b3da$require$should_skip_file = $3d93cec531ae9d4c$exports.should_skip_file;\\r\\nfunction $0b90f1fd7064b3da$var$filter_files(files) {\\r\\n    return files.filter((file)=>{\\r\\n        if ($0b90f1fd7064b3da$require$is_directory($cFoub$path.join(this.root, file))) return true; // Skip directories\\r\\n        const filePath = $cFoub$path.join(this.root, file);\\r\\n        const shouldSkip = $0b90f1fd7064b3da$require$should_skip_file.call(this, filePath);\\r\\n        return !shouldSkip;\\r\\n    });\\r\\n}\\r\\n$0b90f1fd7064b3da$exports = {\\r\\n    filter_files: $0b90f1fd7064b3da$var$filter_files\\r\\n};\\r\\n\\r\\n\\r\\nvar $2776a60caf88deef$require$filter_files = $0b90f1fd7064b3da$exports.filter_files;\\r\\n\\r\\nvar $2776a60caf88deef$require$add_to_tree = $29ba264081b04b00$exports.add_to_tree;\\r\\nvar $30fb452386496690$exports = {};\\r\\n\\r\\nfunction $30fb452386496690$var$file_metadata(filePath) {\\r\\n    const stats = $cFoub$fs.statSync(filePath);\\r\\n    const metadata = {\\r\\n        created: stats.birthtime,\\r\\n        modified: stats.mtime,\\r\\n        permissions: stats.mode\\r\\n    };\\r\\n    return metadata;\\r\\n}\\r\\n$30fb452386496690$exports = {\\r\\n    file_metadata: $30fb452386496690$var$file_metadata\\r\\n};\\r\\n\\r\\n\\r\\nvar $2776a60caf88deef$require$file_metadata = $30fb452386496690$exports.file_metadata;\\r\\nclass $2776a60caf88deef$var$Dir2Tree {\\r\\n    constructor(root, options = {}, callbacks = {}){\\r\\n        this.root = root;\\r\\n        this.options = options;\\r\\n        this.callbacks = callbacks;\\r\\n        this.tree = {};\\r\\n        this.sortBy = options.sortBy || \\\"name\\\";\\r\\n        this.generate();\\r\\n    }\\r\\n    generate() {\\r\\n        const stats = $cFoub$fs.statSync(this.root);\\r\\n        if (!stats.isDirectory()) return null;\\r\\n        const files = $cFoub$fs.readdirSync(this.root);\\r\\n        const FILTRED_FILES = $2776a60caf88deef$require$filter_files.call(this, files);\\r\\n        const SORTED_FILES = $2776a60caf88deef$require$sort_files.call(this, FILTRED_FILES);\\r\\n        SORTED_FILES.forEach((file)=>{\\r\\n            const filePath = $cFoub$path.join(this.root, file);\\r\\n            if ($2776a60caf88deef$require$should_skip_folder.call(this, file)) return;\\r\\n            const fileStats = $cFoub$fs.statSync(filePath);\\r\\n            if (fileStats.isDirectory()) {\\r\\n                const subDirectory = new $2776a60caf88deef$var$Dir2Tree(filePath, this.options, this.callbacks);\\r\\n                Object.assign(this.tree, {\\r\\n                    [$cFoub$path.basename(filePath)]: subDirectory.tree\\r\\n                });\\r\\n                return this;\\r\\n            }\\r\\n            const fileName = $cFoub$path.parse(file).name;\\r\\n            if ($2776a60caf88deef$require$should_skip_file.call(this, filePath)) return;\\r\\n            if (this.options?.fileContent) this.addFileInfo(filePath, fileName);\\r\\n        });\\r\\n        //this.tree=tree;\\r\\n        return this.tree;\\r\\n    }\\r\\n    addFileInfo(filePath, fileName) {\\r\\n        const content = $cFoub$fs.readFileSync(filePath, \\\"utf8\\\");\\r\\n        const fileInfo = {};\\r\\n        const stats = {};\\r\\n        const fullName = $cFoub$path.basename(filePath);\\r\\n        const [name, extension] = fullName.split(\\\".\\\");\\r\\n        const length = $cFoub$fs.statSync(filePath).size;\\r\\n        const lines = content.split(\\\"\\\\n\\\").length;\\r\\n        const metadata = $2776a60caf88deef$require$file_metadata.call(this, filePath);\\r\\n        if (this.options?.fileContent) Object.assign(fileInfo, {\\r\\n            content: content\\r\\n        });\\r\\n        if (this.options?.fileExtension) Object.assign(fileInfo, {\\r\\n            extension: extension\\r\\n        });\\r\\n        if (this.options?.fileName) Object.assign(fileInfo, {\\r\\n            name: name\\r\\n        });\\r\\n        Object.assign(stats, {\\r\\n            length: length\\r\\n        });\\r\\n        Object.assign(stats, {\\r\\n            size: length / 1024\\r\\n        });\\r\\n        Object.assign(stats, {\\r\\n            lines: lines\\r\\n        });\\r\\n        Object.assign(fileInfo, {\\r\\n            stats: stats\\r\\n        });\\r\\n        Object.assign(fileInfo, {\\r\\n            metadata: metadata\\r\\n        });\\r\\n        this?.callbacks?.map((n)=>n(filePath, fileInfo));\\r\\n        $2776a60caf88deef$require$add_to_tree.call(this, fileName + \\\"_\\\" + extension, fileInfo);\\r\\n    }\\r\\n    write(Target, filename) {\\r\\n        const jsonTree = JSON.stringify(this.tree, null, 2); // Pretty-print the JSON\\r\\n        const filePath = $cFoub$path.join(Target, filename); // Construct the file path\\r\\n        $cFoub$fs.writeFileSync(filePath, jsonTree, \\\"utf8\\\");\\r\\n        console.log(`Tree written to ${filePath}`);\\r\\n        return this;\\r\\n    }\\r\\n    flat(depth = 1, separator = \\\"_\\\") {\\r\\n        this.tree = $2776a60caf88deef$require$flat_obj(this.tree, depth, separator);\\r\\n        return this;\\r\\n    }\\r\\n    reduce() {\\r\\n        return this;\\r\\n    }\\r\\n    sort() {\\r\\n        return this;\\r\\n    }\\r\\n    filter() {\\r\\n        return this;\\r\\n    }\\r\\n    map(callback, options = {}) {\\r\\n        this.tree = $2776a60caf88deef$require$mapfun(callback, options, this.tree);\\r\\n        return this;\\r\\n    }\\r\\n}\\r\\nconst $2776a60caf88deef$var$dir2tree = (root, options, callbacks = [])=>new $2776a60caf88deef$var$Dir2Tree(root, options, callbacks);\\r\\nmodule.exports = $2776a60caf88deef$var$dir2tree;\\r\\n\\r\\n\\r\\n//# sourceMappingURL=index_bundle.js.map\\r\\n\\r\\nconst fs=require(\\\"fs\\\")\\r\\nconst path=require(\\\"path\\\")\\r\\nconst dir2tree=$2776a60caf88deef$var$dir2tree;\\r\\nconst ROOT = path.join(process.cwd(),'.');\\r\\nconst TARGET = path.join(process.cwd(),\\\".\\\");\\r\\nconsole.log({ROOT,TARGET})\\r\\nconsole.log(process.env.CONFIG)\\r\\nconst MyTree = dir2tree(ROOT,{\\r\\n  fileContent:true,\\r\\n  sortBy:\\\"extension\\\",\\r\\n  skipFile:[\\\"ger.md\\\"],\\r\\n  skipFolder:[\\\"to be skipped\\\"],\\r\\n  skipExtension:[\\\"json\\\"],\\r\\n});\\r\\n\\r\\n//console.log(MyTree.tree)\\r\\nMyTree.write(TARGET,\\\"generated.json\\\")\\r\\n\",\n    \"stats\": {\n      \"length\": 13338,\n      \"size\": 13.025390625,\n      \"lines\": 333\n    },\n    \"metadata\": {\n      \"created\": \"2023-10-27T18:31:55.897Z\",\n      \"modified\": \"2023-10-27T18:31:55.897Z\",\n      \"permissions\": 33206\n    }\n  }\n}",
      "stats": {
        "length": 15498,
        "size": 15.134765625,
        "lines": 43
      },
      "metadata": {
        "created": "2023-10-28T12:10:05.362Z",
        "modified": "2023-10-28T12:10:05.362Z",
        "permissions": 33188
      }
    },
    "package_json": {
      "content": "{\n  \"name\": \"automation\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"type\": \"commonjs\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"MIT\"\n}\n",
      "stats": {
        "length": 228,
        "size": 0.22265625,
        "lines": 13
      },
      "metadata": {
        "created": "2023-10-28T12:10:05.362Z",
        "modified": "2023-10-28T12:10:05.362Z",
        "permissions": 33188
      }
    }
  },
  "dist": {
    "index_cjs": {
      "content": "'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar Javascript = {exports: {}};\n\n/*\nDevelopped by zakaria elaloui\nGithub : https://github.com/zakarialaoui10\n*/\n\n(function (module, exports) {\n\tfunction flat_obj(obj,depth=Infinity,separator = '.', replacement = '_') {\n\t    const result = {};\n\t    let i=0;\n\t    function recurse(current, path = []) {\n\t        if(i===depth){\n\t            Object.assign(result,current);\n\t            return ;\n\t        }\n\t      for (const key in current) {\n\t        const value = current[key];\n\t        const newPath = [...path, key];\n\t        if (typeof value === 'object' && !Array.isArray(value)) {\n\t          recurse(value, newPath);\n\t        } else {\n\t          const flatKey = newPath.join(separator).replace(new RegExp(`\\\\${separator}`, 'g'), replacement);\n\t          result[flatKey] = value;\n\t        }\n\t        i++;\n\t      }\n\t    }\n\t    recurse(obj);\n\t    return result;\n\t}\n\tconst mapfun = (fun, { skip = [], key = false, value = true } = {}, ...X) => {\n\t  const Y = X.map((x) => {\n\t    if (typeof skip === 'string'||[null,undefined].includes(skip))skip=[skip];\n\t      const skipPrimitives = [];\n\t      const skipObjects = [];\n\t      skip.forEach((element) =>(typeof element===\"object\"&&element !==null)?skipObjects.push(element):skipPrimitives.push(element));\n\t        if(skipPrimitives.includes(typeof x)||skipPrimitives.includes(x)) return x;\n\t        if(skipObjects.some(n=>x instanceof n))return x;\n\t    if (x === null) return fun(null);\n\t    if (['number', 'string', 'boolean', 'bigint', 'undefined'].includes(typeof x)) return fun(x);\n\t    if (typeof(x)===\"symbol\") throw new Error('symbols are not supported yet !');\n\t    if (x instanceof Array) return x.map((n) => mapfun(fun,{},n));\n\t    if (ArrayBuffer.isView(x)) return Array.from(x).map((n) => fun(n));\n\t    if (x instanceof Set) return new Set(mapfun(fun,{},...[...x]));\n\t    if (x instanceof WeakSet) throw new Error('WeakSets not supported yet !');\n\t    if (x instanceof WeakMap) throw new Error('WeakMaps not supported yet !');\n\t    if (x instanceof Map) return new Map([...x].map(n =>{\n\t        return [\n\t            key ? mapfun(fun,{},n[0]) : n[0],\n\t            value ? mapfun(fun,{},n[1]) : n[1],\n\t            ]\n\t    }));\n\t    if (x instanceof Object) return Object.fromEntries(\n\t      Object.entries(x).map(([KEY, VALUE]) => [\n\t        key?mapfun(fun,{},KEY):KEY,\n\t        value?mapfun(fun,{},VALUE):VALUE\n\t      ])\n\t    )\n\t    else throw new Error('Uncategorised data');\n\t  });\n\t    return Y.length === 1 ? Y[0] : Y;\n\t};\n\t{\n\t  module.exports = {mapfun,flat_obj} ;\n\t} \n} (Javascript));\n\nvar JavascriptExports = Javascript.exports;\n\nfunction should_skip_file(filePath) {\n    const normalizedPath = path.normalize(filePath);\n    if (\n      this?.options?.skip?.folder?.includes(path.basename(normalizedPath)) ||\n      this?.options?.skip?.file?.includes(path.basename(normalizedPath)) ||\n      this?.options?.skip?.extension?.includes(\n        path.extname(normalizedPath).slice(1)\n      )\n    )return true;\n    return false;\n  }\nfunction should_skip_folder(filePath) {\n  if (typeof filePath !== 'string') return false;\n  const normalizedPath = path.normalize(filePath);\n  if (this?.options?.skipFolder?.includes(path.basename(normalizedPath)))\n    return true;\n  return false;\n  }\n\nfunction is_directory(filePath) {\n    return fs.statSync(filePath).isDirectory();\n  }\nfunction add_to_tree(key, value) {\n  const keys = key.split(path.sep);\n  const lastKeyIndex = keys.length - 1;\n  keys.reduce((subtree, currentKey, index) => {\n    if (!subtree[currentKey]) {\n      subtree[currentKey] = index === lastKeyIndex ? value : {};\n    }\n    return subtree[currentKey];\n  }, this.tree);\n}\n\nfunction sort_files(files, order = 1) {\n    return files.sort((a, b) => {\n      const filePathA = path.join(this.root, a);\n      const filePathB = path.join(this.root, b);\n  \n      // Check if either of the files is a directory and handle accordingly\n      const isDirectoryA = is_directory(filePathA);\n      const isDirectoryB = is_directory(filePathB);\n  \n      if (isDirectoryA && !isDirectoryB) {\n        return -1; // Directories come before files\n      } else if (!isDirectoryA && isDirectoryB) {\n        return 1; // Files come after directories\n      }\n  \n      if (isDirectoryA && isDirectoryB) {\n        return a.localeCompare(b); // Sort directories by name\n      }\n  \n      // If both are files, perform the sorting based on your criteria\n      const statsA = fs.statSync(filePathA);\n      const statsB = fs.statSync(filePathB);\n      const extensionA = path.extname(filePathA).slice(1);\n      const extensionB = path.extname(filePathB).slice(1);\n      const linesA = fs.readFileSync(filePathA, \"utf8\").split(\"\\n\").length;\n      const linesB = fs.readFileSync(filePathB, \"utf8\").split(\"\\n\").length;\n  \n      // Customize sorting based on sortBy option (name, size, created, modified, extension, lines, path, etc.)\n      switch (this.sortBy.toLowerCase()) {\n        case \"name\":\n          return order * a.localeCompare(b);\n        case \"size\":\n          return order * (statsA.size - statsB.size);\n        case \"created\":\n          return order * (statsA.birthtime - statsB.birthtime);\n        case \"modified\":\n          return order * (statsA.mtime.getTime() - statsB.mtime.getTime());\n        case \"extension\":\n          return order * extensionA.localeCompare(extensionB);\n        case \"lines\":\n          return order * (linesA - linesB);\n        case \"path\":\n          return order * filePathB.localeCompare(filePathA);\n        default:\n          return 0;\n      }\n    });\n  }\n\nfunction filter_files(files) {\n    return files.filter((file) => {\n      if (is_directory(path.join(this.root, file))) {\n        return true; // Skip directories\n      }\n      const filePath = path.join(this.root, file);\n      const shouldSkip = should_skip_file.call(this, filePath);\n      return !shouldSkip;\n    });\n  }\n\nfunction file_metadata(filePath) {\n    const stats = fs.statSync(filePath);\n    const metadata = {\n      created: stats.birthtime,\n      modified: stats.mtime,\n      permissions: stats.mode,\n    };\n    return metadata;\n  }\n\nclass Dir2Tree {\n  constructor(root, options = {}, callbacks = {}) {\n    this.root = root;\n    this.options = options;\n    this.callbacks = callbacks;\n    this.tree = {};\n    this.sortBy = options.sortBy || \"name\";\n    this.generate();\n  }\n  generate() {\n    const stats = fs.statSync(this.root);\n    if (!stats.isDirectory()) return null;\n    const files = fs.readdirSync(this.root);\n    const FILTRED_FILES = filter_files.call(this, files);\n    const SORTED_FILES = sort_files.call(this, FILTRED_FILES);\n\n    SORTED_FILES.forEach((file) => {\n      const filePath = path.join(this.root, file);\n      if(should_skip_folder.call(this,file))return;\n      const fileStats = fs.statSync(filePath);\n      if(fileStats.isDirectory()){\n        const subDirectory = new Dir2Tree(\n          filePath,\n          this.options,\n          this.callbacks\n        );\n        Object.assign(this.tree,{[path.basename(filePath)]:subDirectory.tree});\n        return this\n      }\n      const fileName = path.parse(file).name;\n      if (should_skip_file.call(this, filePath)) return;\n        if (this.options?.fileContent) {\n          this.addFileInfo(filePath, fileName);\n        }\n      \n    });\n    //this.tree=tree;\n    return this.tree;\n  }\n  addFileInfo(filePath, fileName) {\n    const content = fs.readFileSync(filePath, \"utf8\");\n    const fileInfo = {};\n    const stats = {};\n    const fullName = path.basename(filePath);\n    const [name, extension] = fullName.split(\".\");\n    const length = fs.statSync(filePath).size;\n    const lines = content.split(\"\\n\").length;\n    const metadata = file_metadata.call(this, filePath);\n    if (this.options?.fileContent) Object.assign(fileInfo, { content });\n    if (this.options?.fileExtension) Object.assign(fileInfo, { extension });\n    if (this.options?.fileName) Object.assign(fileInfo, { name });\n    Object.assign(stats, { length });\n    Object.assign(stats, { size: length / 1024 });\n    Object.assign(stats, { lines });\n    Object.assign(fileInfo, { stats });\n    Object.assign(fileInfo, { metadata });\n    this?.callbacks?.map((n) => n(filePath, fileInfo));\n    add_to_tree.call(this,fileName+\"_\"+extension, fileInfo);\n  }\n  \n  write(Target, filename) {\n    const jsonTree = JSON.stringify(this.tree, null, 2); // Pretty-print the JSON\n    const filePath = path.join(Target, filename); // Construct the file path\n    fs.writeFileSync(filePath, jsonTree, 'utf8');\n    console.log(`Tree written to ${filePath}`);\n    return this;\n  }\n  flat(depth=1,separator=\"_\"){\n    this.tree=JavascriptExports.flat_obj(this.tree,depth,separator);\n    return this;\n  }\n  reduce(){\n    return this;\n  }\n  sort(){\n    return this;\n  }\n  filter(){\n    return this;\n  }\n  map(callback,options={}){\n    this.tree=JavascriptExports.mapfun(callback,options,this.tree);\n    return this;\n  }\n}\nconst dir2tree = (root, options, callbacks=[]) => new Dir2Tree(root, options, callbacks);\n\nmodule.exports = dir2tree;\n",
      "stats": {
        "length": 9074,
        "size": 8.861328125,
        "lines": 267
      },
      "metadata": {
        "created": "2023-10-28T12:10:05.362Z",
        "modified": "2023-10-28T12:10:05.362Z",
        "permissions": 33188
      }
    },
    "index_mjs": {
      "content": "import fs from 'fs';\nimport path from 'path';\n\nvar Javascript = {exports: {}};\n\n/*\nDevelopped by zakaria elaloui\nGithub : https://github.com/zakarialaoui10\n*/\n\n(function (module, exports) {\n\tfunction flat_obj(obj,depth=Infinity,separator = '.', replacement = '_') {\n\t    const result = {};\n\t    let i=0;\n\t    function recurse(current, path = []) {\n\t        if(i===depth){\n\t            Object.assign(result,current);\n\t            return ;\n\t        }\n\t      for (const key in current) {\n\t        const value = current[key];\n\t        const newPath = [...path, key];\n\t        if (typeof value === 'object' && !Array.isArray(value)) {\n\t          recurse(value, newPath);\n\t        } else {\n\t          const flatKey = newPath.join(separator).replace(new RegExp(`\\\\${separator}`, 'g'), replacement);\n\t          result[flatKey] = value;\n\t        }\n\t        i++;\n\t      }\n\t    }\n\t    recurse(obj);\n\t    return result;\n\t}\n\tconst mapfun = (fun, { skip = [], key = false, value = true } = {}, ...X) => {\n\t  const Y = X.map((x) => {\n\t    if (typeof skip === 'string'||[null,undefined].includes(skip))skip=[skip];\n\t      const skipPrimitives = [];\n\t      const skipObjects = [];\n\t      skip.forEach((element) =>(typeof element===\"object\"&&element !==null)?skipObjects.push(element):skipPrimitives.push(element));\n\t        if(skipPrimitives.includes(typeof x)||skipPrimitives.includes(x)) return x;\n\t        if(skipObjects.some(n=>x instanceof n))return x;\n\t    if (x === null) return fun(null);\n\t    if (['number', 'string', 'boolean', 'bigint', 'undefined'].includes(typeof x)) return fun(x);\n\t    if (typeof(x)===\"symbol\") throw new Error('symbols are not supported yet !');\n\t    if (x instanceof Array) return x.map((n) => mapfun(fun,{},n));\n\t    if (ArrayBuffer.isView(x)) return Array.from(x).map((n) => fun(n));\n\t    if (x instanceof Set) return new Set(mapfun(fun,{},...[...x]));\n\t    if (x instanceof WeakSet) throw new Error('WeakSets not supported yet !');\n\t    if (x instanceof WeakMap) throw new Error('WeakMaps not supported yet !');\n\t    if (x instanceof Map) return new Map([...x].map(n =>{\n\t        return [\n\t            key ? mapfun(fun,{},n[0]) : n[0],\n\t            value ? mapfun(fun,{},n[1]) : n[1],\n\t            ]\n\t    }));\n\t    if (x instanceof Object) return Object.fromEntries(\n\t      Object.entries(x).map(([KEY, VALUE]) => [\n\t        key?mapfun(fun,{},KEY):KEY,\n\t        value?mapfun(fun,{},VALUE):VALUE\n\t      ])\n\t    )\n\t    else throw new Error('Uncategorised data');\n\t  });\n\t    return Y.length === 1 ? Y[0] : Y;\n\t};\n\t{\n\t  module.exports = {mapfun,flat_obj} ;\n\t} \n} (Javascript));\n\nvar JavascriptExports = Javascript.exports;\n\nfunction should_skip_file(filePath) {\n    const normalizedPath = path.normalize(filePath);\n    if (\n      this?.options?.skip?.folder?.includes(path.basename(normalizedPath)) ||\n      this?.options?.skip?.file?.includes(path.basename(normalizedPath)) ||\n      this?.options?.skip?.extension?.includes(\n        path.extname(normalizedPath).slice(1)\n      )\n    )return true;\n    return false;\n  }\nfunction should_skip_folder(filePath) {\n  if (typeof filePath !== 'string') return false;\n  const normalizedPath = path.normalize(filePath);\n  if (this?.options?.skipFolder?.includes(path.basename(normalizedPath)))\n    return true;\n  return false;\n  }\n\nfunction is_directory(filePath) {\n    return fs.statSync(filePath).isDirectory();\n  }\nfunction add_to_tree(key, value) {\n  const keys = key.split(path.sep);\n  const lastKeyIndex = keys.length - 1;\n  keys.reduce((subtree, currentKey, index) => {\n    if (!subtree[currentKey]) {\n      subtree[currentKey] = index === lastKeyIndex ? value : {};\n    }\n    return subtree[currentKey];\n  }, this.tree);\n}\n\nfunction sort_files(files, order = 1) {\n    return files.sort((a, b) => {\n      const filePathA = path.join(this.root, a);\n      const filePathB = path.join(this.root, b);\n  \n      // Check if either of the files is a directory and handle accordingly\n      const isDirectoryA = is_directory(filePathA);\n      const isDirectoryB = is_directory(filePathB);\n  \n      if (isDirectoryA && !isDirectoryB) {\n        return -1; // Directories come before files\n      } else if (!isDirectoryA && isDirectoryB) {\n        return 1; // Files come after directories\n      }\n  \n      if (isDirectoryA && isDirectoryB) {\n        return a.localeCompare(b); // Sort directories by name\n      }\n  \n      // If both are files, perform the sorting based on your criteria\n      const statsA = fs.statSync(filePathA);\n      const statsB = fs.statSync(filePathB);\n      const extensionA = path.extname(filePathA).slice(1);\n      const extensionB = path.extname(filePathB).slice(1);\n      const linesA = fs.readFileSync(filePathA, \"utf8\").split(\"\\n\").length;\n      const linesB = fs.readFileSync(filePathB, \"utf8\").split(\"\\n\").length;\n  \n      // Customize sorting based on sortBy option (name, size, created, modified, extension, lines, path, etc.)\n      switch (this.sortBy.toLowerCase()) {\n        case \"name\":\n          return order * a.localeCompare(b);\n        case \"size\":\n          return order * (statsA.size - statsB.size);\n        case \"created\":\n          return order * (statsA.birthtime - statsB.birthtime);\n        case \"modified\":\n          return order * (statsA.mtime.getTime() - statsB.mtime.getTime());\n        case \"extension\":\n          return order * extensionA.localeCompare(extensionB);\n        case \"lines\":\n          return order * (linesA - linesB);\n        case \"path\":\n          return order * filePathB.localeCompare(filePathA);\n        default:\n          return 0;\n      }\n    });\n  }\n\nfunction filter_files(files) {\n    return files.filter((file) => {\n      if (is_directory(path.join(this.root, file))) {\n        return true; // Skip directories\n      }\n      const filePath = path.join(this.root, file);\n      const shouldSkip = should_skip_file.call(this, filePath);\n      return !shouldSkip;\n    });\n  }\n\nfunction file_metadata(filePath) {\n    const stats = fs.statSync(filePath);\n    const metadata = {\n      created: stats.birthtime,\n      modified: stats.mtime,\n      permissions: stats.mode,\n    };\n    return metadata;\n  }\n\nclass Dir2Tree {\n  constructor(root, options = {}, callbacks = {}) {\n    this.root = root;\n    this.options = options;\n    this.callbacks = callbacks;\n    this.tree = {};\n    this.sortBy = options.sortBy || \"name\";\n    this.generate();\n  }\n  generate() {\n    const stats = fs.statSync(this.root);\n    if (!stats.isDirectory()) return null;\n    const files = fs.readdirSync(this.root);\n    const FILTRED_FILES = filter_files.call(this, files);\n    const SORTED_FILES = sort_files.call(this, FILTRED_FILES);\n\n    SORTED_FILES.forEach((file) => {\n      const filePath = path.join(this.root, file);\n      if(should_skip_folder.call(this,file))return;\n      const fileStats = fs.statSync(filePath);\n      if(fileStats.isDirectory()){\n        const subDirectory = new Dir2Tree(\n          filePath,\n          this.options,\n          this.callbacks\n        );\n        Object.assign(this.tree,{[path.basename(filePath)]:subDirectory.tree});\n        return this\n      }\n      const fileName = path.parse(file).name;\n      if (should_skip_file.call(this, filePath)) return;\n        if (this.options?.fileContent) {\n          this.addFileInfo(filePath, fileName);\n        }\n      \n    });\n    //this.tree=tree;\n    return this.tree;\n  }\n  addFileInfo(filePath, fileName) {\n    const content = fs.readFileSync(filePath, \"utf8\");\n    const fileInfo = {};\n    const stats = {};\n    const fullName = path.basename(filePath);\n    const [name, extension] = fullName.split(\".\");\n    const length = fs.statSync(filePath).size;\n    const lines = content.split(\"\\n\").length;\n    const metadata = file_metadata.call(this, filePath);\n    if (this.options?.fileContent) Object.assign(fileInfo, { content });\n    if (this.options?.fileExtension) Object.assign(fileInfo, { extension });\n    if (this.options?.fileName) Object.assign(fileInfo, { name });\n    Object.assign(stats, { length });\n    Object.assign(stats, { size: length / 1024 });\n    Object.assign(stats, { lines });\n    Object.assign(fileInfo, { stats });\n    Object.assign(fileInfo, { metadata });\n    this?.callbacks?.map((n) => n(filePath, fileInfo));\n    add_to_tree.call(this,fileName+\"_\"+extension, fileInfo);\n  }\n  \n  write(Target, filename) {\n    const jsonTree = JSON.stringify(this.tree, null, 2); // Pretty-print the JSON\n    const filePath = path.join(Target, filename); // Construct the file path\n    fs.writeFileSync(filePath, jsonTree, 'utf8');\n    console.log(`Tree written to ${filePath}`);\n    return this;\n  }\n  flat(depth=1,separator=\"_\"){\n    this.tree=JavascriptExports.flat_obj(this.tree,depth,separator);\n    return this;\n  }\n  reduce(){\n    return this;\n  }\n  sort(){\n    return this;\n  }\n  filter(){\n    return this;\n  }\n  map(callback,options={}){\n    this.tree=JavascriptExports.mapfun(callback,options,this.tree);\n    return this;\n  }\n}\nconst dir2tree = (root, options, callbacks=[]) => new Dir2Tree(root, options, callbacks);\n\nexport { dir2tree as default };\n",
      "stats": {
        "length": 9058,
        "size": 8.845703125,
        "lines": 265
      },
      "metadata": {
        "created": "2023-10-28T12:10:05.362Z",
        "modified": "2023-10-28T12:10:05.362Z",
        "permissions": 33188
      }
    }
  },
  "src": {
    "utils": {
      "callbacks_js": {
        "content": "",
        "stats": {
          "length": 0,
          "size": 0,
          "lines": 1
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.362Z",
          "modified": "2023-10-28T12:10:05.362Z",
          "permissions": 33188
        }
      },
      "filter_js": {
        "content": "import path from 'path';\nimport {is_directory} from \"./general.js\";\nimport {should_skip_file} from \"./skip.js\";\nfunction filter_files(files) {\n    return files.filter((file) => {\n      if (is_directory(path.join(this.root, file))) {\n        return true; // Skip directories\n      }\n      const filePath = path.join(this.root, file);\n      const shouldSkip = should_skip_file.call(this, filePath);\n      return !shouldSkip;\n    });\n  }\nexport{filter_files}\n",
        "stats": {
          "length": 456,
          "size": 0.4453125,
          "lines": 15
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.362Z",
          "modified": "2023-10-28T12:10:05.362Z",
          "permissions": 33188
        }
      },
      "general_js": {
        "content": "import fs from 'fs';\nimport path from 'path';\nfunction is_directory(filePath) {\n    return fs.statSync(filePath).isDirectory();\n  }\nfunction add_to_tree(key, value) {\n  const keys = key.split(path.sep);\n  const lastKeyIndex = keys.length - 1;\n  keys.reduce((subtree, currentKey, index) => {\n    if (!subtree[currentKey]) {\n      subtree[currentKey] = index === lastKeyIndex ? value : {};\n    }\n    return subtree[currentKey];\n  }, this.tree);\n}\nexport{is_directory,add_to_tree}\n",
        "stats": {
          "length": 478,
          "size": 0.466796875,
          "lines": 17
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.362Z",
          "modified": "2023-10-28T12:10:05.362Z",
          "permissions": 33188
        }
      },
      "skip_js": {
        "content": "import path from 'path';\nfunction should_skip_file(filePath) {\n    const normalizedPath = path.normalize(filePath);\n    if (\n      this?.options?.skip?.folder?.includes(path.basename(normalizedPath)) ||\n      this?.options?.skip?.file?.includes(path.basename(normalizedPath)) ||\n      this?.options?.skip?.extension?.includes(\n        path.extname(normalizedPath).slice(1)\n      )\n    )return true;\n    return false;\n  }\nfunction should_skip_folder(filePath) {\n  if (typeof filePath !== 'string') return false;\n  const normalizedPath = path.normalize(filePath);\n  if (this?.options?.skipFolder?.includes(path.basename(normalizedPath)))\n    return true;\n  return false;\n  }\nexport{should_skip_file,should_skip_folder}\n",
        "stats": {
          "length": 717,
          "size": 0.7001953125,
          "lines": 21
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.362Z",
          "modified": "2023-10-28T12:10:05.362Z",
          "permissions": 33188
        }
      },
      "sort_js": {
        "content": "import fs from 'fs';\nimport path from 'path';\nimport {is_directory} from \"./general.js\";\nfunction sort_files(files, order = 1) {\n    return files.sort((a, b) => {\n      const filePathA = path.join(this.root, a);\n      const filePathB = path.join(this.root, b);\n  \n      // Check if either of the files is a directory and handle accordingly\n      const isDirectoryA = is_directory(filePathA);\n      const isDirectoryB = is_directory(filePathB);\n  \n      if (isDirectoryA && !isDirectoryB) {\n        return -1; // Directories come before files\n      } else if (!isDirectoryA && isDirectoryB) {\n        return 1; // Files come after directories\n      }\n  \n      if (isDirectoryA && isDirectoryB) {\n        return a.localeCompare(b); // Sort directories by name\n      }\n  \n      // If both are files, perform the sorting based on your criteria\n      const statsA = fs.statSync(filePathA);\n      const statsB = fs.statSync(filePathB);\n      const extensionA = path.extname(filePathA).slice(1);\n      const extensionB = path.extname(filePathB).slice(1);\n      const linesA = fs.readFileSync(filePathA, \"utf8\").split(\"\\n\").length;\n      const linesB = fs.readFileSync(filePathB, \"utf8\").split(\"\\n\").length;\n  \n      // Customize sorting based on sortBy option (name, size, created, modified, extension, lines, path, etc.)\n      switch (this.sortBy.toLowerCase()) {\n        case \"name\":\n          return order * a.localeCompare(b);\n        case \"size\":\n          return order * (statsA.size - statsB.size);\n        case \"created\":\n          return order * (statsA.birthtime - statsB.birthtime);\n        case \"modified\":\n          return order * (statsA.mtime.getTime() - statsB.mtime.getTime());\n        case \"extension\":\n          return order * extensionA.localeCompare(extensionB);\n        case \"lines\":\n          return order * (linesA - linesB);\n        case \"path\":\n          return order * filePathB.localeCompare(filePathA);\n        default:\n          return 0;\n      }\n    });\n  }\n\nexport{sort_files}\n",
        "stats": {
          "length": 2002,
          "size": 1.955078125,
          "lines": 54
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.362Z",
          "modified": "2023-10-28T12:10:05.362Z",
          "permissions": 33188
        }
      },
      "stats_js": {
        "content": "import fs from 'fs';\nfunction file_metadata(filePath) {\n    const stats = fs.statSync(filePath);\n    const metadata = {\n      created: stats.birthtime,\n      modified: stats.mtime,\n      permissions: stats.mode,\n    };\n    return metadata;\n  }\nexport{file_metadata}\n",
        "stats": {
          "length": 266,
          "size": 0.259765625,
          "lines": 12
        },
        "metadata": {
          "created": "2023-10-28T12:10:05.362Z",
          "modified": "2023-10-28T12:10:05.362Z",
          "permissions": 33188
        }
      }
    },
    "index_js": {
      "content": "import fs from 'fs';\nimport path from 'path';\nimport { mapfun, flat_obj } from 'mapfun';\nimport { should_skip_file, should_skip_folder } from './utils/skip.js';\nimport { sort_files } from './utils/sort.js';\nimport { filter_files } from './utils/filter.js';\nimport { add_to_tree } from './utils/general.js';\nimport { file_metadata } from './utils/stats.js';\n\n\nclass Dir2Tree {\n  constructor(root, options = {}, callbacks = {}) {\n    this.root = root;\n    this.options = options;\n    this.callbacks = callbacks;\n    this.tree = {};\n    this.sortBy = options.sortBy || \"name\";\n    this.generate();\n  }\n  generate() {\n    const stats = fs.statSync(this.root);\n    if (!stats.isDirectory()) return null;\n    const files = fs.readdirSync(this.root);\n    const FILTRED_FILES = filter_files.call(this, files);\n    const SORTED_FILES = sort_files.call(this, FILTRED_FILES);\n\n    SORTED_FILES.forEach((file) => {\n      const filePath = path.join(this.root, file);\n      if(should_skip_folder.call(this,file))return;\n      const fileStats = fs.statSync(filePath);\n      if(fileStats.isDirectory()){\n        const subDirectory = new Dir2Tree(\n          filePath,\n          this.options,\n          this.callbacks\n        );\n        Object.assign(this.tree,{[path.basename(filePath)]:subDirectory.tree})\n        return this\n      }\n      const fileName = path.parse(file).name;\n      if (should_skip_file.call(this, filePath)) return;\n        if (this.options?.fileContent) {\n          this.addFileInfo(filePath, fileName);\n        }\n      \n    });\n    //this.tree=tree;\n    return this.tree;\n  }\n  addFileInfo(filePath, fileName) {\n    const content = fs.readFileSync(filePath, \"utf8\");\n    const fileInfo = {};\n    const stats = {};\n    const fullName = path.basename(filePath);\n    const [name, extension] = fullName.split(\".\");\n    const length = fs.statSync(filePath).size;\n    const lines = content.split(\"\\n\").length;\n    const metadata = file_metadata.call(this, filePath);\n    if (this.options?.fileContent) Object.assign(fileInfo, { content });\n    if (this.options?.fileExtension) Object.assign(fileInfo, { extension });\n    if (this.options?.fileName) Object.assign(fileInfo, { name });\n    Object.assign(stats, { length });\n    Object.assign(stats, { size: length / 1024 });\n    Object.assign(stats, { lines });\n    Object.assign(fileInfo, { stats });\n    Object.assign(fileInfo, { metadata });\n    this?.callbacks?.map((n) => n(filePath, fileInfo));\n    add_to_tree.call(this,fileName+\"_\"+extension, fileInfo);\n  }\n  \n  write(Target, filename) {\n    const jsonTree = JSON.stringify(this.tree, null, 2); // Pretty-print the JSON\n    const filePath = path.join(Target, filename); // Construct the file path\n    fs.writeFileSync(filePath, jsonTree, 'utf8');\n    console.log(`Tree written to ${filePath}`);\n    return this;\n  }\n  flat(depth=1,separator=\"_\"){\n    this.tree=flat_obj(this.tree,depth,separator);\n    return this;\n  }\n  reduce(){\n    return this;\n  }\n  sort(){\n    return this;\n  }\n  filter(){\n    return this;\n  }\n  map(callback,options={}){\n    this.tree=mapfun(callback,options,this.tree);\n    return this;\n  }\n}\nconst dir2tree = (root, options, callbacks=[]) => new Dir2Tree(root, options, callbacks);\nexport default dir2tree;\n",
      "stats": {
        "length": 3240,
        "size": 3.1640625,
        "lines": 98
      },
      "metadata": {
        "created": "2023-10-28T12:10:05.362Z",
        "modified": "2023-10-28T12:10:05.362Z",
        "permissions": 33188
      }
    }
  },
  ".gitignore_gitignore": {
    "content": "node_modules\n",
    "stats": {
      "length": 13,
      "size": 0.0126953125,
      "lines": 2
    },
    "metadata": {
      "created": "2023-10-28T12:10:05.358Z",
      "modified": "2023-10-28T12:10:05.358Z",
      "permissions": 33188
    }
  },
  ".npmignore_npmignore": {
    "content": "action.yml\ntest.js\n.gitignore\nrolllup.config.js\nExamples/\n.github/\nAutomation/\naddons/\n*.json\n",
    "stats": {
      "length": 94,
      "size": 0.091796875,
      "lines": 10
    },
    "metadata": {
      "created": "2023-10-28T12:10:05.358Z",
      "modified": "2023-10-28T12:10:05.358Z",
      "permissions": 33188
    }
  },
  "LICENSE_undefined": {
    "content": "MIT License\n\nCopyright (c) 2023 ZAKARIA ELALAOUI\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "stats": {
      "length": 1073,
      "size": 1.0478515625,
      "lines": 22
    },
    "metadata": {
      "created": "2023-10-28T12:10:05.362Z",
      "modified": "2023-10-28T12:10:05.362Z",
      "permissions": 33188
    }
  },
  "rollup.config_config": {
    "content": "import commonjs from '@rollup/plugin-commonjs';\nimport resolve from '@rollup/plugin-node-resolve';\nimport { mapfun } from 'mapfun';\n\nexport default {\n  input: 'src/index.js',\n  externals: [mapfun],\n  output: [{\n    file: 'dist/index.cjs',\n    format: 'cjs',\n  },{\n    file: 'dist/index.mjs',\n    format: 'es',\n  }\n],\n  globals: {\n    mapfun: 'mapfun',\n  },\n  plugins: [resolve(), commonjs()],\n};\n",
    "stats": {
      "length": 396,
      "size": 0.38671875,
      "lines": 21
    },
    "metadata": {
      "created": "2023-10-28T12:10:05.362Z",
      "modified": "2023-10-28T12:10:05.362Z",
      "permissions": 33188
    }
  },
  "package-lock_json": {
    "content": "{\n    \"name\": \"dir2tree\",\n    \"version\": \"0.2.2\",\n    \"lockfileVersion\": 2,\n    \"requires\": true,\n    \"packages\": {\n        \"\": {\n            \"name\": \"dir2tree\",\n            \"version\": \"0.2.2\",\n            \"license\": \"MIT\",\n            \"dependencies\": {\n                \"mapfun\": \"^0.9.17\"\n            },\n            \"devDependencies\": {\n                \"@rollup/plugin-commonjs\": \"^25.0.7\",\n                \"@rollup/plugin-node-resolve\": \"^15.2.3\",\n                \"rollup\": \"^4.1.5\"\n            }\n        },\n        \"node_modules/@jridgewell/sourcemap-codec\": {\n            \"version\": \"1.4.15\",\n            \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.15.tgz\",\n            \"integrity\": \"sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==\",\n            \"dev\": true\n        },\n        \"node_modules/@rollup/plugin-commonjs\": {\n            \"version\": \"25.0.7\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-25.0.7.tgz\",\n            \"integrity\": \"sha512-nEvcR+LRjEjsaSsc4x3XZfCCvZIaSMenZu/OiwOKGN2UhQpAYI7ru7czFvyWbErlpoGjnSX3D5Ch5FcMA3kRWQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"@rollup/pluginutils\": \"^5.0.1\",\n                \"commondir\": \"^1.0.1\",\n                \"estree-walker\": \"^2.0.2\",\n                \"glob\": \"^8.0.3\",\n                \"is-reference\": \"1.2.1\",\n                \"magic-string\": \"^0.30.3\"\n            },\n            \"engines\": {\n                \"node\": \">=14.0.0\"\n            },\n            \"peerDependencies\": {\n                \"rollup\": \"^2.68.0||^3.0.0||^4.0.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"rollup\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/@rollup/plugin-node-resolve\": {\n            \"version\": \"15.2.3\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-15.2.3.tgz\",\n            \"integrity\": \"sha512-j/lym8nf5E21LwBT4Df1VD6hRO2L2iwUeUmP7litikRsVp1H6NWx20NEp0Y7su+7XGc476GnXXc4kFeZNGmaSQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"@rollup/pluginutils\": \"^5.0.1\",\n                \"@types/resolve\": \"1.20.2\",\n                \"deepmerge\": \"^4.2.2\",\n                \"is-builtin-module\": \"^3.2.1\",\n                \"is-module\": \"^1.0.0\",\n                \"resolve\": \"^1.22.1\"\n            },\n            \"engines\": {\n                \"node\": \">=14.0.0\"\n            },\n            \"peerDependencies\": {\n                \"rollup\": \"^2.78.0||^3.0.0||^4.0.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"rollup\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/@rollup/pluginutils\": {\n            \"version\": \"5.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-5.0.5.tgz\",\n            \"integrity\": \"sha512-6aEYR910NyP73oHiJglti74iRyOwgFU4x3meH/H8OJx6Ry0j6cOVZ5X/wTvub7G7Ao6qaHBEaNsV3GLJkSsF+Q==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"@types/estree\": \"^1.0.0\",\n                \"estree-walker\": \"^2.0.2\",\n                \"picomatch\": \"^2.3.1\"\n            },\n            \"engines\": {\n                \"node\": \">=14.0.0\"\n            },\n            \"peerDependencies\": {\n                \"rollup\": \"^1.20.0||^2.0.0||^3.0.0||^4.0.0\"\n            },\n            \"peerDependenciesMeta\": {\n                \"rollup\": {\n                    \"optional\": true\n                }\n            }\n        },\n        \"node_modules/@rollup/rollup-android-arm-eabi\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.1.5.tgz\",\n            \"integrity\": \"sha512-/fwx6GS8cIbM2rTNyLMxjSCOegHywOdXO+kN9yFy018iCULcKZCyA3xvzw4bxyKbYfdSxQgdhbsl0egNcxerQw==\",\n            \"cpu\": [\n                \"arm\"\n            ],\n            \"dev\": true,\n            \"optional\": true,\n            \"os\": [\n                \"android\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-android-arm64\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.1.5.tgz\",\n            \"integrity\": \"sha512-tmXh7dyEt+JEz/NgDJlB1UeL/1gFV0v8qYzUAU42WZH4lmUJ5rp6/HkR2qUNC5jCgYEwd8/EfbHKtGIEfS4CUg==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"optional\": true,\n            \"os\": [\n                \"android\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-darwin-arm64\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.1.5.tgz\",\n            \"integrity\": \"sha512-lTDmLxdEVhzI3KCesZUrNbl3icBvPrDv/85JasY5gh4P2eAuDFmM4uj9HC5DdH0anLC0fwJ+1Uzasr4qOXcjRQ==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"optional\": true,\n            \"os\": [\n                \"darwin\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-darwin-x64\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.1.5.tgz\",\n            \"integrity\": \"sha512-v6qEHZyjWnIgcc4oiy8AIeFsUJAx+Kg0sLj+RE7ICwv3u7YC/+bSClxAiBASRjMzqsq0Z+I/pfxj+OD8mjBYxg==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"optional\": true,\n            \"os\": [\n                \"darwin\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-arm-gnueabihf\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.1.5.tgz\",\n            \"integrity\": \"sha512-WngCfwPEDUNbZR1FNO2TCROYUwJvRlbvPi3AS85bDUkkoRDBcjUIz42cuB1j4PKilmnZascL5xTMF/yU8YFayA==\",\n            \"cpu\": [\n                \"arm\"\n            ],\n            \"dev\": true,\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-arm64-gnu\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.1.5.tgz\",\n            \"integrity\": \"sha512-Q2A/PEP/UTPTOBwgar3mmCaApahoezai/8e/7f4GCLV6XWCpnU4YwkQQtla7d7nUnc792Ps7g1G0WMovzIknrA==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-arm64-musl\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.1.5.tgz\",\n            \"integrity\": \"sha512-84aBKNAVzTU/eG3tb2+kR4NGRAtm2YVW/KHwkGGDR4z1k4hyrDbuImsfs/6J74t6y0YLOe9HOSu7ejRjzUBGVQ==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-x64-gnu\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.1.5.tgz\",\n            \"integrity\": \"sha512-mldtP9UEBurIq2+GYMdNeiqCLW1fdgf4KdkMR/QegAeXk4jFHkKQl7p0NITrKFVyVqzISGXH5gR6GSTBH4wszw==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-linux-x64-musl\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.1.5.tgz\",\n            \"integrity\": \"sha512-36p+nMcSxjAEzfU47+by102HolUtf/EfgBAidocTKAofJMTqG5QD50qzaFLk4QO+z7Qvg4qd0wr99jGAwnKOig==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"optional\": true,\n            \"os\": [\n                \"linux\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-win32-arm64-msvc\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.1.5.tgz\",\n            \"integrity\": \"sha512-5oxhubo0A3J8aF/tG+6jHBg785HF8/88kl1YnfbDKmnqMxz/EFiAQDH9cq6lbnxofjn8tlq5KiTf0crJGOGThg==\",\n            \"cpu\": [\n                \"arm64\"\n            ],\n            \"dev\": true,\n            \"optional\": true,\n            \"os\": [\n                \"win32\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-win32-ia32-msvc\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.1.5.tgz\",\n            \"integrity\": \"sha512-uVQyBREKX9ErofL8KAZ4iVlqzSZOXSIG+BOLYuz5FD+Cg6jh1eLIeUa3Q4SgX0QaTRFeeAgSNqCC+8kZrZBpSw==\",\n            \"cpu\": [\n                \"ia32\"\n            ],\n            \"dev\": true,\n            \"optional\": true,\n            \"os\": [\n                \"win32\"\n            ]\n        },\n        \"node_modules/@rollup/rollup-win32-x64-msvc\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.1.5.tgz\",\n            \"integrity\": \"sha512-FQ5qYqRJ2vUBSom3Fos8o/6UvAMOvlus4+HGCAifH1TagbbwVnVVe0o01J1V52EWnQ8kmfpJDJ0FMrfM5yzcSA==\",\n            \"cpu\": [\n                \"x64\"\n            ],\n            \"dev\": true,\n            \"optional\": true,\n            \"os\": [\n                \"win32\"\n            ]\n        },\n        \"node_modules/@types/estree\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.3.tgz\",\n            \"integrity\": \"sha512-CS2rOaoQ/eAgAfcTfq6amKG7bsN+EMcgGY4FAFQdvSj2y1ixvOZTUA9mOtCai7E1SYu283XNw7urKK30nP3wkQ==\",\n            \"dev\": true\n        },\n        \"node_modules/@types/resolve\": {\n            \"version\": \"1.20.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/resolve/-/resolve-1.20.2.tgz\",\n            \"integrity\": \"sha512-60BCwRFOZCQhDncwQdxxeOEEkbc5dIMccYLwbxsS4TUNeVECQ/pBJ0j09mrHOl/JJvpRPGwO9SvE4nR2Nb/a4Q==\",\n            \"dev\": true\n        },\n        \"node_modules/balanced-match\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n            \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n            \"dev\": true\n        },\n        \"node_modules/brace-expansion\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n            \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"balanced-match\": \"^1.0.0\"\n            }\n        },\n        \"node_modules/builtin-modules\": {\n            \"version\": \"3.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/builtin-modules/-/builtin-modules-3.3.0.tgz\",\n            \"integrity\": \"sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=6\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/commondir\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz\",\n            \"integrity\": \"sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg==\",\n            \"dev\": true\n        },\n        \"node_modules/deepmerge\": {\n            \"version\": \"4.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\n            \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=0.10.0\"\n            }\n        },\n        \"node_modules/estree-walker\": {\n            \"version\": \"2.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz\",\n            \"integrity\": \"sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==\",\n            \"dev\": true\n        },\n        \"node_modules/fs.realpath\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n            \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n            \"dev\": true\n        },\n        \"node_modules/fsevents\": {\n            \"version\": \"2.3.3\",\n            \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n            \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n            \"dev\": true,\n            \"hasInstallScript\": true,\n            \"optional\": true,\n            \"os\": [\n                \"darwin\"\n            ],\n            \"engines\": {\n                \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n            }\n        },\n        \"node_modules/function-bind\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n            \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n            \"dev\": true,\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/glob\": {\n            \"version\": \"8.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/glob/-/glob-8.1.0.tgz\",\n            \"integrity\": \"sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"fs.realpath\": \"^1.0.0\",\n                \"inflight\": \"^1.0.4\",\n                \"inherits\": \"2\",\n                \"minimatch\": \"^5.0.1\",\n                \"once\": \"^1.3.0\"\n            },\n            \"engines\": {\n                \"node\": \">=12\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/isaacs\"\n            }\n        },\n        \"node_modules/hasown\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.0.tgz\",\n            \"integrity\": \"sha512-vUptKVTpIJhcczKBbgnS+RtcuYMB8+oNzPK2/Hp3hanz8JmpATdmmgLgSaadVREkDm+e2giHwY3ZRkyjSIDDFA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"function-bind\": \"^1.1.2\"\n            },\n            \"engines\": {\n                \"node\": \">= 0.4\"\n            }\n        },\n        \"node_modules/inflight\": {\n            \"version\": \"1.0.6\",\n            \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n            \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"once\": \"^1.3.0\",\n                \"wrappy\": \"1\"\n            }\n        },\n        \"node_modules/inherits\": {\n            \"version\": \"2.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n            \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n            \"dev\": true\n        },\n        \"node_modules/is-builtin-module\": {\n            \"version\": \"3.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-3.2.1.tgz\",\n            \"integrity\": \"sha512-BSLE3HnV2syZ0FK0iMA/yUGplUeMmNz4AW5fnTunbCIqZi4vG3WjJT9FHMy5D69xmAYBHXQhJdALdpwVxV501A==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"builtin-modules\": \"^3.3.0\"\n            },\n            \"engines\": {\n                \"node\": \">=6\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/sindresorhus\"\n            }\n        },\n        \"node_modules/is-core-module\": {\n            \"version\": \"2.13.1\",\n            \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.13.1.tgz\",\n            \"integrity\": \"sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"hasown\": \"^2.0.0\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/is-module\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz\",\n            \"integrity\": \"sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g==\",\n            \"dev\": true\n        },\n        \"node_modules/is-reference\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz\",\n            \"integrity\": \"sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"@types/estree\": \"*\"\n            }\n        },\n        \"node_modules/magic-string\": {\n            \"version\": \"0.30.5\",\n            \"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.30.5.tgz\",\n            \"integrity\": \"sha512-7xlpfBaQaP/T6Vh8MO/EqXSW5En6INHEvEXQiuff7Gku0PWjU3uf6w/j9o7O+SpB5fOAkrI5HeoNgwjEO0pFsA==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"@jridgewell/sourcemap-codec\": \"^1.4.15\"\n            },\n            \"engines\": {\n                \"node\": \">=12\"\n            }\n        },\n        \"node_modules/mapfun\": {\n            \"version\": \"0.9.17\",\n            \"resolved\": \"https://registry.npmjs.org/mapfun/-/mapfun-0.9.17.tgz\",\n            \"integrity\": \"sha512-mSzzPrOB15kn4ennD1Lr8odWryZ5i8c19xfzHdt52QYp4UzQb+b6G9tN7V0kKJGd285W8crKdBejqtkXwtWFPQ==\"\n        },\n        \"node_modules/minimatch\": {\n            \"version\": \"5.1.6\",\n            \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz\",\n            \"integrity\": \"sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"brace-expansion\": \"^2.0.1\"\n            },\n            \"engines\": {\n                \"node\": \">=10\"\n            }\n        },\n        \"node_modules/once\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n            \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"wrappy\": \"1\"\n            }\n        },\n        \"node_modules/path-parse\": {\n            \"version\": \"1.0.7\",\n            \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n            \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\n            \"dev\": true\n        },\n        \"node_modules/picomatch\": {\n            \"version\": \"2.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n            \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">=8.6\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/jonschlinkert\"\n            }\n        },\n        \"node_modules/resolve\": {\n            \"version\": \"1.22.8\",\n            \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz\",\n            \"integrity\": \"sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==\",\n            \"dev\": true,\n            \"dependencies\": {\n                \"is-core-module\": \"^2.13.0\",\n                \"path-parse\": \"^1.0.7\",\n                \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n            },\n            \"bin\": {\n                \"resolve\": \"bin/resolve\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/rollup\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/rollup/-/rollup-4.1.5.tgz\",\n            \"integrity\": \"sha512-AEw14/q4NHYQkQlngoSae2yi7hDBeT9w84aEzdgCr39+2RL+iTG84lGTkgC1Wp5igtquN64cNzuzZKVz+U6jOg==\",\n            \"dev\": true,\n            \"bin\": {\n                \"rollup\": \"dist/bin/rollup\"\n            },\n            \"engines\": {\n                \"node\": \">=18.0.0\",\n                \"npm\": \">=8.0.0\"\n            },\n            \"optionalDependencies\": {\n                \"@rollup/rollup-android-arm-eabi\": \"4.1.5\",\n                \"@rollup/rollup-android-arm64\": \"4.1.5\",\n                \"@rollup/rollup-darwin-arm64\": \"4.1.5\",\n                \"@rollup/rollup-darwin-x64\": \"4.1.5\",\n                \"@rollup/rollup-linux-arm-gnueabihf\": \"4.1.5\",\n                \"@rollup/rollup-linux-arm64-gnu\": \"4.1.5\",\n                \"@rollup/rollup-linux-arm64-musl\": \"4.1.5\",\n                \"@rollup/rollup-linux-x64-gnu\": \"4.1.5\",\n                \"@rollup/rollup-linux-x64-musl\": \"4.1.5\",\n                \"@rollup/rollup-win32-arm64-msvc\": \"4.1.5\",\n                \"@rollup/rollup-win32-ia32-msvc\": \"4.1.5\",\n                \"@rollup/rollup-win32-x64-msvc\": \"4.1.5\",\n                \"fsevents\": \"~2.3.2\"\n            }\n        },\n        \"node_modules/supports-preserve-symlinks-flag\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n            \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n            \"dev\": true,\n            \"engines\": {\n                \"node\": \">= 0.4\"\n            },\n            \"funding\": {\n                \"url\": \"https://github.com/sponsors/ljharb\"\n            }\n        },\n        \"node_modules/wrappy\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n            \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n            \"dev\": true\n        }\n    },\n    \"dependencies\": {\n        \"@jridgewell/sourcemap-codec\": {\n            \"version\": \"1.4.15\",\n            \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.15.tgz\",\n            \"integrity\": \"sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==\",\n            \"dev\": true\n        },\n        \"@rollup/plugin-commonjs\": {\n            \"version\": \"25.0.7\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-25.0.7.tgz\",\n            \"integrity\": \"sha512-nEvcR+LRjEjsaSsc4x3XZfCCvZIaSMenZu/OiwOKGN2UhQpAYI7ru7czFvyWbErlpoGjnSX3D5Ch5FcMA3kRWQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@rollup/pluginutils\": \"^5.0.1\",\n                \"commondir\": \"^1.0.1\",\n                \"estree-walker\": \"^2.0.2\",\n                \"glob\": \"^8.0.3\",\n                \"is-reference\": \"1.2.1\",\n                \"magic-string\": \"^0.30.3\"\n            }\n        },\n        \"@rollup/plugin-node-resolve\": {\n            \"version\": \"15.2.3\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-15.2.3.tgz\",\n            \"integrity\": \"sha512-j/lym8nf5E21LwBT4Df1VD6hRO2L2iwUeUmP7litikRsVp1H6NWx20NEp0Y7su+7XGc476GnXXc4kFeZNGmaSQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@rollup/pluginutils\": \"^5.0.1\",\n                \"@types/resolve\": \"1.20.2\",\n                \"deepmerge\": \"^4.2.2\",\n                \"is-builtin-module\": \"^3.2.1\",\n                \"is-module\": \"^1.0.0\",\n                \"resolve\": \"^1.22.1\"\n            }\n        },\n        \"@rollup/pluginutils\": {\n            \"version\": \"5.0.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-5.0.5.tgz\",\n            \"integrity\": \"sha512-6aEYR910NyP73oHiJglti74iRyOwgFU4x3meH/H8OJx6Ry0j6cOVZ5X/wTvub7G7Ao6qaHBEaNsV3GLJkSsF+Q==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/estree\": \"^1.0.0\",\n                \"estree-walker\": \"^2.0.2\",\n                \"picomatch\": \"^2.3.1\"\n            }\n        },\n        \"@rollup/rollup-android-arm-eabi\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.1.5.tgz\",\n            \"integrity\": \"sha512-/fwx6GS8cIbM2rTNyLMxjSCOegHywOdXO+kN9yFy018iCULcKZCyA3xvzw4bxyKbYfdSxQgdhbsl0egNcxerQw==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"@rollup/rollup-android-arm64\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.1.5.tgz\",\n            \"integrity\": \"sha512-tmXh7dyEt+JEz/NgDJlB1UeL/1gFV0v8qYzUAU42WZH4lmUJ5rp6/HkR2qUNC5jCgYEwd8/EfbHKtGIEfS4CUg==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"@rollup/rollup-darwin-arm64\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.1.5.tgz\",\n            \"integrity\": \"sha512-lTDmLxdEVhzI3KCesZUrNbl3icBvPrDv/85JasY5gh4P2eAuDFmM4uj9HC5DdH0anLC0fwJ+1Uzasr4qOXcjRQ==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"@rollup/rollup-darwin-x64\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.1.5.tgz\",\n            \"integrity\": \"sha512-v6qEHZyjWnIgcc4oiy8AIeFsUJAx+Kg0sLj+RE7ICwv3u7YC/+bSClxAiBASRjMzqsq0Z+I/pfxj+OD8mjBYxg==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"@rollup/rollup-linux-arm-gnueabihf\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.1.5.tgz\",\n            \"integrity\": \"sha512-WngCfwPEDUNbZR1FNO2TCROYUwJvRlbvPi3AS85bDUkkoRDBcjUIz42cuB1j4PKilmnZascL5xTMF/yU8YFayA==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"@rollup/rollup-linux-arm64-gnu\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.1.5.tgz\",\n            \"integrity\": \"sha512-Q2A/PEP/UTPTOBwgar3mmCaApahoezai/8e/7f4GCLV6XWCpnU4YwkQQtla7d7nUnc792Ps7g1G0WMovzIknrA==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"@rollup/rollup-linux-arm64-musl\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.1.5.tgz\",\n            \"integrity\": \"sha512-84aBKNAVzTU/eG3tb2+kR4NGRAtm2YVW/KHwkGGDR4z1k4hyrDbuImsfs/6J74t6y0YLOe9HOSu7ejRjzUBGVQ==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"@rollup/rollup-linux-x64-gnu\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.1.5.tgz\",\n            \"integrity\": \"sha512-mldtP9UEBurIq2+GYMdNeiqCLW1fdgf4KdkMR/QegAeXk4jFHkKQl7p0NITrKFVyVqzISGXH5gR6GSTBH4wszw==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"@rollup/rollup-linux-x64-musl\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.1.5.tgz\",\n            \"integrity\": \"sha512-36p+nMcSxjAEzfU47+by102HolUtf/EfgBAidocTKAofJMTqG5QD50qzaFLk4QO+z7Qvg4qd0wr99jGAwnKOig==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"@rollup/rollup-win32-arm64-msvc\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.1.5.tgz\",\n            \"integrity\": \"sha512-5oxhubo0A3J8aF/tG+6jHBg785HF8/88kl1YnfbDKmnqMxz/EFiAQDH9cq6lbnxofjn8tlq5KiTf0crJGOGThg==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"@rollup/rollup-win32-ia32-msvc\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.1.5.tgz\",\n            \"integrity\": \"sha512-uVQyBREKX9ErofL8KAZ4iVlqzSZOXSIG+BOLYuz5FD+Cg6jh1eLIeUa3Q4SgX0QaTRFeeAgSNqCC+8kZrZBpSw==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"@rollup/rollup-win32-x64-msvc\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.1.5.tgz\",\n            \"integrity\": \"sha512-FQ5qYqRJ2vUBSom3Fos8o/6UvAMOvlus4+HGCAifH1TagbbwVnVVe0o01J1V52EWnQ8kmfpJDJ0FMrfM5yzcSA==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"@types/estree\": {\n            \"version\": \"1.0.3\",\n            \"resolved\": \"https://registry.npmjs.org/@types/estree/-/estree-1.0.3.tgz\",\n            \"integrity\": \"sha512-CS2rOaoQ/eAgAfcTfq6amKG7bsN+EMcgGY4FAFQdvSj2y1ixvOZTUA9mOtCai7E1SYu283XNw7urKK30nP3wkQ==\",\n            \"dev\": true\n        },\n        \"@types/resolve\": {\n            \"version\": \"1.20.2\",\n            \"resolved\": \"https://registry.npmjs.org/@types/resolve/-/resolve-1.20.2.tgz\",\n            \"integrity\": \"sha512-60BCwRFOZCQhDncwQdxxeOEEkbc5dIMccYLwbxsS4TUNeVECQ/pBJ0j09mrHOl/JJvpRPGwO9SvE4nR2Nb/a4Q==\",\n            \"dev\": true\n        },\n        \"balanced-match\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n            \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n            \"dev\": true\n        },\n        \"brace-expansion\": {\n            \"version\": \"2.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n            \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"balanced-match\": \"^1.0.0\"\n            }\n        },\n        \"builtin-modules\": {\n            \"version\": \"3.3.0\",\n            \"resolved\": \"https://registry.npmjs.org/builtin-modules/-/builtin-modules-3.3.0.tgz\",\n            \"integrity\": \"sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw==\",\n            \"dev\": true\n        },\n        \"commondir\": {\n            \"version\": \"1.0.1\",\n            \"resolved\": \"https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz\",\n            \"integrity\": \"sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg==\",\n            \"dev\": true\n        },\n        \"deepmerge\": {\n            \"version\": \"4.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\n            \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\n            \"dev\": true\n        },\n        \"estree-walker\": {\n            \"version\": \"2.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz\",\n            \"integrity\": \"sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==\",\n            \"dev\": true\n        },\n        \"fs.realpath\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n            \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n            \"dev\": true\n        },\n        \"fsevents\": {\n            \"version\": \"2.3.3\",\n            \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n            \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n            \"dev\": true,\n            \"optional\": true\n        },\n        \"function-bind\": {\n            \"version\": \"1.1.2\",\n            \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n            \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n            \"dev\": true\n        },\n        \"glob\": {\n            \"version\": \"8.1.0\",\n            \"resolved\": \"https://registry.npmjs.org/glob/-/glob-8.1.0.tgz\",\n            \"integrity\": \"sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"fs.realpath\": \"^1.0.0\",\n                \"inflight\": \"^1.0.4\",\n                \"inherits\": \"2\",\n                \"minimatch\": \"^5.0.1\",\n                \"once\": \"^1.3.0\"\n            }\n        },\n        \"hasown\": {\n            \"version\": \"2.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.0.tgz\",\n            \"integrity\": \"sha512-vUptKVTpIJhcczKBbgnS+RtcuYMB8+oNzPK2/Hp3hanz8JmpATdmmgLgSaadVREkDm+e2giHwY3ZRkyjSIDDFA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"function-bind\": \"^1.1.2\"\n            }\n        },\n        \"inflight\": {\n            \"version\": \"1.0.6\",\n            \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n            \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"once\": \"^1.3.0\",\n                \"wrappy\": \"1\"\n            }\n        },\n        \"inherits\": {\n            \"version\": \"2.0.4\",\n            \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n            \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n            \"dev\": true\n        },\n        \"is-builtin-module\": {\n            \"version\": \"3.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-3.2.1.tgz\",\n            \"integrity\": \"sha512-BSLE3HnV2syZ0FK0iMA/yUGplUeMmNz4AW5fnTunbCIqZi4vG3WjJT9FHMy5D69xmAYBHXQhJdALdpwVxV501A==\",\n            \"dev\": true,\n            \"requires\": {\n                \"builtin-modules\": \"^3.3.0\"\n            }\n        },\n        \"is-core-module\": {\n            \"version\": \"2.13.1\",\n            \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.13.1.tgz\",\n            \"integrity\": \"sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"hasown\": \"^2.0.0\"\n            }\n        },\n        \"is-module\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz\",\n            \"integrity\": \"sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g==\",\n            \"dev\": true\n        },\n        \"is-reference\": {\n            \"version\": \"1.2.1\",\n            \"resolved\": \"https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz\",\n            \"integrity\": \"sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@types/estree\": \"*\"\n            }\n        },\n        \"magic-string\": {\n            \"version\": \"0.30.5\",\n            \"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.30.5.tgz\",\n            \"integrity\": \"sha512-7xlpfBaQaP/T6Vh8MO/EqXSW5En6INHEvEXQiuff7Gku0PWjU3uf6w/j9o7O+SpB5fOAkrI5HeoNgwjEO0pFsA==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@jridgewell/sourcemap-codec\": \"^1.4.15\"\n            }\n        },\n        \"mapfun\": {\n            \"version\": \"0.9.17\",\n            \"resolved\": \"https://registry.npmjs.org/mapfun/-/mapfun-0.9.17.tgz\",\n            \"integrity\": \"sha512-mSzzPrOB15kn4ennD1Lr8odWryZ5i8c19xfzHdt52QYp4UzQb+b6G9tN7V0kKJGd285W8crKdBejqtkXwtWFPQ==\"\n        },\n        \"minimatch\": {\n            \"version\": \"5.1.6\",\n            \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz\",\n            \"integrity\": \"sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==\",\n            \"dev\": true,\n            \"requires\": {\n                \"brace-expansion\": \"^2.0.1\"\n            }\n        },\n        \"once\": {\n            \"version\": \"1.4.0\",\n            \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n            \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n            \"dev\": true,\n            \"requires\": {\n                \"wrappy\": \"1\"\n            }\n        },\n        \"path-parse\": {\n            \"version\": \"1.0.7\",\n            \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n            \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\n            \"dev\": true\n        },\n        \"picomatch\": {\n            \"version\": \"2.3.1\",\n            \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n            \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n            \"dev\": true\n        },\n        \"resolve\": {\n            \"version\": \"1.22.8\",\n            \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz\",\n            \"integrity\": \"sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==\",\n            \"dev\": true,\n            \"requires\": {\n                \"is-core-module\": \"^2.13.0\",\n                \"path-parse\": \"^1.0.7\",\n                \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n            }\n        },\n        \"rollup\": {\n            \"version\": \"4.1.5\",\n            \"resolved\": \"https://registry.npmjs.org/rollup/-/rollup-4.1.5.tgz\",\n            \"integrity\": \"sha512-AEw14/q4NHYQkQlngoSae2yi7hDBeT9w84aEzdgCr39+2RL+iTG84lGTkgC1Wp5igtquN64cNzuzZKVz+U6jOg==\",\n            \"dev\": true,\n            \"requires\": {\n                \"@rollup/rollup-android-arm-eabi\": \"4.1.5\",\n                \"@rollup/rollup-android-arm64\": \"4.1.5\",\n                \"@rollup/rollup-darwin-arm64\": \"4.1.5\",\n                \"@rollup/rollup-darwin-x64\": \"4.1.5\",\n                \"@rollup/rollup-linux-arm-gnueabihf\": \"4.1.5\",\n                \"@rollup/rollup-linux-arm64-gnu\": \"4.1.5\",\n                \"@rollup/rollup-linux-arm64-musl\": \"4.1.5\",\n                \"@rollup/rollup-linux-x64-gnu\": \"4.1.5\",\n                \"@rollup/rollup-linux-x64-musl\": \"4.1.5\",\n                \"@rollup/rollup-win32-arm64-msvc\": \"4.1.5\",\n                \"@rollup/rollup-win32-ia32-msvc\": \"4.1.5\",\n                \"@rollup/rollup-win32-x64-msvc\": \"4.1.5\",\n                \"fsevents\": \"~2.3.2\"\n            }\n        },\n        \"supports-preserve-symlinks-flag\": {\n            \"version\": \"1.0.0\",\n            \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n            \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n            \"dev\": true\n        },\n        \"wrappy\": {\n            \"version\": \"1.0.2\",\n            \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n            \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n            \"dev\": true\n        }\n    }\n}\n",
    "stats": {
      "length": 40505,
      "size": 39.5556640625,
      "lines": 913
    },
    "metadata": {
      "created": "2023-10-28T12:10:05.362Z",
      "modified": "2023-10-28T12:10:05.362Z",
      "permissions": 33188
    }
  },
  "package_json": {
    "content": "{\n    \"name\": \"dir2tree\",\n    \"version\": \"0.3.2\",\n    \"source\": \"src/index.js\",\n    \"exports\": {\n        \".\": {\n          \"import\": \"./dist/index.mjs\",\n          \"require\": \"./dist/index.cjs\"\n        }\n      },\n    \"type\": \"module\",\n    \"scripts\": {\n        \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n        \"start\": \"node Automation/index.js\",\n        \"build\": \"rollup -c rollup.config.js\"\n    },\n    \"author\": \"zakaria elalaoui (https://github.com/zakarialaoui10)\",\n    \"description\": \"a user-friendly Node.js tool for creating organized directory trees from a root directory. It offers customization options for tailored tree generation and content analysis\",\n    \"keywords\": [\n        \"directory\",\n        \"tree\",\n        \"structure\",\n        \"filesystem\",\n        \"file management\",\n        \"directory tree\",\n        \"json\"\n    ],\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"git+https://github.com/zakarialaoui10/dir2tree.git\"\n    },\n    \"homepage\": \"https://github.com/zakarialaoui10/dir2tree\",\n    \"bugs\": {\n        \"url\": \"https://github.com/zakarialaoui10/dir2tree/issues\"\n    },\n    \"license\": \"MIT\",\n    \"dependencies\": {\n        \"mapfun\": \"^0.9.17\"\n    },\n    \"devDependencies\": {\n        \"@rollup/plugin-commonjs\": \"^25.0.7\",\n        \"@rollup/plugin-node-resolve\": \"^15.2.3\",\n        \"rollup\": \"^4.1.5\"\n    }\n}\n",
    "stats": {
      "length": 1352,
      "size": 1.3203125,
      "lines": 46
    },
    "metadata": {
      "created": "2023-10-28T12:10:05.362Z",
      "modified": "2023-10-28T12:10:05.362Z",
      "permissions": 33188
    }
  },
  "README_md": {
    "content": "## Demo \n[Want to try !](https://replit.com/@zakariaelalaoui/dir2tree#generated.json)\n## Install ![npm](https://img.shields.io/npm/v/dir2tree)\n```bash\nnpm install dir2tree\n```\n## Import\n### Common Js\n```js\nconst dir2tree=require(\"dir2tree\")\n```\n### Es Module\n```js\nimport dir2tree from dir2tree\n```\n## Syntaxe\n### Initialise\n```js\nconst MyTree=dir2tree(ROOT,OPTIONS,CALLBACKS)\nMyTree.write(Target,\"generated_file.json\")\n```\n#### Arguments\n- **`ROOT`** : The path to the root directory that we want handle. it's ***`required`***\n- **`OPTIONS`** : An object containing various configuration options to control the behavior of the tree generation.it's ***`optional`*** , These options might include :\n  - **`fileContent`** : (***Boolean***)\n  - **`fileName`** : (***Boolean***)\n  - **`fileExtension`** : (***Boolean***)\n  - **`length`** : (***Boolean***)\n  - **`size`** : (***Boolean***)\n  - **`linesCount`** : (***Boolean***)\n  - **`created`** : (***Boolean***)\n  - **`lastModified`** : (***Boolean***)\n  - **`skip`** :\n    - **`folder`** : (***String[]***)\n    - **`file`** : (***String[]***)\n    - **`extension`** : (***String[]***)\n  - **`sortBy`** : (***String***) , possible values : `\"names\"`,`\"extension\"`,`\"size\"`,`\"lines\"`,`\"created\"`,`\"lastmodified\"`,\n  - **`order`** : (***Number***)\n- **`CALLBACKS`** : it's ***`optional`***\n### Methodes\n- **`.write(Target, filename)`**\n- **`.flat(depth, separator)`**\n### Use It in your Github Repository\nCreate a workflow file like the one below.\n.github/workflow/dir2tree.yml\n```yml\nname: Generate Directory Tree using zakarialaoui10/dir2tree\non:\n  push: \n    branches:\n      - main\njobs:\n  build:\n    permissions :\n      contents : write\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n        with:\n          ref: ${{ github.head_ref }}\n      - name: Generate Directory Tree\n        uses: zakarialaoui10/dir2tree@main\n      - name: Commit & Push\n        run: |\n          git config user.name github-actions\n          git config user.email github-actions@github.com\n          git add -A .\n          git commit -m \"generated by zakarialaoui10/dir2tree\"\n          git push\n        env:\n          CUSTOM_TOKEN: ${{ secrets.CUSTOM_TOKEN }}\n```\n## License \nThis projet is licensed under the terms of MIT License .<br>\n<img src=\"https://img.shields.io/github/license/zakarialaoui10/zikojs?color=rgb%2820%2C21%2C169%29\">\n",
    "stats": {
      "length": 2414,
      "size": 2.357421875,
      "lines": 77
    },
    "metadata": {
      "created": "2023-10-28T12:10:05.362Z",
      "modified": "2023-10-28T12:10:05.362Z",
      "permissions": 33188
    }
  },
  "action_yml": {
    "content": "name: 'Master'\ndescription: 'dir2tree'\nruns:\n  using: 'node16'\n  main: 'Automation/index.js'\n",
    "stats": {
      "length": 93,
      "size": 0.0908203125,
      "lines": 6
    },
    "metadata": {
      "created": "2023-10-28T12:10:05.362Z",
      "modified": "2023-10-28T12:10:05.362Z",
      "permissions": 33188
    }
  }
}